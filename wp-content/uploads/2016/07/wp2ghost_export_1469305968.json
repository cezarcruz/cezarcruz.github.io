{"data":{"posts":[{"id":11,"title":"Por que criar um blog?","slug":"porque","markdown":"\nNa verdade gostaria de fazer desse blog uma base de conhecimento, tanto pra mim como pra quem precisar de uma ajudinha, e um local onde eu possa compartilhar meus estudos.\n\n\n","html":"<p>Na verdade gostaria de fazer desse blog uma base de conhecimento, tanto pra mim como pra quem precisar de uma ajudinha, e um local onde eu possa compartilhar meus estudos.<\/p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Thu, 13 Jun 2013 00:18:29 +0000","created_by":1,"updated_at":"Thu, 13 Jun 2013 00:18:29 +0000","updated_by":1,"published_at":"Thu, 13 Jun 2013 00:18:29 +0000","published_by":1},{"id":13,"title":"Hostinger Brasil, hospedagem gratuita","slug":"hostinger-brasil-hospedagem-gratuita","markdown":"\n[![Hospedagem Gratuita](http:\/\/hostinger.com.br\/banners\/br\/hostinger-600x400-2.gif)](http:\/\/api.hostinger.com.br\/redir\/1553901)\n\nOl\u00e1, nesse post vou falar um pouco da Hostinger Brasil, um servi\u00e7o de hospedagem PHP e MySQL que \u00e9 gratuito e oferece bons recurso.\n\nConheci a Hostinger Brasil por acaso, queria hospedar um site em PHP, mais pra conhecer melhor a linguagem, e me deparei com a [Hostinger Brasil.](http:\/\/api.hostinger.com.br\/redir\/1553901)\n\nA Hostinger Brasil oferece 3 tipos de planos de hospedagem: Gratuito, Premium e Busines.\n\nO plano gratuito j\u00e1 resolve muitos problemas de quem est\u00e1 iniciando ou querendo se familiarizar com hospedagem de sites. O benef\u00edcios do plano gratuito, al\u00e9m de hospedar um dom\u00ednio, s\u00e3o:\n\n- PHP\n- 2 Bases MySQL\n- 2GB de espa\u00e7o em disco\n- 100GB de banda pra transfer\u00eancia de dados\n- Sub dom\u00ednios ilimitados\n\n\u00c9 uma quantidade muito boa, j\u00e1 d\u00e1 pra come\u00e7ar a divulgar seu site pessoal ou at\u00e9 come\u00e7ar um neg\u00f3cio.\n\nOs outros dois planos, Premium e Busines, oferecem espa\u00e7o em disco ilimitados, banda ilimitadas, bases mysql ilimitadas entre outras coisas como SSL, acesso ao SSH, conex\u00e3o remota, suporte\u2026\n\nTodas os planos tem CPanel com instala\u00e7\u00e3o de v\u00e1rios scripts (WordPress, Joomla, PhpBB), automatizados, uma interface muito simples e intuitiva.\n\nE pra fechar muito bem, a Hostinger Brasil oferece um sistema de referencias, onde voc\u00ea pode ganhar pr\u00eamios ao indicar novos usu\u00e1rios, a lista de pr\u00eamios voc\u00ea encontra [aqui](http:\/\/www.hostinger.com.br\/programa-de-referencias).\n\nRecomendo fortemente o uso da Hostinger Brasil, e claro, atrav\u00e9s do meu [link.](http:\/\/api.hostinger.com.br\/redir\/1553901)\n\nSe encontrar algum problema, vou postar no blog, mas por enquanto s\u00f3 elogios, j\u00e1 estou pensando em migrar para um plano Premium.\n\nValeu! E at\u00e9 mais!\n\n\u00a0\n\n\u00a0\n\n\n","html":"<p><a href=\"http:\/\/api.hostinger.com.br\/redir\/1553901\" target=\"_blank\"><img alt=\"Hospedagem Gratuita\" src=\"http:\/\/hostinger.com.br\/banners\/br\/hostinger-600x400-2.gif\" width=\"600\" height=\"400\" border=\"0\" \/><\/a><\/p>\n<p>Ol\u00e1, nesse post vou falar um pouco da Hostinger Brasil, um servi\u00e7o de hospedagem PHP e MySQL que \u00e9 gratuito e oferece bons recurso.<\/p>\n<p>Conheci a Hostinger Brasil por acaso, queria hospedar um site em PHP, mais pra conhecer melhor a linguagem, e me deparei com a <a href=\"http:\/\/api.hostinger.com.br\/redir\/1553901\" target=\"_blank\">Hostinger Brasil.<\/a><\/p>\n<p>A Hostinger Brasil oferece 3 tipos de planos de hospedagem: Gratuito, Premium e Busines.<\/p>\n<p>O plano gratuito j\u00e1 resolve muitos problemas de quem est\u00e1 iniciando ou querendo se familiarizar com hospedagem de sites. O benef\u00edcios do plano gratuito, al\u00e9m de hospedar um dom\u00ednio, s\u00e3o:<\/p>\n<ul>\n<li>PHP<\/li>\n<li>2 Bases MySQL<\/li>\n<li>2GB de espa\u00e7o em disco<\/li>\n<li>100GB de banda pra transfer\u00eancia de dados<\/li>\n<li>Sub dom\u00ednios ilimitados<\/li>\n<\/ul>\n<p>\u00c9 uma quantidade muito boa, j\u00e1 d\u00e1 pra come\u00e7ar a divulgar seu site pessoal ou at\u00e9 come\u00e7ar um neg\u00f3cio.<\/p>\n<p>Os outros dois planos, Premium e Busines, oferecem espa\u00e7o em disco ilimitados, banda ilimitadas, bases mysql ilimitadas entre outras coisas como SSL, acesso ao SSH, conex\u00e3o remota, suporte&#8230;<\/p>\n<p>Todas os planos tem CPanel com instala\u00e7\u00e3o de v\u00e1rios scripts (WordPress, Joomla, PhpBB), automatizados, uma interface muito simples e intuitiva.<\/p>\n<p>E pra fechar muito bem, a Hostinger Brasil oferece um sistema de referencias, onde voc\u00ea pode ganhar pr\u00eamios ao indicar novos usu\u00e1rios, a lista de pr\u00eamios voc\u00ea encontra <a href=\"http:\/\/www.hostinger.com.br\/programa-de-referencias\" target=\"_blank\">aqui<\/a>.<\/p>\n<p>Recomendo fortemente o uso da Hostinger Brasil, e claro, atrav\u00e9s do meu <a href=\"http:\/\/api.hostinger.com.br\/redir\/1553901\" target=\"_blank\">link.<\/a><\/p>\n<p>Se encontrar algum problema, vou postar no blog, mas por enquanto s\u00f3 elogios, j\u00e1 estou pensando em migrar para um plano Premium.<\/p>\n<p>Valeu! E at\u00e9 mais!<\/p>\n<p>&nbsp;<\/p>\n<p>&nbsp;<\/p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Thu, 13 Jun 2013 00:19:23 +0000","created_by":1,"updated_at":"Thu, 13 Jun 2013 00:19:23 +0000","updated_by":1,"published_at":"Thu, 13 Jun 2013 00:19:23 +0000","published_by":1},{"id":15,"title":"Como deixar uma div transparente (CSS)","slug":"como-deixar-uma-div-transparente-css","markdown":"\nOl\u00e1s,\n\naqui n\u00e3o \u00e9 bem um tutorial, est\u00e1 mais para uma dica:\n\nSe voc\u00ea quer deixar sua div transparente, voc\u00ea pode utilizar isso, por exemplo, pra deixar a imagem de background vis\u00edvel, deve ser inserido no seu css a seguinte regra:\n\n.transparente{ background: rgb(0, 0, 0) transparent; background: rgba(0, 0, 0, 0.7); \/* Para navegadores IE 5.5 - 7 *\/ filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=#000000, endColorstr=#000000); \/* Para navegadores IE 8 *\/ -ms-filter: \"progid:DXImageTransform.Microsoft.gradient(startColorstr=#000000, endColorstr=#000000)\"; }\n\nlembrando que quando o nome da regra come\u00e7a com **.** (ponto), ela deve ser utilizada como class:\n\n<div class=\"transparente\"><\/div>\n\nE caso queira alterar a cor do bloco transparente basta alterar as regras rgb e rgba.\n\n\u00c9 isso ai, at\u00e9 a pr\u00f3xima.\n\n\n","html":"<p>Ol\u00e1s,<\/p>\n<p>aqui n\u00e3o \u00e9 bem um tutorial, est\u00e1 mais para uma dica:<\/p>\n<p>Se voc\u00ea quer deixar sua div transparente, voc\u00ea pode utilizar isso, por exemplo, pra deixar a imagem de background vis\u00edvel, deve ser inserido no seu css a seguinte regra:<\/p>\n<pre class=\"lang:css decode:true\">.transparente{\nbackground: rgb(0, 0, 0) transparent;\nbackground: rgba(0, 0, 0, 0.7);\n\/* Para navegadores IE 5.5 - 7 *\/\nfilter:progid:DXImageTransform.Microsoft.gradient(startColorstr=#000000, endColorstr=#000000);\n\/* Para navegadores IE 8 *\/\n-ms-filter: \"progid:DXImageTransform.Microsoft.gradient(startColorstr=#000000, endColorstr=#000000)\";\n}<\/pre>\n<p>lembrando que quando o nome da regra come\u00e7a com <strong>.<\/strong> (ponto), ela deve ser utilizada como class:<\/p>\n<pre class=\"lang:css decode:true\">&lt;div class=\"transparente\"&gt;&lt;\/div&gt;<\/pre>\n<p>E caso queira alterar a cor do bloco transparente basta alterar as regras rgb e rgba.<\/p>\n<p>\u00c9 isso ai, at\u00e9 a pr\u00f3xima.<\/p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Thu, 13 Jun 2013 00:20:05 +0000","created_by":1,"updated_at":"Thu, 13 Jun 2013 00:20:05 +0000","updated_by":1,"published_at":"Thu, 13 Jun 2013 00:20:05 +0000","published_by":1},{"id":113,"title":"Sobre","slug":"sobre","markdown":"\nOl\u00e1, seja bem vindo ao meu Blog.\n\nMeu nome \u00e9 Cezar e desenvolvo para Web utilizando Java e Javascript, criei esse blog para compartilhar algumas coisas que vou aprendendo.\n\nEnt\u00e3o, seja bem vindo e aproveite a viagem.\n\n\u00a0E posso ser encontrado na web por esses links:\n\n[Facebook](https:\/\/www.facebook.com\/cezarmaw)\n\n[Google Plus](https:\/\/plus.google.com\/+CezarCruz22)\n\n[Twitter](https:\/\/twitter.com\/cezar_)\n\n[Linkedin](http:\/\/br.linkedin.com\/pub\/cezar-cruz\/80\/66\/a83\/)\n\n\u00a0\n\n\n","html":"<p>Ol\u00e1, seja bem vindo ao meu Blog.<\/p>\n<p lang=\"zxx\">Meu nome \u00e9 Cezar e desenvolvo para Web utilizando Java e Javascript, criei esse blog para compartilhar algumas coisas que vou aprendendo.<\/p>\n<p lang=\"zxx\">Ent\u00e3o, seja bem vindo e aproveite a viagem.<\/p>\n<p>\u00a0E posso ser encontrado na web por esses links:<\/p>\n<p><a href=\"https:\/\/www.facebook.com\/cezarmaw\">Facebook<\/a><\/p>\n<p><a href=\"https:\/\/plus.google.com\/+CezarCruz22\">Google Plus<\/a><\/p>\n<p><a href=\"https:\/\/twitter.com\/cezar_\">Twitter<\/a><\/p>\n<p><a href=\"http:\/\/br.linkedin.com\/pub\/cezar-cruz\/80\/66\/a83\/\">Linkedin<\/a><\/p>\n<p>&nbsp;<\/p>\n","image":null,"featured":0,"page":1,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Thu, 13 Jun 2013 12:06:14 +0000","created_by":1,"updated_at":"Thu, 12 Mar 2015 18:02:33 +0000","updated_by":1,"published_at":"Thu, 13 Jun 2013 12:06:14 +0000","published_by":1},{"id":20,"title":"Saber qual \u00e9 o navegador usando PHP","slug":"saber-qual-e-o-navegador-usando-php","markdown":"\nDica r\u00e1pida para descobrir qual navegador est\u00e1 acessando sua aplica\u00e7\u00e3o **php**:\n\n<?php  \n $navegador = $_SERVER[\u2018HTTP_USER_AGENT\u2019];  \n echo $navegado;  \n ?>\n\nA vari\u00e1vel $navegador guarda a informa\u00e7\u00e3o de **$_SERVER[\u2018HTTP_USER_AGENT\u2019], **que \u00e9 ecoada na linha abaixo.\n\nO array **$_SERVER[]** contem algumas informa\u00e7\u00f5es uteis, todas descritas aqui: [http:\/\/php.net\/manual\/pt_BR\/reserved.variables.server.php](http:\/\/php.net\/manual\/pt_BR\/reserved.variables.server.php \"aqui\")\n\nAs sa\u00eddas padr\u00e3o s\u00e3o:\n\n**Firefox**: Mozilla\/5.0 (Windows NT 6.1; WOW64; rv:21.0) Gecko\/20100101 Firefox\/21.0\n\n**Internet Explorer**: Mozilla\/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident\/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E)\n\n**Chrome**: Mozilla\/5.0 (Windows NT 6.1; WOW64) AppleWebKit\/537.36 (KHTML, like Gecko) Chrome\/27.0.1453.110 Safari\/537.36\n\n**Opera**: Opera\/9.80 (Windows NT 6.1; WOW64) Presto\/2.12.388 Version\/12.15\n\n**Utilidade**\n\n**** Saber o navegador do usu\u00e1rio pode ser \u00fatil para tra\u00e7ar perfil dos visitantes do seu site, carregar **css** ou **javascripts** diferentes ou mesmo proibir acesso ao sistema para determinados navegadores.\n\n\u00c9 isso ai, t\u00e9 mais.\n\n\u00a0\n\n\n","html":"<p>Dica r\u00e1pida para descobrir qual navegador est\u00e1 acessando sua aplica\u00e7\u00e3o <strong>php<\/strong>:<\/p>\n<p>&lt;?php<br \/>\n$navegador = $_SERVER[&#8216;HTTP_USER_AGENT&#8217;];<br \/>\necho $navegado;<br \/>\n?&gt;<\/p>\n<p>A vari\u00e1vel $navegador guarda a informa\u00e7\u00e3o de <strong>$_SERVER[&#8216;HTTP_USER_AGENT&#8217;], <\/strong>que \u00e9 ecoada na linha abaixo.<\/p>\n<p>O array <strong>$_SERVER[]<\/strong> contem algumas informa\u00e7\u00f5es uteis, todas descritas aqui: <a title=\"aqui\" href=\"http:\/\/php.net\/manual\/pt_BR\/reserved.variables.server.php\" target=\"_blank\">http:\/\/php.net\/manual\/pt_BR\/reserved.variables.server.php<\/a><\/p>\n<p>As sa\u00eddas padr\u00e3o s\u00e3o:<\/p>\n<p><strong>Firefox<\/strong>: Mozilla\/5.0 (Windows NT 6.1; WOW64; rv:21.0) Gecko\/20100101 Firefox\/21.0<\/p>\n<p><strong>Internet Explorer<\/strong>: Mozilla\/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident\/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E)<\/p>\n<p><strong>Chrome<\/strong>: Mozilla\/5.0 (Windows NT 6.1; WOW64) AppleWebKit\/537.36 (KHTML, like Gecko) Chrome\/27.0.1453.110 Safari\/537.36<\/p>\n<p><strong>Opera<\/strong>: Opera\/9.80 (Windows NT 6.1; WOW64) Presto\/2.12.388 Version\/12.15<\/p>\n<p><strong>Utilidade<\/strong><\/p>\n<p><strong><\/strong> Saber o navegador do usu\u00e1rio pode ser \u00fatil para tra\u00e7ar perfil dos visitantes do seu site, carregar <strong>css<\/strong> ou <strong>javascripts<\/strong> diferentes ou mesmo proibir acesso ao sistema para determinados navegadores.<\/p>\n<p>\u00c9 isso ai, t\u00e9 mais.<\/p>\n<p>&nbsp;<\/p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Thu, 13 Jun 2013 12:29:38 +0000","created_by":1,"updated_at":"Thu, 13 Jun 2013 12:29:38 +0000","updated_by":1,"published_at":"Thu, 13 Jun 2013 12:29:38 +0000","published_by":1},{"id":27,"title":"Tutorial b\u00e1sico usando CakePHP, Windows e Eclipse - Parte 1","slug":"tutorial-basico-usando-cakephp-windows-eclipse-parte1","markdown":"\n[![cake-logo](http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/v1454457626\/cake-logo_ns8tdv.png)](http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/v1454457626\/cake-logo_ns8tdv.png)\n\nOl\u00e1, nesse tutorial gostaria de ensinar de uma forma bem b\u00e1sica, como rodar o Framework CakePHP no Windows e escrever algum c\u00f3digo usando o Eclipse.\n\nBora l\u00e1:\n\nO CakePHP \u00e9 um framework PHP(d\u00e3\u00e3\u00e3\u00e3) que utiliza MVC, poderia perder bastante tempo falando dos beneficios de usar um Framework e MVC, mas essa n\u00e3o \u00e9 a inten\u00e7\u00e3o do post, de qualquer forma, de uma olhada\u00a0[aqui](http:\/\/blog.glaucocustodio.com\/2012\/07\/31\/porque-usar-um-framework\/) e [aqui](http:\/\/pt.wikipedia.org\/wiki\/MVC).\n\nO primeiro passo \u00e9 ter o servidor de aplica\u00e7\u00e3o funcionando e para simplificar muito nossa vida, existe o [Wamp](http:\/\/www.wampserver.com\/en\/), que j\u00e1 vem com tudo que precisamos para rodar o CakePHP: Apache, PHP e MySQL.\n\nDepois de instalado o Wamp, que \u00e9 bem simples, ele ir\u00e1 criar uma pasta em C:wamp, dentro dessa pasta estar\u00e1 a pasta www, que \u00e9 onde iremos colocar os arquivos que ser\u00e3o acessados pelo navegador. Para verificar se o wamp est\u00e1 funcionando corretamente, basta acessar o link http:\/\/localhost, que voc\u00ea ir\u00e1 deparar com a pagina do wamp.\n\n[![wamp_home](http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/h_198,w_300\/v1454457625\/wamp_home_pwpuvr.png)](http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/v1454457625\/wamp_home_pwpuvr.png)\n\nO proximo passo \u00e9 baixar o CakePHP.\n\nO CakePHP voc\u00ea encontra [aqui](http:\/\/cakephp.org\/), e a documenta\u00e7\u00e3o voc\u00ea encontra [aqui.](http:\/\/book.cakephp.org\/2.0\/en\/index.html)\n\nAgora basta baixar o CakePHP e colocar no diret\u00f3rio www do Wamp (C:wampwww), no momento a vers\u00e3o atual \u00e9 a 2.3.6 e seu diret\u00f3rio do CakePHP ir\u00e1 ficar assim: C:wampwwwcakephp-cakephp-b81c198. (Quando abrirmos o CakePHP no Eclipse, falarei um pouco mais da estrutura de diret\u00f3rios do framework)\n\nAgora, altere o nome da pasta cakephp-cakephp-b81c198 para cake, e acesse via http:\/\/localhost\/cake e a tela abaixo ir\u00e1 aparecer:\n\n[![tela_inicial_cake_1](http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/h_163,w_300\/v1454457622\/tela_inicial_cake_1_yb2fxm.png)](http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/v1454457622\/tela_inicial_cake_1_yb2fxm.png)\n\nSe a tela aparece dessa forma, significa que o module rewrite do apache n\u00e3o est\u00e1 habilitado, no wamp \u00e9 bem simples fazer isso, v\u00e1 at\u00e9 o \u00edcone do wamp, que est\u00e1 localizado pr\u00f3ximo ao rel\u00f3gio do Windows, clique nele e procure por Apache, teremos a seguinte tela:\n\n[![wamp_painel_controle](http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/h_272,w_300\/v1454457623\/wamp_painel_controle_dof4xf.png)](http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/v1454457623\/wamp_painel_controle_dof4xf.png)\n\n\u00a0\n\nAgora, clique em Apache modules e procure por rewrite_module, clique nele e aguarde o wamp reiniciar para que as configura\u00e7\u00f5es sejam v\u00e1lidas. (O rewrite_module \u00e9 utilizado para criar url amig\u00e1veis ou personalizadas)\n\nAgora teremos o CakePHP funcionando \u201cquase\u201d que completamente, nossa tela ser\u00e1 a seguinte:\n\n[![tela_inicial_cake_2](http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/h_163,w_300\/v1454457621\/tela_inicial_cake_2_efuc7i.png)](http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/v1454457621\/tela_inicial_cake_2_efuc7i.png)\n\nAgora vamos ao o que consideraria a segunda parte do tutorial, importar a estrutura de diret\u00f3rios para o [Eclipse](http:\/\/www.eclipse.org\/), uma IDE feita em Java pela IBM, que \u00e9 muito utilizada para desenvolvimentos em geral (Java, PHP, Html, JS, etc).\n\nAssumiremos que o Eclipse j\u00e1 esta instalado e configurado para que possamos editar arquivos em PHP. A grande sacada aqui \u00e9 criarmos um projeto apontando para o diret\u00f3rio do CakePHP, faremos o seguinte:\n\nCom o Eclipse aberto, clicar em File, New, Php Project:\n\n[![eclipse_novo_projeto](http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/h_300,w_266\/v1454457618\/eclipse_novo_projeto_dnn3tv.png)](http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/v1454457618\/eclipse_novo_projeto_dnn3tv.png)\n\n1. Nesse textbox, coloque o nome do Projeto, para o tutorial sujiro utlizar cake, com letras minusculas \ud83d\ude09\n2. Aqui voc\u00ea deve selecionar o diret\u00f3rio raiz do cake, no nosso caso, C:wampwwwcake\n3. Feito as devidas configura\u00e7\u00f5es, clique em Finish.\n\nE agora teremos nosso projeto criado e pronto para come\u00e7armos\n\n[![projeto_cake_eclipse](http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/h_279,w_300\/v1454457614\/projeto_cake_eclipse_eqvvvl.png)](http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/v1454457614\/projeto_cake_eclipse_eqvvvl.png)\n\nNossa primeira altera\u00e7\u00e3o ser\u00e1 para corrigirmos o erros exibidos na pagina inicial do CakePHP, vamos l\u00e1.\n\nAbrar o arquivos core.php que fica em Cake->app->Config, e altere o valor do **Security.salt** e do **Security.cipherSeed:**  \n```\n<br><\/br>\nConfigure::write('Security.salt', 'DYhG93b0qyJfIxfs2guVoUubWwvniR2G0FgaC9mi');```\n\nConfigure::write(\u2018Security.cipherSeed\u2019, \u201876859309657453542496749683645\u2019);\n\nEsses carinhas s\u00e3o utilizados na criptografia do CakePHP e devem ser alterados, para que n\u00e3o utilizem o valor padr\u00e3o do CakePHP. No Security,salt voc\u00ea pode utilizar qualquer valor que seja n\u00famero ou letra e no Security.cipherSeed voc\u00ea deve utilizar apenas n\u00fameros. N\u00e3o esque\u00e7a de salvar o arquivos.\n\nAt\u00e9 esse ponto, j\u00e1 corrigimos as duas primeiras mensagens de erros, nosso CakePHP est\u00e1 assim:\n\n[![cake_php_home_final](http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/h_163,w_300\/v1454457608\/cake_php_home_final_e0jyxp.png)](http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/v1454457608\/cake_php_home_final_e0jyxp.png)\n\nNo pr\u00f3ximo post daremos continuidade ao projeto, explicarei como corrigir o erro de banco, explicarei um pouco da estrutura de diret\u00f3rios do CakePHP e por fim um pouco de c\u00f3digo.\n\nAt\u00e9.\n\n\n","html":"<p><a href=\"http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/v1454457626\/cake-logo_ns8tdv.png\"><img class=\"alignnone size-full wp-image-42\" src=\"http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/v1454457626\/cake-logo_ns8tdv.png\" alt=\"cake-logo\" width=\"180\" height=\"180\" \/><\/a><\/p>\n<p>Ol\u00e1, nesse tutorial gostaria de ensinar de uma forma bem b\u00e1sica, como rodar o Framework CakePHP no Windows e escrever algum c\u00f3digo usando o Eclipse.<\/p>\n<p>Bora l\u00e1:<\/p>\n<p>O CakePHP \u00e9 um framework PHP(d\u00e3\u00e3\u00e3\u00e3) que utiliza MVC, poderia perder bastante tempo falando dos beneficios de usar um Framework e MVC, mas essa n\u00e3o \u00e9 a inten\u00e7\u00e3o do post, de qualquer forma, de uma olhada\u00a0<a href=\"http:\/\/blog.glaucocustodio.com\/2012\/07\/31\/porque-usar-um-framework\/\" target=\"_blank\">aqui<\/a> e <a href=\"http:\/\/pt.wikipedia.org\/wiki\/MVC\" target=\"_blank\">aqui<\/a>.<\/p>\n<p><!--more--><\/p>\n<p>O primeiro passo \u00e9 ter o servidor de aplica\u00e7\u00e3o funcionando e para simplificar muito nossa vida, existe o <a href=\"http:\/\/www.wampserver.com\/en\/\" target=\"_blank\">Wamp<\/a>, que j\u00e1 vem com tudo que precisamos para rodar o CakePHP: Apache, PHP e MySQL.<\/p>\n<p>Depois de instalado o Wamp, que \u00e9 bem simples, ele ir\u00e1 criar uma pasta em C:wamp, dentro dessa pasta estar\u00e1 a pasta www, que \u00e9 onde iremos colocar os arquivos que ser\u00e3o acessados pelo navegador. Para verificar se o wamp est\u00e1 funcionando corretamente, basta acessar o link http:\/\/localhost, que voc\u00ea ir\u00e1 deparar com a pagina do wamp.<\/p>\n<p style=\"text-align: center;\"><a href=\"http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/v1454457625\/wamp_home_pwpuvr.png\"><img class=\"size-medium wp-image-43 aligncenter\" src=\"http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/h_198,w_300\/v1454457625\/wamp_home_pwpuvr.png\" alt=\"wamp_home\" width=\"300\" height=\"197\" \/><\/a><\/p>\n<p>O proximo passo \u00e9 baixar o CakePHP.<\/p>\n<p>O CakePHP voc\u00ea encontra <a href=\"http:\/\/cakephp.org\/\" target=\"_blank\">aqui<\/a>, e a documenta\u00e7\u00e3o voc\u00ea encontra <a href=\"http:\/\/book.cakephp.org\/2.0\/en\/index.html\" target=\"_blank\">aqui.<\/a><\/p>\n<p>Agora basta baixar o CakePHP e colocar no diret\u00f3rio www do Wamp (C:wampwww), no momento a vers\u00e3o atual \u00e9 a 2.3.6 e seu diret\u00f3rio do CakePHP ir\u00e1 ficar assim: C:wampwwwcakephp-cakephp-b81c198. (Quando abrirmos o CakePHP no Eclipse, falarei um pouco mais da estrutura de diret\u00f3rios do framework)<\/p>\n<p>Agora, altere o nome da pasta cakephp-cakephp-b81c198 para cake, e acesse via http:\/\/localhost\/cake e a tela abaixo ir\u00e1 aparecer:<\/p>\n<p style=\"text-align: center;\"><a href=\"http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/v1454457622\/tela_inicial_cake_1_yb2fxm.png\"><img class=\"size-medium wp-image-48 aligncenter\" src=\"http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/h_163,w_300\/v1454457622\/tela_inicial_cake_1_yb2fxm.png\" alt=\"tela_inicial_cake_1\" width=\"300\" height=\"162\" \/><\/a><\/p>\n<p>Se a tela aparece dessa forma, significa que o module rewrite do apache n\u00e3o est\u00e1 habilitado, no wamp \u00e9 bem simples fazer isso, v\u00e1 at\u00e9 o \u00edcone do wamp, que est\u00e1 localizado pr\u00f3ximo ao rel\u00f3gio do Windows, clique nele e procure por Apache, teremos a seguinte tela:<\/p>\n<p style=\"text-align: center;\"><a href=\"http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/v1454457623\/wamp_painel_controle_dof4xf.png\"><img class=\"size-medium wp-image-45 aligncenter\" src=\"http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/h_272,w_300\/v1454457623\/wamp_painel_controle_dof4xf.png\" alt=\"wamp_painel_controle\" width=\"300\" height=\"272\" \/><\/a><\/p>\n<p>&nbsp;<\/p>\n<p>Agora, clique em Apache modules e procure por rewrite_module, clique nele e aguarde o wamp reiniciar para que as configura\u00e7\u00f5es sejam v\u00e1lidas. (O rewrite_module \u00e9 utilizado para criar url amig\u00e1veis ou personalizadas)<\/p>\n<p>Agora teremos o CakePHP funcionando &#8220;quase&#8221; que completamente, nossa tela ser\u00e1 a seguinte:<\/p>\n<p style=\"text-align: center;\"><a href=\"http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/v1454457621\/tela_inicial_cake_2_efuc7i.png\"><img class=\"size-medium wp-image-49 aligncenter\" src=\"http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/h_163,w_300\/v1454457621\/tela_inicial_cake_2_efuc7i.png\" alt=\"tela_inicial_cake_2\" width=\"300\" height=\"162\" \/><\/a><\/p>\n<p>Agora vamos ao o que consideraria a segunda parte do tutorial, importar a estrutura de diret\u00f3rios para o <a href=\"http:\/\/www.eclipse.org\/\">Eclipse<\/a>, uma IDE feita em Java pela IBM, que \u00e9 muito utilizada para desenvolvimentos em geral (Java, PHP, Html, JS, etc).<\/p>\n<p>Assumiremos que o Eclipse j\u00e1 esta instalado e configurado para que possamos editar arquivos em PHP. A grande sacada aqui \u00e9 criarmos um projeto apontando para o diret\u00f3rio do CakePHP, faremos o seguinte:<\/p>\n<p>Com o Eclipse aberto, clicar em File, New, Php Project:<\/p>\n<p style=\"text-align: center;\"><a href=\"http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/v1454457618\/eclipse_novo_projeto_dnn3tv.png\"><img class=\"size-medium wp-image-51 aligncenter\" src=\"http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/h_300,w_266\/v1454457618\/eclipse_novo_projeto_dnn3tv.png\" alt=\"eclipse_novo_projeto\" width=\"266\" height=\"300\" \/><\/a><\/p>\n<ol>\n<li>Nesse textbox, coloque o nome do Projeto, para o tutorial sujiro utlizar cake, com letras minusculas \ud83d\ude09<\/li>\n<li>Aqui voc\u00ea deve selecionar o diret\u00f3rio raiz do cake, no nosso caso, C:wampwwwcake<\/li>\n<li>Feito as devidas configura\u00e7\u00f5es, clique em Finish.<\/li>\n<\/ol>\n<p>E agora teremos nosso projeto criado e pronto para come\u00e7armos<\/p>\n<p style=\"text-align: center;\"><a href=\"http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/v1454457614\/projeto_cake_eclipse_eqvvvl.png\"><img class=\"size-medium wp-image-52 aligncenter\" src=\"http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/h_279,w_300\/v1454457614\/projeto_cake_eclipse_eqvvvl.png\" alt=\"projeto_cake_eclipse\" width=\"300\" height=\"279\" \/><\/a><\/p>\n<p>Nossa primeira altera\u00e7\u00e3o ser\u00e1 para corrigirmos o erros exibidos na pagina inicial do CakePHP, vamos l\u00e1.<\/p>\n<p>Abrar o arquivos core.php que fica em Cake-&gt;app-&gt;Config, e altere o valor do <strong>Security.salt<\/strong> e do <strong>Security.cipherSeed:<\/strong><br \/>\n<code><br \/>\nConfigure::write('Security.salt', 'DYhG93b0qyJfIxfs2guVoUubWwvniR2G0FgaC9mi');<\/code><\/p>\n<p>Configure::write(&#8216;Security.cipherSeed&#8217;, &#8216;76859309657453542496749683645&#8217;);<\/p>\n<p>Esses carinhas s\u00e3o utilizados na criptografia do CakePHP e devem ser alterados, para que n\u00e3o utilizem o valor padr\u00e3o do CakePHP. No Security,salt voc\u00ea pode utilizar qualquer valor que seja n\u00famero ou letra e no Security.cipherSeed voc\u00ea deve utilizar apenas n\u00fameros. N\u00e3o esque\u00e7a de salvar o arquivos.<\/p>\n<p>At\u00e9 esse ponto, j\u00e1 corrigimos as duas primeiras mensagens de erros, nosso CakePHP est\u00e1 assim:<\/p>\n<p style=\"text-align: center;\"><a href=\"http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/v1454457608\/cake_php_home_final_e0jyxp.png\"><img class=\"size-medium wp-image-53 aligncenter\" src=\"http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/h_163,w_300\/v1454457608\/cake_php_home_final_e0jyxp.png\" alt=\"cake_php_home_final\" width=\"300\" height=\"162\" \/><\/a><\/p>\n<p>No pr\u00f3ximo post daremos continuidade ao projeto, explicarei como corrigir o erro de banco, explicarei um pouco da estrutura de diret\u00f3rios do CakePHP e por fim um pouco de c\u00f3digo.<\/p>\n<p>At\u00e9.<\/p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Tue, 18 Jun 2013 09:33:16 +0000","created_by":1,"updated_at":"Tue, 02 Feb 2016 22:00:26 +0000","updated_by":1,"published_at":"Tue, 18 Jun 2013 09:33:16 +0000","published_by":1},{"id":56,"title":"Tutorial b\u00e1sico usando CakePHP, Windows e Eclipse \u2013 Parte 2","slug":"tutorial-basico-usando-cakephp-windows-e-eclipse-parte-2","markdown":"\nContinuando com a segunda parte do tutorial b\u00e1sico usando CakePHP, Windows e Eclipse.\n\nA primeira parte voc\u00ea encontra [aqui](https:\/\/cezarcruz.com.br\/2013\/06\/tutorial-basico-usando-cakephp-windows-eclipse-parte1\/), paramos na tela em que \u00e9 exibido uma mensagem de erro de conex\u00e3o com o bando de dados no CakePHP, vamos l\u00e1.\n\nPrimeiro, precisamos criar uma base de dados, como estamos utilizando o Wamp, \u00e9 s\u00f3 utilizar o phpMyAdmin, para o tutorial, vamos criar um base de dados chamada **cake.**\n\nDepois de criado o banco de dados, vamos configurar ele no projeto:\n\nAbra a pasta app->Config,\u00a0nessa pasta, encontramos os arquivos relacionados ao configura\u00e7\u00e3o do CakePHP, o arquivo que conecta com a base de dados \u00e9 o database.php.default, o primeiro passo \u00e9 renomear ele para database.php:\n\n> No Eclipse, o bot\u00e3o F2, \u00e9 um atalho para renomear arquivos e pastas.\n\nAp\u00f3s renomear o arquivo, vamos configurar a conex\u00e3o com a base de dados, procure no arquivos por class DATABASE_CONFIG, ela deve esar assim:\n\nclass DATABASE_CONFIG { public $default = array( 'datasource' => 'Database\/Mysql', 'persistent' => false, 'host' => 'localhost', 'login' => 'user', 'password' => 'password', 'database' => 'database_name', 'prefix' => '', \/\/'encoding' => 'utf8', ); public $test = array( 'datasource' => 'Database\/Mysql', 'persistent' => false, 'host' => 'localhost', 'login' => 'user', 'password' => 'password', 'database' => 'test_database_name', 'prefix' => '', \/\/'encoding' => 'utf8', ); }\n\nDevemos alterar apenas o login, password e o database:\n\n\u2018login\u2019 => \u2018root\u2019,\u00a0\u2018password\u2019 => \u201d,  \n \u2018database\u2019 => \u2018cake\u2019\n\n\u00a0\n\n> Lembrando que os dados de conex\u00e3o pode variar de instala\u00e7\u00e3o para instala\u00e7\u00e3o, por\u00e9m, o padr\u00e3o do Wamp \u00e9 o que est\u00e1 acima\n\nPor fim, seu c\u00f3digo deve ficar assim:\n\nclass DATABASE_CONFIG { public $default = array( 'datasource' => 'Database\/Mysql', 'persistent' => false, 'host' => 'localhost', 'login' => 'root', 'password' => '', 'database' => 'cake', 'prefix' => '', \/\/'encoding' => 'utf8', ); public $test = array( 'datasource' => 'Database\/Mysql', 'persistent' => false, 'host' => 'localhost', 'login' => 'user', 'password' => 'password', 'database' => 'test_database_name', 'prefix' => '', \/\/'encoding' => 'utf8', ); }\n\nE ao acessar a pagina via navegador, deveremos ter o seguinte resultado:\n\n[![cake_php_home_final_sem_erros](http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/h_281,w_300\/v1454457599\/cake_php_home_final_sem_erros_vnpu2o.png)](http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/v1454457599\/cake_php_home_final_sem_erros_vnpu2o.png)\n\nO Ultimo Warning restante \u00e9 sugerindo a instala\u00e7\u00e3o do DebugKit, no momento n\u00e3o teremos utilidade para ele no nosso tutorial, ent\u00e3o fica pra pr\u00f3xima \ud83d\ude09\n\nAgora, vamos a parte te\u00f3rica:\n\n[![estrutura_de_diretorios_cake](http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/h_300,w_210\/v1454457598\/estrutura_de_diretorios_cake_hvocmx.png)](http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/v1454457598\/estrutura_de_diretorios_cake_hvocmx.png)\n\nPra esse tutorial a parte mais importante do CakePHP \u00e9 a que est\u00e1 dentro da pasta app, ent\u00e3o n\u00e3o vou entrar em detalhe sobre as outras.\n\nAs pastas que utilizamos com mais frequ\u00eancia s\u00e3o Controller, View e Model (M V C):\n\nA pasta Controller \u00e9 onde colocamos nossos controladores, ou seja, onde trataremos as entradas e sa\u00eddas da Aplica\u00e7\u00e3o.\n\nA pasta Model \u00e9 onde colocamos a parte que traz dados, n\u00e3o s\u00f3 de uma base de dados.\n\nA pasta View \u00e9 onde colocamos os arquivos relacionados a layouts (CSS, HTML) e exibi\u00e7\u00e3o de conte\u00fado no navegador.\n\nResumindo:\n\nQuando um usu\u00e1rio requisita uma p\u00e1gina, ex: lista de livros, o controller recebe essa requisi\u00e7\u00e3o, faz uma chamada no model para carregar os livros e envia para a view, que exibe para usu\u00e1rio.\n\nVamos criar nossa primeira p\u00e1gina, m\u00e3os a obra.\n\nComo quem recebe as requisi\u00e7\u00f5es \u00e9 o controller, ent\u00e3o, vamos come\u00e7ar pelo controller:\n\nNa pasta controller, criaremos o arquivo HomeController.php.\n\n> Por conven\u00e7\u00e3o, o controller seguido da palavra Controller iniciada com letra mai\u00fascula. ex: TimesController.php\n\n> Quando criamos um controller HomeController.php, queremos dizer ao CakePHP que envie as solicita\u00e7\u00f5es http:\/\/localhost\/cake\/home para ele\n\nAp\u00f3s criarmos o controller vamos editalo da seguinte forma:\n\n\u00a0\n\n<?php class HomeController extends AppController{ public function index(){ } } ?>\n\nAqui uma men\u00e7\u00e3o a programa\u00e7\u00e3o orientada a objetos. =D\n\nSempre devemos come\u00e7ar nosso controller, declarando class seguido do nome do controller extends AppController\n\n> Repare que na pasta Controller temos o arquivo AppController.php, devemos (mas n\u00e3o somos obrigados) estender nossa classe dela pois podemos usar ela para carregar algo padr\u00e3o para todos os outros controllers, um plugin por exemplo, ou desabilitar o uso da base de dados.\n\nNa linha seguinte, colocamos public function index() que seria o mesmo que colocar a p\u00e1gina index.php, essa ser\u00e1 a fun\u00e7\u00e3o a ser executada caso n\u00e3o tenha nenhum par\u00e2metro com a url home.\n\nSempre que criamos uma function no controller, devemos criar um arquivo .ctp (Cake Template) para que ela seja carregada automaticamente.\n\nComo criamos a **function index** dentro do** controller Home**, devemos criar, dentro da pasta View, uma pasta chamada **Home** e um arquivo chamado **index.ctp**\n\n> Se dentro do controller Home criarmos uma function cadastrar, devemos, dentro de View\/Home, criar um arquivos cadastrar.ctp, ele ser\u00e1 exibido quando a url for http:\/\/localhost\/cake\/home\/cadastrar.\n\nEsses arquivos de template \u00e9 que ir\u00e1 ser exibido no navegador, os arquivos .ctp ser\u00e3o tratados como arquivos php, ou seja, voc\u00ea pode colocar HTML, Css, JS ou Php nele.\n\nPara finalizarmos essa parte do tutorial, faremos o seguinte, coloque o c\u00f3digo abaixo no no arquivo index.ctp\n\n\u00a0\n\n<?php echo \"HelloCake\" ?>\n\nFeito isso acesse o link http:\/\/localhost\/cake\/home, o resultado ser\u00e1 o seguinte:\n\n[![hello_cake](http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/h_163,w_300\/v1454457597\/hello_cake_tw5o6d.png)](http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/v1454457597\/hello_cake_tw5o6d.png)\n\nEst\u00e1 ai nossa primeira p\u00e1gina utilizando o CakePHP, repare que ela j\u00e1 est\u00e1 estilizada, isso acontece porque n\u00e3o definimos nenhum layout, ent\u00e3o ele carrega o layout padr\u00e3o definido pelo CakePHP, em outro tutorial veremos com isso funciona.\n\nAt\u00e9 a pr\u00f3xima.\n\n\n","html":"<p>Continuando com a segunda parte do tutorial b\u00e1sico usando CakePHP, Windows e Eclipse.<\/p>\n<p>A primeira parte voc\u00ea encontra <a href=\"https:\/\/cezarcruz.com.br\/2013\/06\/tutorial-basico-usando-cakephp-windows-eclipse-parte1\/\">aqui<\/a>, paramos na tela em que \u00e9 exibido uma mensagem de erro de conex\u00e3o com o bando de dados no CakePHP, vamos l\u00e1.<\/p>\n<p>Primeiro, precisamos criar uma base de dados, como estamos utilizando o Wamp, \u00e9 s\u00f3 utilizar o phpMyAdmin, para o tutorial, vamos criar um base de dados chamada <strong>cake.<\/strong><\/p>\n<p>Depois de criado o banco de dados, vamos configurar ele no projeto:<\/p>\n<p>Abra a pasta app-&gt;Config,\u00a0nessa pasta, encontramos os arquivos relacionados ao configura\u00e7\u00e3o do CakePHP, o arquivo que conecta com a base de dados \u00e9 o database.php.default, o primeiro passo \u00e9 renomear ele para database.php:<\/p>\n<blockquote><p>No Eclipse, o bot\u00e3o F2, \u00e9 um atalho para renomear arquivos e pastas.<\/p><\/blockquote>\n<p>Ap\u00f3s renomear o arquivo, vamos configurar a conex\u00e3o com a base de dados, procure no arquivos por class DATABASE_CONFIG, ela deve esar assim:<\/p>\n<pre class=\"lang:php decode:true\">class DATABASE_CONFIG {\n\n\tpublic $default = array(\n\t\t'datasource' =&gt; 'Database\/Mysql',\n\t\t'persistent' =&gt; false,\n\t\t'host' =&gt; 'localhost',\n\t\t'login' =&gt; 'user',\n\t\t'password' =&gt; 'password',\n\t\t'database' =&gt; 'database_name',\n\t\t'prefix' =&gt; '',\n\t\t\/\/'encoding' =&gt; 'utf8',\n\t);\n\n\tpublic $test = array(\n\t\t'datasource' =&gt; 'Database\/Mysql',\n\t\t'persistent' =&gt; false,\n\t\t'host' =&gt; 'localhost',\n\t\t'login' =&gt; 'user',\n\t\t'password' =&gt; 'password',\n\t\t'database' =&gt; 'test_database_name',\n\t\t'prefix' =&gt; '',\n\t\t\/\/'encoding' =&gt; 'utf8',\n\t);\n}<\/pre>\n<p><!--more--><\/p>\n<p>Devemos alterar apenas o login, password e o database:<\/p>\n<p>&#8216;login&#8217; =&gt; &#8216;root&#8217;,\u00a0&#8216;password&#8217; =&gt; &#8221;,<br \/>\n&#8216;database&#8217; =&gt; &#8216;cake&#8217;<\/p>\n<p>&nbsp;<\/p>\n<blockquote><p>Lembrando que os dados de conex\u00e3o pode variar de instala\u00e7\u00e3o para instala\u00e7\u00e3o, por\u00e9m, o padr\u00e3o do Wamp \u00e9 o que est\u00e1 acima<\/p><\/blockquote>\n<p>Por fim, seu c\u00f3digo deve ficar assim:<\/p>\n<pre class=\"lang:php decode:true\">class DATABASE_CONFIG {\n\n\tpublic $default = array(\n\t\t'datasource' =&gt; 'Database\/Mysql',\n\t\t'persistent' =&gt; false,\n\t\t'host' =&gt; 'localhost',\n\t\t'login' =&gt; 'root',\n\t\t'password' =&gt; '',\n\t\t'database' =&gt; 'cake',\n\t\t'prefix' =&gt; '',\n\t\t\/\/'encoding' =&gt; 'utf8',\n\t);\n\n\tpublic $test = array(\n\t\t'datasource' =&gt; 'Database\/Mysql',\n\t\t'persistent' =&gt; false,\n\t\t'host' =&gt; 'localhost',\n\t\t'login' =&gt; 'user',\n\t\t'password' =&gt; 'password',\n\t\t'database' =&gt; 'test_database_name',\n\t\t'prefix' =&gt; '',\n\t\t\/\/'encoding' =&gt; 'utf8',\n\t);\n}<\/pre>\n<p>E ao acessar a pagina via navegador, deveremos ter o seguinte resultado:<\/p>\n<p style=\"text-align: center;\"><a href=\"http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/v1454457599\/cake_php_home_final_sem_erros_vnpu2o.png\"><img class=\"size-medium wp-image-60 aligncenter\" alt=\"cake_php_home_final_sem_erros\" src=\"http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/h_281,w_300\/v1454457599\/cake_php_home_final_sem_erros_vnpu2o.png\" width=\"300\" height=\"281\" \/><\/a><\/p>\n<p>O Ultimo Warning restante \u00e9 sugerindo a instala\u00e7\u00e3o do DebugKit, no momento n\u00e3o teremos utilidade para ele no nosso tutorial, ent\u00e3o fica pra pr\u00f3xima \ud83d\ude09<\/p>\n<p>Agora, vamos a parte te\u00f3rica:<\/p>\n<p style=\"text-align: center;\"><a href=\"http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/v1454457598\/estrutura_de_diretorios_cake_hvocmx.png\"><img class=\"size-medium wp-image-61 aligncenter\" alt=\"estrutura_de_diretorios_cake\" src=\"http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/h_300,w_210\/v1454457598\/estrutura_de_diretorios_cake_hvocmx.png\" width=\"210\" height=\"300\" \/><\/a><\/p>\n<p>Pra esse tutorial a parte mais importante do CakePHP \u00e9 a que est\u00e1 dentro da pasta app, ent\u00e3o n\u00e3o vou entrar em detalhe sobre as outras.<\/p>\n<p>As pastas que utilizamos com mais frequ\u00eancia s\u00e3o Controller, View e Model (M V C):<\/p>\n<p>A pasta Controller \u00e9 onde colocamos nossos controladores, ou seja, onde trataremos as entradas e sa\u00eddas da Aplica\u00e7\u00e3o.<\/p>\n<p>A pasta Model \u00e9 onde colocamos a parte que traz dados, n\u00e3o s\u00f3 de uma base de dados.<\/p>\n<p>A pasta View \u00e9 onde colocamos os arquivos relacionados a layouts (CSS, HTML) e exibi\u00e7\u00e3o de conte\u00fado no navegador.<\/p>\n<p>Resumindo:<\/p>\n<p>Quando um usu\u00e1rio requisita uma p\u00e1gina, ex: lista de livros, o controller recebe essa requisi\u00e7\u00e3o, faz uma chamada no model para carregar os livros e envia para a view, que exibe para usu\u00e1rio.<\/p>\n<p>Vamos criar nossa primeira p\u00e1gina, m\u00e3os a obra.<\/p>\n<p>Como quem recebe as requisi\u00e7\u00f5es \u00e9 o controller, ent\u00e3o, vamos come\u00e7ar pelo controller:<\/p>\n<p>Na pasta controller, criaremos o arquivo HomeController.php.<\/p>\n<blockquote><p>Por conven\u00e7\u00e3o, o controller seguido da palavra Controller iniciada com letra mai\u00fascula. ex: TimesController.php<\/p><\/blockquote>\n<blockquote><p>Quando criamos um controller HomeController.php, queremos dizer ao CakePHP que envie as solicita\u00e7\u00f5es http:\/\/localhost\/cake\/home para ele<\/p><\/blockquote>\n<p>Ap\u00f3s criarmos o controller vamos editalo da seguinte forma:<\/p>\n<p>&nbsp;<\/p>\n<pre class=\"lang:php decode:true\">&lt;?php\nclass HomeController extends AppController{\n\tpublic function index(){\n\n\t} \n}\n?&gt;<\/pre>\n<p>Aqui uma men\u00e7\u00e3o a programa\u00e7\u00e3o orientada a objetos. =D<\/p>\n<p>Sempre devemos come\u00e7ar nosso controller, declarando class seguido do nome do controller extends AppController<\/p>\n<blockquote><p>Repare que na pasta Controller temos o arquivo AppController.php, devemos (mas n\u00e3o somos obrigados) estender nossa classe dela pois podemos usar ela para carregar algo padr\u00e3o para todos os outros controllers, um plugin por exemplo, ou desabilitar o uso da base de dados.<\/p><\/blockquote>\n<p>Na linha seguinte, colocamos public function index() que seria o mesmo que colocar a p\u00e1gina index.php, essa ser\u00e1 a fun\u00e7\u00e3o a ser executada caso n\u00e3o tenha nenhum par\u00e2metro com a url home.<\/p>\n<p>Sempre que criamos uma function no controller, devemos criar um arquivo .ctp (Cake Template) para que ela seja carregada automaticamente.<\/p>\n<p>Como criamos a <strong>function index<\/strong> dentro do<strong> controller Home<\/strong>, devemos criar, dentro da pasta View, uma pasta chamada <strong>Home<\/strong> e um arquivo chamado <strong>index.ctp<\/strong><\/p>\n<blockquote><p>Se dentro do controller Home criarmos uma function cadastrar, devemos, dentro de View\/Home, criar um arquivos cadastrar.ctp, ele ser\u00e1 exibido quando a url for http:\/\/localhost\/cake\/home\/cadastrar.<\/p><\/blockquote>\n<p>Esses arquivos de template \u00e9 que ir\u00e1 ser exibido no navegador, os arquivos .ctp ser\u00e3o tratados como arquivos php, ou seja, voc\u00ea pode colocar HTML, Css, JS ou Php nele.<\/p>\n<p>Para finalizarmos essa parte do tutorial, faremos o seguinte, coloque o c\u00f3digo abaixo no no arquivo index.ctp<\/p>\n<p>&nbsp;<\/p>\n<pre class=\"lang:php decode:true\">&lt;?php echo \"HelloCake\" ?&gt;<\/pre>\n<p>Feito isso acesse o link http:\/\/localhost\/cake\/home, o resultado ser\u00e1 o seguinte:<\/p>\n<p style=\"text-align: center;\"><a href=\"http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/v1454457597\/hello_cake_tw5o6d.png\"><img class=\"size-medium wp-image-63 aligncenter\" alt=\"hello_cake\" src=\"http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/h_163,w_300\/v1454457597\/hello_cake_tw5o6d.png\" width=\"300\" height=\"162\" \/><\/a><\/p>\n<p>Est\u00e1 ai nossa primeira p\u00e1gina utilizando o CakePHP, repare que ela j\u00e1 est\u00e1 estilizada, isso acontece porque n\u00e3o definimos nenhum layout, ent\u00e3o ele carrega o layout padr\u00e3o definido pelo CakePHP, em outro tutorial veremos com isso funciona.<\/p>\n<p>At\u00e9 a pr\u00f3xima.<\/p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Thu, 20 Jun 2013 10:11:04 +0000","created_by":1,"updated_at":"Tue, 02 Feb 2016 22:00:00 +0000","updated_by":1,"published_at":"Thu, 20 Jun 2013 10:11:04 +0000","published_by":1},{"id":72,"title":"Como parar um servi\u00e7o Windows utilizando CSharp","slug":"como-parar-um-servico-windows-utilizando-csharp","markdown":"\nSaindo um pouco do PHP, vamos para a plataforma .NET, nesse tutorial (guia r\u00e1pido hehhehe), vou ensinar como parar e subir um servi\u00e7o Windows utilizando CSharp, vamos l\u00e1.\n\nPrimeiro, vamos intanciar o ServiceController passando como o par\u00e2metro\u00a0 o nome do servi\u00e7o que iremos gerenciar\n\nusing System.ServiceProcess; ServiceController service = new ServiceController(\"xxxservico\");\n\nAqui como paramos o servi\u00e7o\n\n if (service.Status.Equals(ServiceControllerStatus.Running)) service.Stop();\n\n- \u00a0Primeiro, verificamos se o servi\u00e7o e est\u00e1 rodando\n- Coso ele esteja, paramos ele usando o metodo Stop.\n\nPara iniciar basta utilizar isso\n\nif (service.Status.Equals(ServiceControllerStatus.Stopped)) service.Start();\n\n- \u00a0Verificamos se o servi\u00e7o est\u00e1 parado\n- Caso esteja, iniciamos ele\n\nSimples e pratico, at\u00e9 mais!!\n\n\n","html":"<p>Saindo um pouco do PHP, vamos para a plataforma .NET, nesse tutorial (guia r\u00e1pido hehhehe), vou ensinar como parar e subir um servi\u00e7o Windows utilizando CSharp, vamos l\u00e1.<\/p>\n<p>Primeiro, vamos intanciar o ServiceController passando como o par\u00e2metro\u00a0 o nome do servi\u00e7o que iremos gerenciar<\/p>\n<pre class=\"lang:c# decode:true\">using System.ServiceProcess;\n\nServiceController service = new ServiceController(\"xxxservico\");<\/pre>\n<p>Aqui como paramos o servi\u00e7o<\/p>\n<pre class=\"lang:c# decode:true\"> if (service.Status.Equals(ServiceControllerStatus.Running))\n                        service.Stop();<\/pre>\n<ul>\n<li>\u00a0Primeiro, verificamos se o servi\u00e7o e est\u00e1 rodando<\/li>\n<li>Coso ele esteja, paramos ele usando o metodo Stop.<\/li>\n<\/ul>\n<p>Para iniciar basta utilizar isso<\/p>\n<pre class=\"lang:c# decode:true \">if (service.Status.Equals(ServiceControllerStatus.Stopped))\n                        service.Start();<\/pre>\n<ul>\n<li>\u00a0Verificamos se o servi\u00e7o est\u00e1 parado<\/li>\n<li>Caso esteja, iniciamos ele<\/li>\n<\/ul>\n<p>Simples e pratico, at\u00e9 mais!!<\/p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Fri, 21 Jun 2013 09:22:39 +0000","created_by":1,"updated_at":"Fri, 21 Jun 2013 09:22:39 +0000","updated_by":1,"published_at":"Fri, 21 Jun 2013 09:22:39 +0000","published_by":1},{"id":79,"title":"Como instalar Apache + PHP + MySQL no Ubuntu","slug":"como-instalar-apache-php-mysql-no-ubuntu","markdown":"\nOl\u00e1s, nesse tutorial veremos como instalar e configurar o Ubuntu para rodar nossos sites em PHP.\n\nAqui uma grande surpresa minha, \u00e9 muito mais f\u00e1cil instalar e rodar o PHP no Linux do que no Windows, \u00e9 claro que o Windows tem os famosos pacotes \u201cWamp\u201d que facilitam bastante, mas caso queira instalar separadamente o PHP, Apache e MySQL, ai \u00e9 outra hist\u00f3ria, mas vamos l\u00e1, os passos s\u00e3o bem simples, primeiro, abra o Terminal e digite:\n\nsudo apt-get install apache2\n\nEsse comando ir\u00e1 instalar o apache, lembrando que o computador deve estar conectado na internet. Para verificar se o apache foi instalado corretamente, basta acessarmos http:\/\/localhost, e verificar se essa tela aparece:\n\n[![Apache_funcionando](http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/h_198,w_300\/v1454457596\/Apache_funcionando_srvzvh.png)](http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/v1454457596\/Apache_funcionando_srvzvh.png)Nessa altura j\u00e1 podemos publicar p\u00e1ginas HTML est\u00e1ticas no diret\u00f3rio **\/var\/www** que elas estar\u00e3o dispon\u00edveis para acesso.\n\n> N\u00e3o esque\u00e7a de dar permiss\u00e3o de escrita na pastar \/var\/www para o seu usu\u00e1rio, da seguinte forma:\n> \n> sudo chmod -R 777 \/var\/www\/\n> \n> **OBSERVA\u00c7\u00c3O MUITO IMPORTANTE:** s\u00f3 deve ser utilizado esse comando em ambiente de desenvolvimento, caso queira se aprofundar um pouco mais no assunto de permiss\u00f5es, sugiro que leia o seguinte texto:\n> \n> [http:\/\/rberaldo.com.br\/chmod-permissoes-em-sistemas-linux-e-unix-like\/](http:\/\/rberaldo.com.br\/chmod-permissoes-em-sistemas-linux-e-unix-like\/)\n\nO pr\u00f3ximo passo \u00e9 instalar o PHP, no mesmo terminal onde instalamos o Apache, digitamos o\u00a0 seguinte comando:\n\nsudo apt-get install php5 php5-cli php5-dev php5-mcrypt php5-curl php5-gd libapache2-mod-php5\n\nPara verificarmos se a instala\u00e7\u00e3o do PHP ocorreu tudo bem, criaremos um arquivo chamado info.php na pasta **\/var\/www** com o seguinte conte\u00fado:\n\n<?php phpinfo(); ?>\n\nO resultado deve ser igual a figura a seguir\n\n[![instalacao_ok_php](http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/h_198,w_300\/v1454457595\/instalacao_ok_php_e6m45l.png)](http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/v1454457595\/instalacao_ok_php_e6m45l.png)\n\nPronto, j\u00e1 temos o Apache e o PHP funcionando, agora o pr\u00f3ximo passo \u00e9 instalar o MySQL, t\u00e3o simples quanto os anteriores, basta rodar o comando a seguir no Terminal:\n\nsudo apt-get install mysql-client-5.5 mysql-server-5.5 php5-mysql phpmyadmin\n\nEsse comando ir\u00e1 instalar, al\u00e9m do MySQL o phpMyAdmin que \u00e9 uma interface para intera\u00e7\u00e3o com o MySQL feita em PHP que \u00e9 uma \u00f3tima alternativa para criar bancos e tabelas e todas as hospedagens que utilizei at\u00e9 hoje usam o phpMyAdmin como padr\u00e3o para gerenciar base de dados.\n\nA instala\u00e7\u00e3o do MySQL exige uma pequena intera\u00e7\u00e3o para criarmos a senha do usu\u00e1rio root que acessa o banco de dados. N\u00e3o vou entrar em detalhes de que devemos criar uma senha forte para o usu\u00e1rio root e etc\u2026 a inten\u00e7\u00e3o do post \u00e9 outra, ent\u00e3o utilizaremos a senha \u201c**root**\u201c, sem aspas, ent\u00e3o, na primeira tela solicitada digitamos root, na tela seguinte repitimos a a senha, e \u00e9 s\u00f3 aguardar a conclus\u00e3o da instala\u00e7\u00e3o.\n\nPara verificarmos se o MySQL foi instalado corretamente, basta acessar o nosso arquivo info.php, http:\/\/localhost\/info.php, e procurarmos por MySQL\n\n[![instalacao_mysql_ok](http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/h_208,w_300\/v1454457593\/instalacao_mysql_ok_j00hp4.png)](http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/v1454457593\/instalacao_mysql_ok_j00hp4.png)\n\nPronto, agora temos instalado nosso ambiente PHP x Linux com apenas 3 linhas de comando, muito f\u00e1cil.\n\n> Edit\n> \n> Pro PhpMyAdmin funcionar corretamente, precisamos criar um link simb\u00f3lico apontando pra ele, dentro da pasta \/var\/www, digite o seguinte comando:\n> \n> ln -s \/usr\/share\/phpmyadmin\n> \n> Agora sim, tudo funcionando.\n\nAt\u00e9.\n\n\n","html":"<p>Ol\u00e1s, nesse tutorial veremos como instalar e configurar o Ubuntu para rodar nossos sites em PHP.<\/p>\n<p><!--more--><\/p>\n<p>Aqui uma grande surpresa minha, \u00e9 muito mais f\u00e1cil instalar e rodar o PHP no Linux do que no Windows, \u00e9 claro que o Windows tem os famosos pacotes &#8220;Wamp&#8221; que facilitam bastante, mas caso queira instalar separadamente o PHP, Apache e MySQL, ai \u00e9 outra hist\u00f3ria, mas vamos l\u00e1, os passos s\u00e3o bem simples, primeiro, abra o Terminal e digite:<\/p>\n<pre class=\"lang:sh decode:true\">sudo apt-get install apache2<\/pre>\n<p>Esse comando ir\u00e1 instalar o apache, lembrando que o computador deve estar conectado na internet. Para verificar se o apache foi instalado corretamente, basta acessarmos http:\/\/localhost, e verificar se essa tela aparece:<\/p>\n<p style=\"text-align: center;\"><a href=\"http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/v1454457596\/Apache_funcionando_srvzvh.png\"><img class=\"size-medium wp-image-86 aligncenter\" alt=\"Apache_funcionando\" src=\"http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/h_198,w_300\/v1454457596\/Apache_funcionando_srvzvh.png\" width=\"300\" height=\"197\" \/><\/a>Nessa altura j\u00e1 podemos publicar p\u00e1ginas HTML est\u00e1ticas no diret\u00f3rio <strong>\/var\/www<\/strong> que elas estar\u00e3o dispon\u00edveis para acesso.<\/p>\n<blockquote><p>N\u00e3o esque\u00e7a de dar permiss\u00e3o de escrita na pastar \/var\/www para o seu usu\u00e1rio, da seguinte forma:<\/p>\n<pre class=\"lang:sh decode:true \">sudo chmod -R 777 \/var\/www\/<\/pre>\n<p><strong>OBSERVA\u00c7\u00c3O MUITO IMPORTANTE:<\/strong> s\u00f3 deve ser utilizado esse comando em ambiente de desenvolvimento, caso queira se aprofundar um pouco mais no assunto de permiss\u00f5es, sugiro que leia o seguinte texto:<\/p>\n<p><a href=\"http:\/\/rberaldo.com.br\/chmod-permissoes-em-sistemas-linux-e-unix-like\/\">http:\/\/rberaldo.com.br\/chmod-permissoes-em-sistemas-linux-e-unix-like\/<\/a><\/p><\/blockquote>\n<p>O pr\u00f3ximo passo \u00e9 instalar o PHP, no mesmo terminal onde instalamos o Apache, digitamos o\u00a0 seguinte comando:<\/p>\n<pre class=\"lang:sh decode:true\">sudo apt-get install php5 php5-cli php5-dev php5-mcrypt php5-curl php5-gd libapache2-mod-php5<\/pre>\n<p>Para verificarmos se a instala\u00e7\u00e3o do PHP ocorreu tudo bem, criaremos um arquivo chamado info.php na pasta <strong>\/var\/www<\/strong> com o seguinte conte\u00fado:<\/p>\n<pre class=\"lang:php decode:true\">&lt;?php\n\tphpinfo();\n?&gt;<\/pre>\n<p>O resultado deve ser igual a figura a seguir<\/p>\n<p style=\"text-align: center;\"><a href=\"http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/v1454457595\/instalacao_ok_php_e6m45l.png\"><img class=\"size-medium wp-image-87 aligncenter\" alt=\"instalacao_ok_php\" src=\"http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/h_198,w_300\/v1454457595\/instalacao_ok_php_e6m45l.png\" width=\"300\" height=\"197\" \/><\/a><\/p>\n<p>Pronto, j\u00e1 temos o Apache e o PHP funcionando, agora o pr\u00f3ximo passo \u00e9 instalar o MySQL, t\u00e3o simples quanto os anteriores, basta rodar o comando a seguir no Terminal:<\/p>\n<pre class=\"lang:sh decode:true\">sudo apt-get install mysql-client-5.5 mysql-server-5.5 php5-mysql phpmyadmin<\/pre>\n<p>Esse comando ir\u00e1 instalar, al\u00e9m do MySQL o phpMyAdmin que \u00e9 uma interface para intera\u00e7\u00e3o com o MySQL feita em PHP que \u00e9 uma \u00f3tima alternativa para criar bancos e tabelas e todas as hospedagens que utilizei at\u00e9 hoje usam o phpMyAdmin como padr\u00e3o para gerenciar base de dados.<\/p>\n<p>A instala\u00e7\u00e3o do MySQL exige uma pequena intera\u00e7\u00e3o para criarmos a senha do usu\u00e1rio root que acessa o banco de dados. N\u00e3o vou entrar em detalhes de que devemos criar uma senha forte para o usu\u00e1rio root e etc&#8230; a inten\u00e7\u00e3o do post \u00e9 outra, ent\u00e3o utilizaremos a senha &#8220;<strong>root<\/strong>&#8220;, sem aspas, ent\u00e3o, na primeira tela solicitada digitamos root, na tela seguinte repitimos a a senha, e \u00e9 s\u00f3 aguardar a conclus\u00e3o da instala\u00e7\u00e3o.<\/p>\n<p>Para verificarmos se o MySQL foi instalado corretamente, basta acessar o nosso arquivo info.php, http:\/\/localhost\/info.php, e procurarmos por MySQL<\/p>\n<p style=\"text-align: center;\"><a href=\"http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/v1454457593\/instalacao_mysql_ok_j00hp4.png\"><img class=\"size-medium wp-image-89 aligncenter\" alt=\"instalacao_mysql_ok\" src=\"http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/h_208,w_300\/v1454457593\/instalacao_mysql_ok_j00hp4.png\" width=\"300\" height=\"207\" \/><\/a><\/p>\n<p>Pronto, agora temos instalado nosso ambiente PHP x Linux com apenas 3 linhas de comando, muito f\u00e1cil.<\/p>\n<blockquote><p>Edit<\/p>\n<p>Pro PhpMyAdmin funcionar corretamente, precisamos criar um link simb\u00f3lico apontando pra ele, dentro da pasta \/var\/www, digite o seguinte comando:<\/p>\n<pre class=\"lang:sh decode:true \">ln -s \/usr\/share\/phpmyadmin<\/pre>\n<p>Agora sim, tudo funcionando.<\/p><\/blockquote>\n<p>At\u00e9.<\/p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Tue, 02 Jul 2013 12:54:23 +0000","created_by":1,"updated_at":"Tue, 02 Feb 2016 21:59:56 +0000","updated_by":1,"published_at":"Tue, 02 Jul 2013 12:54:23 +0000","published_by":1},{"id":102,"title":"Como criar um reposit\u00f3rio SVN no Dropbox [deprecated]","slug":"como-criar-um-repositorio-svn-no-dropbox","markdown":"\nUm requisito b\u00e1sico para programar, talvez at\u00e9 antes de uma IDE, \u00e9 uma forma de armazenar os c\u00f3digos com seguran\u00e7a e se for com controle de vers\u00e3o, melhor ainda.\n\nIremos precisar de uma conta ativa no Dropbox junto com o software de sincronia, que deve ser adquirido aqui: [https:\/\/www.dropbox.com\/downloading?os=win](https:\/\/www.dropbox.com\/downloading?os=win)\n\nIremos precisar to Tortoise SVN, esse \u00e9 ferramenta muito \u00fatil no dia a dia, \u00e9 com ela que iremos criar nosso reposit\u00f3rio e faremos updates e commits, ela deve ser obtida aqui: [http:\/\/tortoisesvn.net\/downloads.html](http:\/\/tortoisesvn.net\/downloads.html)\n\nA instala\u00e7\u00e3o de ambos \u00e9 bem simples, ent\u00e3o iremos direto pra parte de criar o reposit\u00f3rio:\n\n> N\u00e3o esque\u00e7a de reiniciar o PC ap\u00f3s a instala\u00e7\u00e3o do Tortoise SVN\n\nNo Windows 7 e Windows 8 o software do Dropbox cria uma pasta no diret\u00f3rio do usu\u00e1rio, por exemplo:\n\nC:Usersusu\u00e1rioDropbox\n\nNesse diret\u00f3rio que iremos criar nosso, reposit\u00f3rio:\n\nPrimeiro crie uma pasta com um nome qualquer, por exemplo \u201cReposit\u00f3rio\u201d, sem aspas \ud83d\ude09\n\nDentro dela, clique com o bot\u00e3o direito do mouse, escolha a op\u00e7\u00e3o *TortoiseSVN* e em seguida *Create respository here*\n\n[![criando_rep_svn](http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/h_171,w_300\/v1454457592\/criando_rep_svn_yctbqr.png)](http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/v1454457592\/criando_rep_svn_yctbqr.png)\n\nO TortoiseSVN ir\u00e1 criar a estrutura de diret\u00f3rios abaixo\n\n[![resultado](http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/h_193,w_300\/v1454457591\/resultado_ou0gwv.png)](http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/v1454457591\/resultado_ou0gwv.png)\n\nClique na op\u00e7\u00e3o Create folder structure, para criar as pastas trunk, tags, branch\u2026\n\nRepare que na figura temos um caminho selecionado, come\u00e7ando com file:\/\/\/C:\u2026. e \u00e9 nesse endere\u00e7o que est\u00e1 o pulo do gato, quando for abrir o repo browser ou for fazer um chekout\/commit, basta acrescentar o caminho dessa forma\n\n[![abrindo_repo_br](http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/h_103,w_300\/v1454457589\/abrindo_repo_br_pu6exf.png)](http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/v1454457589\/abrindo_repo_br_pu6exf.png)\n\nAssim, teremos, de uma forma gratuita, um reposit\u00f3rio SVN que pode ser acessado de qualquer lugar, lembrando sempre de sincronizar a pasta com o reposit\u00f3rio.\n\n\n","html":"<p>Um requisito b\u00e1sico para programar, talvez at\u00e9 antes de uma IDE, \u00e9 uma forma de armazenar os c\u00f3digos com seguran\u00e7a e se for com controle de vers\u00e3o, melhor ainda.<\/p>\n<p><!--more--><\/p>\n<p>Iremos precisar de uma conta ativa no Dropbox junto com o software de sincronia, que deve ser adquirido aqui: <a href=\"https:\/\/www.dropbox.com\/downloading?os=win\" target=\"_blank\">https:\/\/www.dropbox.com\/downloading?os=win<\/a><\/p>\n<p>Iremos precisar to Tortoise SVN, esse \u00e9 ferramenta muito \u00fatil no dia a dia, \u00e9 com ela que iremos criar nosso reposit\u00f3rio e faremos updates e commits, ela deve ser obtida aqui: <a href=\"http:\/\/tortoisesvn.net\/downloads.html\" target=\"_blank\">http:\/\/tortoisesvn.net\/downloads.html<\/a><\/p>\n<p>A instala\u00e7\u00e3o de ambos \u00e9 bem simples, ent\u00e3o iremos direto pra parte de criar o reposit\u00f3rio:<\/p>\n<blockquote><p>N\u00e3o esque\u00e7a de reiniciar o PC ap\u00f3s a instala\u00e7\u00e3o do Tortoise SVN<\/p><\/blockquote>\n<p>No Windows 7 e Windows 8 o software do Dropbox cria uma pasta no diret\u00f3rio do usu\u00e1rio, por exemplo:<\/p>\n<p>C:Usersusu\u00e1rioDropbox<\/p>\n<p>Nesse diret\u00f3rio que iremos criar nosso, reposit\u00f3rio:<\/p>\n<p>Primeiro crie uma pasta com um nome qualquer, por exemplo &#8220;Reposit\u00f3rio&#8221;, sem aspas \ud83d\ude09<\/p>\n<p>Dentro dela, clique com o bot\u00e3o direito do mouse, escolha a op\u00e7\u00e3o <em>TortoiseSVN<\/em> e em seguida <em>Create respository here<\/em><\/p>\n<p style=\"text-align: center;\"><a href=\"http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/v1454457592\/criando_rep_svn_yctbqr.png\"><img class=\"size-medium wp-image-104 aligncenter\" alt=\"criando_rep_svn\" src=\"http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/h_171,w_300\/v1454457592\/criando_rep_svn_yctbqr.png\" width=\"300\" height=\"171\" \/><\/a><\/p>\n<p>O TortoiseSVN ir\u00e1 criar a estrutura de diret\u00f3rios abaixo<\/p>\n<p style=\"text-align: center;\"><a href=\"http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/v1454457591\/resultado_ou0gwv.png\"><img class=\"size-medium wp-image-105 aligncenter\" alt=\"resultado\" src=\"http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/h_193,w_300\/v1454457591\/resultado_ou0gwv.png\" width=\"300\" height=\"192\" \/><\/a><\/p>\n<p>Clique na op\u00e7\u00e3o Create folder structure, para criar as pastas trunk, tags, branch&#8230;<\/p>\n<p>Repare que na figura temos um caminho selecionado, come\u00e7ando com file:\/\/\/C:&#8230;. e \u00e9 nesse endere\u00e7o que est\u00e1 o pulo do gato, quando for abrir o repo browser ou for fazer um chekout\/commit, basta acrescentar o caminho dessa forma<\/p>\n<p style=\"text-align: center;\"><a href=\"http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/v1454457589\/abrindo_repo_br_pu6exf.png\"><img class=\"size-medium wp-image-108 aligncenter\" alt=\"abrindo_repo_br\" src=\"http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/h_103,w_300\/v1454457589\/abrindo_repo_br_pu6exf.png\" width=\"300\" height=\"103\" \/><\/a><\/p>\n<p>Assim, teremos, de uma forma gratuita, um reposit\u00f3rio SVN que pode ser acessado de qualquer lugar, lembrando sempre de sincronizar a pasta com o reposit\u00f3rio.<\/p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Tue, 23 Jul 2013 11:59:18 +0000","created_by":1,"updated_at":"Tue, 02 Feb 2016 21:59:52 +0000","updated_by":1,"published_at":"Tue, 23 Jul 2013 11:59:18 +0000","published_by":1},{"id":111,"title":"Dica rapida: Foundation 4 uma alternativa ao Bootsrap","slug":"dica-rapida-foundation-4-uma-alternativa-ao-bootsrap","markdown":"\nPra quem est\u00e1 cansado de usar o Twitter Bootstrap, n\u00e3o que ele seja ruim, muito pelo contrario, sugiro a utiliza\u00e7\u00e3o do Foundation 4.\n\nO Foundation 4 \u00e9 uma biblioteca muito \u00fatil para padronizar a visualiza\u00e7\u00e3o de um site, ele \u00e9 uma biblioteca bem completa, conheci a pouco tempo e comecei os estudos.\n\nPra baixar a vers\u00e3o mais recente, basta entrar no site do projeto: [http:\/\/foundation.zurb.com](http:\/\/foundation.zurb.com)\n\nLogo mais, postarei como come\u00e7ar a tirar proveito dele e fujir um pouco do bootstrap, que anda dominando a Interwebs por ai.\n\n[![print_foundation](http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/h_87,w_300\/v1454457588\/print_foundation_hyrwk4.png)](http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/v1454457588\/print_foundation_hyrwk4.png)\n\n\n","html":"<p>Pra quem est\u00e1 cansado de usar o Twitter Bootstrap, n\u00e3o que ele seja ruim, muito pelo contrario, sugiro a utiliza\u00e7\u00e3o do Foundation 4.<\/p>\n<p>O Foundation 4 \u00e9 uma biblioteca muito \u00fatil para padronizar a visualiza\u00e7\u00e3o de um site, ele \u00e9 uma biblioteca bem completa, conheci a pouco tempo e comecei os estudos.<\/p>\n<p>Pra baixar a vers\u00e3o mais recente, basta entrar no site do projeto: <a href=\"http:\/\/foundation.zurb.com\" target=\"_blank\">http:\/\/foundation.zurb.com<\/a><\/p>\n<p>Logo mais, postarei como come\u00e7ar a tirar proveito dele e fujir um pouco do bootstrap, que anda dominando a Interwebs por ai.<\/p>\n<p style=\"text-align: center;\"><a href=\"http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/v1454457588\/print_foundation_hyrwk4.png\"><img class=\"size-medium wp-image-112 aligncenter\" alt=\"print_foundation\" src=\"http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/h_87,w_300\/v1454457588\/print_foundation_hyrwk4.png\" width=\"300\" height=\"87\" \/><\/a><\/p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Tue, 23 Jul 2013 14:07:31 +0000","created_by":1,"updated_at":"Tue, 02 Feb 2016 21:59:48 +0000","updated_by":1,"published_at":"Tue, 23 Jul 2013 14:07:31 +0000","published_by":1},{"id":116,"title":"Como usar Javascript e CSS no CakePHP","slug":"como-usar-javascript-e-css-no-cakephp","markdown":"\nOl\u00e1, hoje mais uma dica sobre CakePHP, vou ensinar como colocar CSS e Javascript corretamente no seu projeto CakePHP.\n\nOs arquivos de CSS e Javascript devem ser colocados no diret\u00f3rio app\/webroot, repare que ao abrir esse diret\u00f3rio, nos deparamos com a seguinte estrutura:\n\n[![estrutura_webroot](http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/v1454457587\/estrutura_webroot_aay6x5.png)](http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/v1454457587\/estrutura_webroot_aay6x5.png)Nesse ponto j\u00e1 fica obvio onde devemos colocar nossos arquivos:\n\nArquivos de estilo na pasta CSS\n\nArquivos de script na pasta js\n\nArquivos de imagem na pasta img\n\ndepois de colocarmos nossos arquivos no devido lugar, devemos fazer o seguinte para que o arquivos sejam anexados a p\u00e1gina de forma correta:\n\nNo nosso arquivos de layout padr\u00e3o, no caso, o app\/View\/Layouts\/default.ctp, dentro da tag ** **devemos colocar o seguinte c\u00f3digo:\n\nPara arquivos CSS:\n\necho $this->Html->css(array('estilo'));\n\nPara arquivos javascript\n\necho $this->Html->script('javascript')\n\n> \u00a0N\u00e3o \u00e9 necess\u00e1rio colocar a extens\u00e3o do arquivo, o CakePHP cuida de tudo \ud83d\ude09\n\nNo arquivos final, quando o browser renderizar, o resultado ser\u00e1 o seguinte:\n\n<link rel=\"stylesheet\" type=\"text\/css\" href=\"\/cake\/css\/estilo.css\" \/> <script type=\"text\/javascript\" src=\"\/cake\/js\/javascript.js\">\n\n\u00a0\n\nSimples e bem f\u00e1cil, essa foi uma dica de como colocar Javascript e CSS no seu projeto CakePHP.\n\n\u00c9 isso ai, at\u00e9 mais.\n\n\u00a0\n\n\n","html":"<p>Ol\u00e1, hoje mais uma dica sobre CakePHP, vou ensinar como colocar CSS e Javascript corretamente no seu projeto CakePHP.<\/p>\n<p><!--more--><\/p>\n<p>Os arquivos de CSS e Javascript devem ser colocados no diret\u00f3rio app\/webroot, repare que ao abrir esse diret\u00f3rio, nos deparamos com a seguinte estrutura:<\/p>\n<p style=\"text-align: center;\"><a href=\"http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/v1454457587\/estrutura_webroot_aay6x5.png\"><img class=\"size-full wp-image-117 aligncenter\" alt=\"estrutura_webroot\" src=\"http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/v1454457587\/estrutura_webroot_aay6x5.png\" width=\"135\" height=\"205\" \/><\/a>Nesse ponto j\u00e1 fica obvio onde devemos colocar nossos arquivos:<\/p>\n<p>Arquivos de estilo na pasta CSS<\/p>\n<p>Arquivos de script na pasta js<\/p>\n<p>Arquivos de imagem na pasta img<\/p>\n<p>depois de colocarmos nossos arquivos no devido lugar, devemos fazer o seguinte para que o arquivos sejam anexados a p\u00e1gina de forma correta:<\/p>\n<p>No nosso arquivos de layout padr\u00e3o, no caso, o app\/View\/Layouts\/default.ctp, dentro da tag <strong>&lt;head&gt; <\/strong>devemos colocar o seguinte c\u00f3digo:<\/p>\n<p>Para arquivos CSS:<\/p>\n<pre class=\"lang:php decode:true\">echo $this-&gt;Html-&gt;css(array('estilo'));<\/pre>\n<p>Para arquivos javascript<\/p>\n<pre class=\"lang:php decode:true\">echo $this-&gt;Html-&gt;script('javascript')<\/pre>\n<blockquote><p>\u00a0N\u00e3o \u00e9 necess\u00e1rio colocar a extens\u00e3o do arquivo, o CakePHP cuida de tudo \ud83d\ude09<\/p><\/blockquote>\n<p>No arquivos final, quando o browser renderizar, o resultado ser\u00e1 o seguinte:<\/p>\n<pre class=\"lang:php decode:true\">&lt;link rel=\"stylesheet\" type=\"text\/css\" href=\"\/cake\/css\/estilo.css\" \/&gt;\n&lt;script type=\"text\/javascript\" src=\"\/cake\/js\/javascript.js\"&gt;<\/pre>\n<p>&nbsp;<\/p>\n<p>Simples e bem f\u00e1cil, essa foi uma dica de como colocar Javascript e CSS no seu projeto CakePHP.<\/p>\n<p>\u00c9 isso ai, at\u00e9 mais.<\/p>\n<p>&nbsp;<\/p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Fri, 26 Jul 2013 10:27:09 +0000","created_by":1,"updated_at":"Tue, 02 Feb 2016 21:59:47 +0000","updated_by":1,"published_at":"Fri, 26 Jul 2013 10:27:09 +0000","published_by":1},{"id":134,"title":"Programando PHP do jeito certo","slug":"programando-php-do-jeito-certo","markdown":"\nUm grande problema pra quem est\u00e1 aprendendo uma linguagem de programa\u00e7\u00e3o nova \u00e9 como fazer as coisas da maneira certa, navegando pelo Facebook, encontrei uma dica muito bacana de como programar PHP do jeito certo, tudo que voc\u00ea precisa est\u00e1 nesse site: [http:\/\/br.phptherightway.com\/](http:\/\/br.phptherightway.com\/)\n\n> \u00c9 importante entender que *n\u00e3o existe uma maneira can\u00f4nica de usar PHP*. Essa \u00e9 a gra\u00e7a. Este site introduz novos desenvolvedores PHP \u00e0s melhores pr\u00e1ticas, op\u00e7\u00f5es dispon\u00edveis e boas informa\u00e7\u00f5es.\n\nO site PHP do Jeito Certo \u00e9 um projeto do GitHub que visa ser uma referencia r\u00e1pida das melhores formas de programar em PHP, com padr\u00f5es de c\u00f3digo e links para bons tutoriais. Ele \u00e9 bom pra quem est\u00e1 come\u00e7ando e bom pra quem quer aperfei\u00e7oar ou apenas ver se programar da forma \u201ccorreta\u201d.\n\nEle est\u00e1 dispon\u00edvel em 6 idiomas, e felizmente, o Portugu\u00eas \u00e9 um deles.\n\nL\u00e1 tem varias dicas legais, como:\n\n- Instalar o PHP no Windows e no Mac\n- Rodar com servidor embutido (essa eu n\u00e3o conhecia kkkkk)\n- Interface de linha de comando\n\nE por ai vai\u2026\n\nO link do GitHub, pra quem quiser colaborar com c\u00f3digos:\n\n[https:\/\/github.com\/klaussilveira\/php-the-right-way](https:\/\/github.com\/klaussilveira\/php-the-right-way)\n\nO PHP do Jeito certo tem uma forma legal de divulga\u00e7\u00e3o, que \u00e9 utilizando banners, as instru\u00e7\u00f5es est\u00e3o [aqui, ](http:\/\/br.phptherightway.com\/banners.html)veja como ir\u00e1 ficar em seu site:\n\n[![PHP: Do Jeito Certo](http:\/\/www.phptherightway.com\/images\/banners\/leaderboard-728x90.png)  \n](http:\/\/br.phptherightway.com)\n\n\u00c9 isso ai, bons estudos e at\u00e9 mais.\n\n\n","html":"<p>Um grande problema pra quem est\u00e1 aprendendo uma linguagem de programa\u00e7\u00e3o nova \u00e9 como fazer as coisas da maneira certa, navegando pelo Facebook, encontrei uma dica muito bacana de como programar PHP do jeito certo, tudo que voc\u00ea precisa est\u00e1 nesse site: <a href=\"http:\/\/br.phptherightway.com\/\">http:\/\/br.phptherightway.com\/<\/a><\/p>\n<blockquote><p>\u00c9 importante entender que <em>n\u00e3o existe uma maneira can\u00f4nica de usar PHP<\/em>. Essa \u00e9 a gra\u00e7a. Este site introduz novos desenvolvedores PHP \u00e0s melhores pr\u00e1ticas, op\u00e7\u00f5es dispon\u00edveis e boas informa\u00e7\u00f5es.<\/p><\/blockquote>\n<p>O site PHP do Jeito Certo \u00e9 um projeto do GitHub que visa ser uma referencia r\u00e1pida das melhores formas de programar em PHP, com padr\u00f5es de c\u00f3digo e links para bons tutoriais. Ele \u00e9 bom pra quem est\u00e1 come\u00e7ando e bom pra quem quer aperfei\u00e7oar ou apenas ver se programar da forma &#8220;correta&#8221;.<\/p>\n<p>Ele est\u00e1 dispon\u00edvel em 6 idiomas, e felizmente, o Portugu\u00eas \u00e9 um deles.<\/p>\n<p>L\u00e1 tem varias dicas legais, como:<\/p>\n<ul>\n<li>Instalar o PHP no Windows e no Mac<\/li>\n<li>Rodar com servidor embutido (essa eu n\u00e3o conhecia kkkkk)<\/li>\n<li>Interface de linha de comando<\/li>\n<\/ul>\n<p>E por ai vai&#8230;<\/p>\n<p>O link do GitHub, pra quem quiser colaborar com c\u00f3digos:<\/p>\n<p><a href=\"https:\/\/github.com\/klaussilveira\/php-the-right-way\">https:\/\/github.com\/klaussilveira\/php-the-right-way<\/a><\/p>\n<p>O PHP do Jeito certo tem uma forma legal de divulga\u00e7\u00e3o, que \u00e9 utilizando banners, as instru\u00e7\u00f5es est\u00e3o <a href=\"http:\/\/br.phptherightway.com\/banners.html\">aqui, <\/a>veja como ir\u00e1 ficar em seu site:<\/p>\n<p><a href=\"http:\/\/br.phptherightway.com\"><img alt=\"PHP: Do Jeito Certo\" src=\"http:\/\/www.phptherightway.com\/images\/banners\/leaderboard-728x90.png\" \/><br \/>\n<\/a><\/p>\n<p>\u00c9 isso ai, bons estudos e at\u00e9 mais.<\/p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Mon, 05 Aug 2013 11:09:13 +0000","created_by":1,"updated_at":"Mon, 05 Aug 2013 11:09:13 +0000","updated_by":1,"published_at":"Mon, 05 Aug 2013 11:09:13 +0000","published_by":1},{"id":137,"title":"Dica: CMS para blog utilizando ASP.NET \/ CSharp","slug":"dica-cms-para-blog-utilizando-aspnet-csharp","markdown":"\nO CMS que irei mostrar aqui \u00e9 o BlogEngine, feito em CSharp e roda no IIS, uma boa alternativa ao WordPress para que usar servidor Windows.\n\nO BlogEngine \u00e9 uma ferramenta gr\u00e1tis para cria\u00e7\u00e3o de blogs, que utiliza ASP.NET\/CSharp no seu c\u00f3digo fonte e para o armazenamento de dados utiliza como padr\u00e3o arquivos XML.  \n \u00c9 muito \u00fatil pra quem quer ter um blog e n\u00e3o quer usar o WordPress ou mesmo n\u00e3o sabia que existe esse tipo de ferramentas em .NET.  \n Tem todos os recursos necess\u00e1rios para cria\u00e7\u00e3o e manuten\u00e7\u00e3o de um blog:\n\n- Posts\n- Cria\u00e7\u00e3o de p\u00e1ginas est\u00e1ticas\n- Widgets\n- Temas (Aqui cabe uma obs.: \u00e9 bem simples criar ou personalizar seu pr\u00f3prio tema)\n\nO BlogEngine tem uma interface simples e n\u00e3o tem instala\u00e7\u00e3o, basta colocar os arquivos no seu servidor web, logar e come\u00e7ar a postar.\n\nO site do projeto est\u00e1 aqui: [http:\/\/www.dotnetblogengine.net\/](http:\/\/www.dotnetblogengine.net\/)\n\nO download da vers\u00e3o 2.8, que \u00e9 atual no momento, pode ser encontrado aqui: [http:\/\/blogengine.codeplex.com\/releases\/view\/105425](http:\/\/blogengine.codeplex.com\/releases\/view\/105425)\n\n\u00a0\n\n\n","html":"<p>O CMS que irei mostrar aqui \u00e9 o BlogEngine, feito em CSharp e roda no IIS, uma boa alternativa ao WordPress para que usar servidor Windows.<\/p>\n<p>O BlogEngine \u00e9 uma ferramenta gr\u00e1tis para cria\u00e7\u00e3o de blogs, que utiliza ASP.NET\/CSharp no seu c\u00f3digo fonte e para o armazenamento de dados utiliza como padr\u00e3o arquivos XML.<br \/>\n\u00c9 muito \u00fatil pra quem quer ter um blog e n\u00e3o quer usar o WordPress ou mesmo n\u00e3o sabia que existe esse tipo de ferramentas em .NET.<br \/>\nTem todos os recursos necess\u00e1rios para cria\u00e7\u00e3o e manuten\u00e7\u00e3o de um blog:<\/p>\n<ul>\n<li>Posts<\/li>\n<li>Cria\u00e7\u00e3o de p\u00e1ginas est\u00e1ticas<\/li>\n<li>Widgets<\/li>\n<li>Temas (Aqui cabe uma obs.: \u00e9 bem simples criar ou personalizar seu pr\u00f3prio tema)<\/li>\n<\/ul>\n<p>O BlogEngine tem uma interface simples e n\u00e3o tem instala\u00e7\u00e3o, basta colocar os arquivos no seu servidor web, logar e come\u00e7ar a postar.<\/p>\n<p>O site do projeto est\u00e1 aqui: <a href=\"http:\/\/www.dotnetblogengine.net\/\">http:\/\/www.dotnetblogengine.net\/<\/a><\/p>\n<p>O download da vers\u00e3o 2.8, que \u00e9 atual no momento, pode ser encontrado aqui: <a href=\"http:\/\/blogengine.codeplex.com\/releases\/view\/105425\">http:\/\/blogengine.codeplex.com\/releases\/view\/105425<\/a><\/p>\n<p>&nbsp;<\/p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Mon, 05 Aug 2013 15:53:22 +0000","created_by":1,"updated_at":"Mon, 05 Aug 2013 15:53:22 +0000","updated_by":1,"published_at":"Mon, 05 Aug 2013 15:53:22 +0000","published_by":1},{"id":155,"title":"UIkit: uma outra alternativa ao Bootstrap","slug":"uikit-uma-outra-alternativa-ao-bootstrap","markdown":"\nComo mostrei nesse post [uma alternativa ao bootsrap ](https:\/\/cezarcruz.com.br\/blog\/2013\/07\/dica-rapida-foundation-4-uma-alternativa-ao-bootsrap\/), nesse post vou \u201cmostrar\u201d (entenda como colocar o link para o site) um outro framework que \u00e9 uma \u00f3tima alternativa ao velho bootsrap.\n\nComo falei no outro post, o Bootstrap n\u00e3o \u00e9 ruim, mas se dermos uma olhada em alguns sites por ai, ser\u00e1 muito f\u00e1cil nos depararmos com o bootstrap, ent\u00e3o, para que nosso site ou sistema n\u00e3o seja mais um igual ao boostrap, o [UIkit](http:\/\/www.getuikit.com\/index.html) \u00e9 uma alternativa a se considerar.  \n Assim como o Bootstrap, ele usa CSS e JavaScript, ent\u00e3o ser\u00e1 bem f\u00e1cil se adaptar, ele possui tudo que precisamos:\n\n- Layout\n- Menus de navega\u00e7\u00e3o\n- Formul\u00e1rio\n- \u00cdcones\n- Barras de progresso\n- Dropdown\n- Modal\n- \u2026\n\nMuita coisa \u00fatil para padronizar nosso projeto, em breve escreve um posto mostrando como \u00e9 simples usar esse framework, mas por equanto fique com os links:\n\nP\u00e1gina do projeto: [http:\/\/www.getuikit.com\/index.html](http:\/\/www.getuikit.com\/index.html)\n\nGitHub do projeto: [https:\/\/github.com\/uikit\/uikit](https:\/\/github.com\/uikit\/uikit)\n\nDocumenta\u00e7\u00e3o: [http:\/\/www.getuikit.com\/docs\/documentation_get-started.html](http:\/\/www.getuikit.com\/docs\/documentation_get-started.html)\n\nO link de download n\u00e3o adianta postar, ele fica desatualizado logo, ent\u00e3o, para baixar o UIkit, basta acessar a documenta\u00e7\u00e3o e clicar no grande bot\u00e3o azul e bons estudos.\n\n\u00a0\n\n\n","html":"<p>Como mostrei nesse post <a href=\"https:\/\/cezarcruz.com.br\/blog\/2013\/07\/dica-rapida-foundation-4-uma-alternativa-ao-bootsrap\/\" target=\"_blank\">uma alternativa ao bootsrap <\/a>, nesse post vou &#8220;mostrar&#8221; (entenda como colocar o link para o site) um outro framework que \u00e9 uma \u00f3tima alternativa ao velho bootsrap.<\/p>\n<p>Como falei no outro post, o Bootstrap n\u00e3o \u00e9 ruim, mas se dermos uma olhada em alguns sites por ai, ser\u00e1 muito f\u00e1cil nos depararmos com o bootstrap, ent\u00e3o, para que nosso site ou sistema n\u00e3o seja mais um igual ao boostrap, o <a href=\"http:\/\/www.getuikit.com\/index.html\">UIkit<\/a> \u00e9 uma alternativa a se considerar.<br \/>\nAssim como o Bootstrap, ele usa CSS e JavaScript, ent\u00e3o ser\u00e1 bem f\u00e1cil se adaptar, ele possui tudo que precisamos:<\/p>\n<ul>\n<li>Layout<\/li>\n<li>Menus de navega\u00e7\u00e3o<\/li>\n<li>Formul\u00e1rio<\/li>\n<li>\u00cdcones<\/li>\n<li>Barras de progresso<\/li>\n<li>Dropdown<\/li>\n<li>Modal<\/li>\n<li>&#8230;<\/li>\n<\/ul>\n<p>Muita coisa \u00fatil para padronizar nosso projeto, em breve escreve um posto mostrando como \u00e9 simples usar esse framework, mas por equanto fique com os links:<\/p>\n<p>P\u00e1gina do projeto: <a href=\"http:\/\/www.getuikit.com\/index.html\" target=\"_blank\">http:\/\/www.getuikit.com\/index.html<\/a><\/p>\n<p>GitHub do projeto: <a href=\"https:\/\/github.com\/uikit\/uikit\" target=\"_blank\">https:\/\/github.com\/uikit\/uikit<\/a><\/p>\n<p>Documenta\u00e7\u00e3o: <a href=\"http:\/\/www.getuikit.com\/docs\/documentation_get-started.html\" target=\"_blank\">http:\/\/www.getuikit.com\/docs\/documentation_get-started.html<\/a><\/p>\n<p>O link de download n\u00e3o adianta postar, ele fica desatualizado logo, ent\u00e3o, para baixar o UIkit, basta acessar a documenta\u00e7\u00e3o e clicar no grande bot\u00e3o azul e bons estudos.<\/p>\n<p>&nbsp;<\/p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Wed, 14 Aug 2013 11:03:58 +0000","created_by":1,"updated_at":"Wed, 14 Aug 2013 11:03:58 +0000","updated_by":1,"published_at":"Wed, 14 Aug 2013 11:03:58 +0000","published_by":1},{"id":171,"title":"Criando o primeiro projeto ASPNET MVC com CSharp","slug":"criando-o-primeiro-projeto-aspnet-mvc-com-csharp","markdown":"\nFala pessoal,\n\nnesse post vou mostrar como criar a nossa primeira p\u00e1gina ASP.NET MVC.\n\nN\u00e3o vou entrar em detalhes da tecnologia, mas pelo pouco que estou aprendendo, acredito ser uma boa \u00e1rea de estudo, quem vem do Web Forms vai sentir um pouco de dificuldade, mas rapidinho pega o jeito, vamos l\u00e1:\n\n**Requisitos**\n\nNesse tutorial vamos utilizar o [Visual Studio 2012 Express for Web](http:\/\/www.microsoft.com\/visualstudio\/ptb\/products\/visual-studio-express-for-web)\n\n**M\u00e3o na massa**\n\nNosso primeiro passo \u00e9 criar um novo projeto no VS(Visual Studio), clique em File -> New Project\n\n[![tela_new_project_vs2012_MVC](http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/v1454457585\/tela_new_project_vs2012_MVC_nikiyo.png)](http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/v1454457585\/tela_new_project_vs2012_MVC_nikiyo.png)\n\nNa tela New Project iremos escolher a linguagem (Csharp ou VB.NET) qual \u00e9 o tipo de projeto, a localiza\u00e7\u00e3o e o nome dele:\n\nPra esse tutorial iremos utilizar a linguagem CSharp, o tipo de projeto \u00e9 ASP.NET MVC 4 Web Aplication, o nome, iremos colocar **SiteMVC**, clicamos em OK.\n\n[![Tela new MVC project](http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/v1454457584\/tela_new_aspnet_mvc_project_euqv1f.png)](http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/v1454457584\/tela_new_aspnet_mvc_project_euqv1f.png)\n\nNessa tela iremos escolher os tipos de projetos, no nosso caso iremos utilizar o template ***Empty*** (Os outros templates j\u00e1 vem com algumas funcionalidades, recomendo dar uma olhada, pra entender um pouco mais como funciona a estrutura do ASP.NET MVC), o View engine podemos deixar Razor mesmo ([mais informa\u00e7\u00f5es sobre o Razor aqui](http:\/\/msdn.microsoft.com\/pt-br\/library\/gg675215.aspx)******). Ap\u00f3s as escolhas, clicar em OK.\n\nAp\u00f3s nosso projeto ser criado, teremos a seguinte estrutura:\n\n[![Estrutura projeto MVC](http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/v1454457582\/projeto_site_mvc_vs2012_qwbyct.png)](http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/v1454457582\/projeto_site_mvc_vs2012_qwbyct.png)\n\nPra esse tutorial devemos destacar os seguintes diret\u00f3rios\n\n- **App_Start**: Nesse diret\u00f3rio devemos ficar atento com o arquivo RouteConfig.cs, que iremos utilizar em seguida;\n- **Controllers: **Onde fica os controles da nossa aplica\u00e7\u00e3o (MVC b\u00e1sico aqui =D);\n- **Model**: Onde fica os modelos\/dados da aplica\u00e7\u00e3o (MVC b\u00e1sico aqui tamb\u00e9m);\n- **Views**: Onde fica os cshtml, arquivos que ser\u00e3o a \u201ccara\u201d da nossa aplica\u00e7\u00e3o;\n- **Web.config**: Onde normalmente fica as configura\u00e7\u00f5es de uma aplica\u00e7\u00e3o .NET;\n\nCom a estrutura criada, vamos escrever c\u00f3digos. Primeiro, vamos criar um Controller chamado site, isso \u00e9 bem simples, clicar com o bot\u00e3o direito do mouse na pasta Controllers e em seguida Add -> Controller. Por padr\u00e3o devemos criar um controle assim:\n\n**[NomeDoController]Controler**\n\nNo nosso exemplo ficar\u00e1 SiteController, na tela AddController coloque o Controller name SiteController e no Scaffolding options selecione Empty MVC controller, clique em add:\n\n<div class=\"wp-caption aligncenter\" id=\"attachment_175\" style=\"width: 310px\">[![tela_add_controller](http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/h_195,w_300\/v1454457581\/tela_add_controller_mrsuxs.png)](http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/v1454457581\/tela_add_controller_mrsuxs.png)Tela Add Controller\n\n<\/div>Nossa classe SiteController ir\u00e1 estar assim:\n\nusing System; using System.Collections.Generic; using System.Linq; using System.Web; using System.Web.Mvc; namespace SiteMVC.Controllers { public class SiteController : Controller { \/\/ \/\/ GET: \/Site\/ public ActionResult Index() { return View(); } } }\n\nNote que nossa classe herda da classe Controller (OO aqui =P), e que j\u00e1 \u00e9 criado automaticamente um m\u00e9todo ActionResult chamdo Index que retorna uma View(). Essa classe quer dizer que, quando for feita a requisi\u00e7\u00e3o http:\/\/endereco\/Site\/ ir\u00e1 retornar a View \/Site\/Index.\n\nAgora vamos criar a view \/Site\/Index, pra fazermos isso, devemos criar uma pasta chamada Site(com S mai\u00fasculo) dentro da pasta Views. Depois de criado a pasta Site vamos criar a View Index, bot\u00e3o direito do mouse em cima da pasta Site, Add -> View. Na tela Add View, colocamos o View name de Index, View engine deixamos Razor mesmo, de resto deixamos como est\u00e1, clicar em Add.\n\n<div class=\"wp-caption aligncenter\" id=\"attachment_176\" style=\"width: 310px\">[![Tela Add view](http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/h_295,w_300\/v1454457580\/tela_add_view_gusagk.png)](http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/v1454457580\/tela_add_view_gusagk.png)Tela Add view\n\n<\/div>Agora foi criado a view Index.cshtml dentro da pasta Site, que ficou assim:\n\n@{ ViewBag.Title = \"Index\"; } <h2>Index<\/h2>\n\n> \u00a0Nota: Sempre que criarmos um ActionResult no controller, devemos criar um arquivo cshtml com o mesmo nome para que possa ser chamado quando for feito a requisi\u00e7\u00e3o via http.\n\nO arquivos Index.cshtml \u00e9 um arquivo html (podemos colocar marca\u00e7\u00e3o html neles):\n\n@{ ViewBag.Title = \"Index\"; }    <title>Home<\/title>   <h1>Home<\/h1>  \n\nPra executarmos nosso projeto, precisamos fazer um pequeno ajuste no arquivo *RouteConfig.cs:*\n\npublic static void RegisterRoutes(RouteCollection routes) { routes.IgnoreRoute(\"{resource}.axd\/{*pathInfo}\"); routes.MapRoute( name: \"Default\", url: \"{controller}\/{action}\/{id}\", defaults: new { controller = \"Site\", action = \"Index\", id = UrlParameter.Optional } ); }\n\nEssa classe define as rotas do MVC, e o par\u00e2metro defaults \u00e9 o controller que deve ser chamado quando n\u00e3o \u00e9 passado nenhum link na url. No nosso caso, usaremos o controller Site, e o action Index, para que a primeira pagina a ser processada ser\u00e1 o Index.cshmtl, o resultado est\u00e1 a baixo:\n\n<div class=\"wp-caption aligncenter\" id=\"attachment_179\" style=\"width: 310px\">[![P\u00e1gina index.cshtml](http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/h_196,w_300\/v1454457578\/index_cshtml_t8wqep.png)](http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/v1454457578\/index_cshtml_t8wqep.png)P\u00e1gina index.cshtml\n\n<\/div>O c\u00f3digo html gerado fica assim:\n\n   <title>Home<\/title>   <h1>Home<\/h1>  \n\nRepare que o c\u00f3digo gerado fica limpo e nada gerado escondido, que \u00e9 comum quando se trata de webforms.\n\nPra finalizar, vamos passar dados do controller para a View, pra isso, abrimos o SiteController.cs e editamos o ActionResult Index, inserindo a seguinte linha:\n\nViewBag.Mensagem = \"Ol\u00e1 MVC\";\n\nEstamos definindo que a vari\u00e1vel Titulo receber\u00e1 a string Ol\u00e1 MVC. Obs: ela deve ser colocada antes do return View().\n\nDepois de definido o valor da vari\u00e1vel, devemos colocar ela no arquivo Index.cshtml:\n\n@{ ViewBag.Title = \"Index\"; }    <title>Home<\/title>   <h1>@ViewBag.Mensagem<\/h1>  \n\n> \u00a0Pra utilizarmos Csharp no arquivo Index.cshtml devemos sempre come\u00e7ar o c\u00f3digo com @ (arroba).\n> \n> Sempre que fizer atualiza\u00e7\u00e3o no Controller o no Model \u00e9 preciso recompilar o projeto, mas quando \u00e9 feito atualiza\u00e7\u00e3o somente na View, n\u00e3o precisa compilar o projeto novamente.\n\nExecutamos novamente o nosso projeto, e teremos o resultado abaixo:\n\n<div class=\"wp-caption aligncenter\" id=\"attachment_181\" style=\"width: 310px\">[![Index.cshtml com ViewBag](http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/h_196,w_300\/v1454457577\/index_cshtml_final1_xgty2c.png)](http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/v1454457577\/index_cshtml_final1_xgty2c.png)Index.cshtml com ViewBag\n\n<\/div>E o c\u00f3digo gerado:\n\n\u00a0\n\n   <title>Home<\/title>   <h1>Ol\u00e1 MVC<\/h1>  \n\n\u00c9 isso ai, at\u00e9 mais!\n\n\n","html":"<p>Fala pessoal,<\/p>\n<p>nesse post vou mostrar como criar a nossa primeira p\u00e1gina ASP.NET MVC.<\/p>\n<p>N\u00e3o vou entrar em detalhes da tecnologia, mas pelo pouco que estou aprendendo, acredito ser uma boa \u00e1rea de estudo, quem vem do Web Forms vai sentir um pouco de dificuldade, mas rapidinho pega o jeito, vamos l\u00e1:<\/p>\n<p><!--more--><\/p>\n<p><strong>Requisitos<\/strong><\/p>\n<p>Nesse tutorial vamos utilizar o <a href=\"http:\/\/www.microsoft.com\/visualstudio\/ptb\/products\/visual-studio-express-for-web\">Visual Studio 2012 Express for Web<\/a><\/p>\n<p><strong>M\u00e3o na massa<\/strong><\/p>\n<p>Nosso primeiro passo \u00e9 criar um novo projeto no VS(Visual Studio), clique em File -&gt; New Project<\/p>\n<p style=\"text-align: center;\"><a href=\"http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/v1454457585\/tela_new_project_vs2012_MVC_nikiyo.png\"><img class=\" wp-image-172   aligncenter\" alt=\"tela_new_project_vs2012_MVC\" src=\"http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/v1454457585\/tela_new_project_vs2012_MVC_nikiyo.png\" \/><\/a><\/p>\n<p>Na tela New Project iremos escolher a linguagem (Csharp ou VB.NET) qual \u00e9 o tipo de projeto, a localiza\u00e7\u00e3o e o nome dele:<\/p>\n<p>Pra esse tutorial iremos utilizar a linguagem CSharp, o tipo de projeto \u00e9 ASP.NET MVC 4 Web Aplication, o nome, iremos colocar <strong>SiteMVC<\/strong>, clicamos em OK.<\/p>\n<p style=\"text-align: center;\"><a href=\"http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/v1454457584\/tela_new_aspnet_mvc_project_euqv1f.png\"><img class=\" wp-image-173  aligncenter\" alt=\"Tela new MVC project\" src=\"http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/v1454457584\/tela_new_aspnet_mvc_project_euqv1f.png\" \/><\/a><\/p>\n<p>Nessa tela iremos escolher os tipos de projetos, no nosso caso iremos utilizar o template <strong><em>Empty<\/em><\/strong> (Os outros templates j\u00e1 vem com algumas funcionalidades, recomendo dar uma olhada, pra entender um pouco mais como funciona a estrutura do ASP.NET MVC), o View engine podemos deixar Razor mesmo (<a href=\"http:\/\/msdn.microsoft.com\/pt-br\/library\/gg675215.aspx\">mais informa\u00e7\u00f5es sobre o Razor aqui<\/a> <em><strong><\/strong><\/em>). Ap\u00f3s as escolhas, clicar em OK.<\/p>\n<p>Ap\u00f3s nosso projeto ser criado, teremos a seguinte estrutura:<\/p>\n<p style=\"text-align: center;\"><a href=\"http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/v1454457582\/projeto_site_mvc_vs2012_qwbyct.png\"><img class=\" wp-image-174  aligncenter\" alt=\"Estrutura projeto MVC\" src=\"http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/v1454457582\/projeto_site_mvc_vs2012_qwbyct.png\" \/><\/a><\/p>\n<p>Pra esse tutorial devemos destacar os seguintes diret\u00f3rios<\/p>\n<ul>\n<li><strong>App_Start<\/strong>: Nesse diret\u00f3rio devemos ficar atento com o arquivo RouteConfig.cs, que iremos utilizar em seguida;<\/li>\n<li><strong>Controllers: <\/strong>Onde fica os controles da nossa aplica\u00e7\u00e3o (MVC b\u00e1sico aqui =D);<\/li>\n<li><strong>Model<\/strong>: Onde fica os modelos\/dados da aplica\u00e7\u00e3o (MVC b\u00e1sico aqui tamb\u00e9m);<\/li>\n<li><strong>Views<\/strong>: Onde fica os cshtml, arquivos que ser\u00e3o a &#8220;cara&#8221; da nossa aplica\u00e7\u00e3o;<\/li>\n<li><strong>Web.config<\/strong>: Onde normalmente fica as configura\u00e7\u00f5es de uma aplica\u00e7\u00e3o .NET;<\/li>\n<\/ul>\n<p>Com a estrutura criada, vamos escrever c\u00f3digos. Primeiro, vamos criar um Controller chamado site, isso \u00e9 bem simples, clicar com o bot\u00e3o direito do mouse na pasta Controllers e em seguida Add -&gt; Controller. Por padr\u00e3o devemos criar um controle assim:<\/p>\n<p><strong>[NomeDoController]Controler<\/strong><\/p>\n<p>No nosso exemplo ficar\u00e1 SiteController, na tela AddController coloque o Controller name SiteController e no Scaffolding options selecione Empty MVC controller, clique em add:<\/p>\n<div id=\"attachment_175\" style=\"width: 310px\" class=\"wp-caption aligncenter\"><a href=\"http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/v1454457581\/tela_add_controller_mrsuxs.png\"><img class=\"size-medium wp-image-175  \" alt=\"tela_add_controller\" src=\"http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/h_195,w_300\/v1454457581\/tela_add_controller_mrsuxs.png\" width=\"300\" height=\"195\" \/><\/a><p class=\"wp-caption-text\">Tela Add Controller<\/p><\/div>\n<p>Nossa classe SiteController ir\u00e1 estar assim:<\/p>\n<pre class=\"lang:c# decode:true\">using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Web;\nusing System.Web.Mvc;\n\nnamespace SiteMVC.Controllers\n{\n    public class SiteController : Controller\n    {\n        \/\/\n        \/\/ GET: \/Site\/\n\n        public ActionResult Index()\n        {\n            return View();\n        }\n\n    }\n}<\/pre>\n<p>Note que nossa classe herda da classe Controller (OO aqui =P), e que j\u00e1 \u00e9 criado automaticamente um m\u00e9todo ActionResult chamdo Index que retorna uma View(). Essa classe quer dizer que, quando for feita a requisi\u00e7\u00e3o http:\/\/endereco\/Site\/ ir\u00e1 retornar a View \/Site\/Index.<\/p>\n<p>Agora vamos criar a view \/Site\/Index, pra fazermos isso, devemos criar uma pasta chamada Site(com S mai\u00fasculo) dentro da pasta Views. Depois de criado a pasta Site vamos criar a View Index, bot\u00e3o direito do mouse em cima da pasta Site, Add -&gt; View. Na tela Add View, colocamos o View name de Index, View engine deixamos Razor mesmo, de resto deixamos como est\u00e1, clicar em Add.<\/p>\n<div id=\"attachment_176\" style=\"width: 310px\" class=\"wp-caption aligncenter\"><a href=\"http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/v1454457580\/tela_add_view_gusagk.png\"><img class=\"size-medium wp-image-176 \" alt=\"Tela Add view\" src=\"http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/h_295,w_300\/v1454457580\/tela_add_view_gusagk.png\" width=\"300\" height=\"295\" \/><\/a><p class=\"wp-caption-text\">Tela Add view<\/p><\/div>\n<p>Agora foi criado a view Index.cshtml dentro da pasta Site, que ficou assim:<\/p>\n<pre class=\"lang:c# decode:true\">@{\n    ViewBag.Title = \"Index\";\n}\n\n&lt;h2&gt;Index&lt;\/h2&gt;<\/pre>\n<blockquote><p>\u00a0Nota: Sempre que criarmos um ActionResult no controller, devemos criar um arquivo cshtml com o mesmo nome para que possa ser chamado quando for feito a requisi\u00e7\u00e3o via http.<\/p><\/blockquote>\n<p>O arquivos Index.cshtml \u00e9 um arquivo html (podemos colocar marca\u00e7\u00e3o html neles):<\/p>\n<pre class=\"lang:c# decode:true\">@{\n    ViewBag.Title = \"Index\";\n}\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;title&gt;Home&lt;\/title&gt;\n    &lt;\/head&gt;\n    &lt;body&gt;\n        &lt;h1&gt;Home&lt;\/h1&gt;\n    &lt;\/body&gt;\n&lt;\/html&gt;<\/pre>\n<p>Pra executarmos nosso projeto, precisamos fazer um pequeno ajuste no arquivo <em>RouteConfig.cs:<\/em><\/p>\n<pre class=\"lang:c# decode:true\">public static void RegisterRoutes(RouteCollection routes)\n        {\n            routes.IgnoreRoute(\"{resource}.axd\/{*pathInfo}\");\n\n            routes.MapRoute(\n                name: \"Default\",\n                url: \"{controller}\/{action}\/{id}\",\n                defaults: new { controller = \"Site\", action = \"Index\", id = UrlParameter.Optional }\n            );\n        }<\/pre>\n<p>Essa classe define as rotas do MVC, e o par\u00e2metro defaults \u00e9 o controller que deve ser chamado quando n\u00e3o \u00e9 passado nenhum link na url. No nosso caso, usaremos o controller Site, e o action Index, para que a primeira pagina a ser processada ser\u00e1 o Index.cshmtl, o resultado est\u00e1 a baixo:<\/p>\n<div id=\"attachment_179\" style=\"width: 310px\" class=\"wp-caption aligncenter\"><a href=\"http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/v1454457578\/index_cshtml_t8wqep.png\"><img class=\"size-medium wp-image-179 \" alt=\"P\u00e1gina index.cshtml\" src=\"http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/h_196,w_300\/v1454457578\/index_cshtml_t8wqep.png\" width=\"300\" height=\"196\" \/><\/a><p class=\"wp-caption-text\">P\u00e1gina index.cshtml<\/p><\/div>\n<p>O c\u00f3digo html gerado fica assim:<\/p>\n<pre class=\"lang:php decode:true\">&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;title&gt;Home&lt;\/title&gt;\n    &lt;\/head&gt;\n    &lt;body&gt;\n        &lt;h1&gt;Home&lt;\/h1&gt;\n    &lt;\/body&gt;\n&lt;\/html&gt;<\/pre>\n<p>Repare que o c\u00f3digo gerado fica limpo e nada gerado escondido, que \u00e9 comum quando se trata de webforms.<\/p>\n<p>Pra finalizar, vamos passar dados do controller para a View, pra isso, abrimos o SiteController.cs e editamos o ActionResult Index, inserindo a seguinte linha:<\/p>\n<pre class=\"lang:c# decode:true\">ViewBag.Mensagem = \"Ol\u00e1 MVC\";<\/pre>\n<p>Estamos definindo que a vari\u00e1vel Titulo receber\u00e1 a string Ol\u00e1 MVC. Obs: ela deve ser colocada antes do return View().<\/p>\n<p>Depois de definido o valor da vari\u00e1vel, devemos colocar ela no arquivo Index.cshtml:<\/p>\n<pre class=\"lang:default decode:true\">@{\n    ViewBag.Title = \"Index\";\n}\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;title&gt;Home&lt;\/title&gt;\n    &lt;\/head&gt;\n    &lt;body&gt;\n        &lt;h1&gt;@ViewBag.Mensagem&lt;\/h1&gt;\n    &lt;\/body&gt;\n&lt;\/html&gt;<\/pre>\n<blockquote><p>\u00a0Pra utilizarmos Csharp no arquivo Index.cshtml devemos sempre come\u00e7ar o c\u00f3digo com @ (arroba).<\/p>\n<p>Sempre que fizer atualiza\u00e7\u00e3o no Controller o no Model \u00e9 preciso recompilar o projeto, mas quando \u00e9 feito atualiza\u00e7\u00e3o somente na View, n\u00e3o precisa compilar o projeto novamente.<\/p><\/blockquote>\n<p>Executamos novamente o nosso projeto, e teremos o resultado abaixo:<\/p>\n<div id=\"attachment_181\" style=\"width: 310px\" class=\"wp-caption aligncenter\"><a href=\"http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/v1454457577\/index_cshtml_final1_xgty2c.png\"><img class=\"size-medium wp-image-181 \" alt=\"Index.cshtml com ViewBag\" src=\"http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/h_196,w_300\/v1454457577\/index_cshtml_final1_xgty2c.png\" width=\"300\" height=\"196\" \/><\/a><p class=\"wp-caption-text\">Index.cshtml com ViewBag<\/p><\/div>\n<p>E o c\u00f3digo gerado:<\/p>\n<p>&nbsp;<\/p>\n<pre class=\"lang:php decode:true\">&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;title&gt;Home&lt;\/title&gt;\n    &lt;\/head&gt;\n    &lt;body&gt;\n        &lt;h1&gt;Ol&amp;#225; MVC&lt;\/h1&gt;\n    &lt;\/body&gt;\n&lt;\/html&gt;<\/pre>\n<p>\u00c9 isso ai, at\u00e9 mais!<\/p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Mon, 02 Sep 2013 09:31:21 +0000","created_by":1,"updated_at":"Tue, 02 Feb 2016 21:59:46 +0000","updated_by":1,"published_at":"Mon, 02 Sep 2013 09:31:21 +0000","published_by":1},{"id":185,"title":"Pegando valores via Url (GET) usando CSharp ou VB.NET","slug":"pegando-valores-via-url-get-usando-csharp-ou-vb-net","markdown":"\nDica r\u00e1pida pra pegar valores (GET) em urls em ASP .NET:\n\nTemos o seguinte link:\n\nhttp:\/\/exemplo.com\/pag.aspx?rel=valor&lang=br\n\nPra pegar o valor utilizando csharp:\n\nstring valor = Request.QueryString[\"rel\"];\n\nOu:\n\nforeach(string params in Request.QueryString) { Response.write(Request.QueryString[params]) }\n\nPra pegar o valor utilizando VB.NET:\n\nDim valar As String = Request.QueryString(\"rel\")\n\nOu:\n\nFor Each param As String In Request.QueryString() Response.Write(Request.QueryString(param)) Next\n\nF\u00e1cil f\u00e1cil, at\u00e9.\n\n\n","html":"<p>Dica r\u00e1pida pra pegar valores (GET) em urls em ASP .NET:<\/p>\n<p>Temos o seguinte link:<\/p>\n<p>http:\/\/exemplo.com\/pag.aspx?rel=valor&#038;lang=br<\/p>\n<p>Pra pegar o valor utilizando csharp:<\/p>\n<pre class=\"lang:c# decode:true\">string valor = Request.QueryString[\"rel\"];<\/pre>\n<p>Ou:<\/p>\n<pre class=\"lang:c# decode:true\">foreach(string params in Request.QueryString)\n{\n    Response.write(Request.QueryString[params])\n}<\/pre>\n<p>Pra pegar o valor utilizando VB.NET:<\/p>\n<pre class=\"lang:vbnet decode:true\">Dim valar As String = Request.QueryString(\"rel\")<\/pre>\n<p>Ou:<\/p>\n<pre class=\"lang:vbnet decode:true\">For Each param As String In Request.QueryString()\n    Response.Write(Request.QueryString(param))\nNext<\/pre>\n<p>F\u00e1cil f\u00e1cil, at\u00e9.<\/p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Mon, 09 Sep 2013 15:26:46 +0000","created_by":1,"updated_at":"Mon, 09 Sep 2013 15:26:46 +0000","updated_by":1,"published_at":"Mon, 09 Sep 2013 15:26:46 +0000","published_by":1},{"id":193,"title":"Como utilizar _Layout.cshtml no ASP.NET MVC 4","slug":"como-utilizar-_layout-cshtml-no-asp-net-mvc-4","markdown":"\nNesse tutorial vamos aprender como utilizar o arquivo de _Layout.cshtml no nosso [primeiro projeto MVC 4](https:\/\/cezarcruz.com.br\/blog\/2013\/09\/criando-o-primeiro-projeto-aspnet-mvc-com-csharp\/).\n\nAssim como no Web Forms com seu Master Page, o MVC tem o seu arquivo master tamb\u00e9m, por\u00e9m ele \u00e9 chamado de _Layout.cshtml, nele colocamos nosso layout padr\u00e3o de p\u00e1ginas.\n\n> Quando uma View come\u00e7a com _ (underline) significa que ela n\u00e3o estar\u00e1 naveg\u00e1vel, ou seja, n\u00e3o ser\u00e1 poss\u00edvel acessar seu conte\u00fado atrav\u00e9s de requisi\u00e7\u00f5es do browser.\n\nPara come\u00e7armos a utilizar um layout padr\u00e3o nas nossas p\u00e1ginas devemos criar dois arquivos cshtml:\n\n- _ViewStart.cshtml: na raiz da pasta View do projeto;\n- _Layout.cshtml: dentro da pasta Shared que por sua vez est\u00e1 dentro da pasta View;\n\nO arquivo _ViewStart.cshtml contem apenas uma referencia para nosso layout, pois ele sera processado antes de chamar a View, podemos incluir l\u00f3gica nesse arquivo, por exemplo, pra carregar um layout pra mobile quando vier uma requisi\u00e7\u00e3o de um navegador mobile. O arquivo deve ficar assim:\n\n@{ Layout = \"~\/Views\/Shared\/_Layout.cshtml\"; }\n\nO arquivo _Layout.cshtml \u00e9 onde iremos colocar nosso Layout padr\u00e3o.\n\nE n\u00e3o podemos esquecer do diret\u00f3rio onde colocamos as folhas de estilo, basta criar, na raiz do projeto, uma pasta chamada Content, crie tamb\u00e9m um arquivo chamado Site.css, pode deixar em branco, voltaremos nele mais tarde.\n\nPra criamos um layout din\u00e2mico, o primeiro passo \u00e9 modelar ele est\u00e1tico, depois colocamos as fun\u00e7\u00f5es din\u00e2micas. Vamos definir nosso layout utilizando Html:\n\n   <title>Titulo<\/title>   <!-- Cabe\u00e7alho, menu, --> <header> <\/header> <!-- Conteudo vai aqui --> <!-- Rodap\u00e9 --> <footer> \u00a9 2013 <\/footer>  \n\nEst\u00e1 ai a defini\u00e7\u00e3o do nosso layout (^^), claro que isso \u00e9 apenas para fins de tutorial, agora que temos nosso layout definido, hora de deixar ele um pouco mais \u201cesperto\u201d:\n\nNo tag head, trocamos os dados por esse:\n\n<meta charset=\"utf-8\" \/> <title>@ViewBag.Title<\/title> <link href=\"@Url.Content(\"~\/Content\/Site.css\")\" rel=\"stylesheet\" type=\"text\/css\" \/>\n\nA linha 2 \u00e9 a variavel com o titulo da View que est\u00e1 sendo carregado, o valor dessa vari\u00e1vel pode ser definida tanto no controller como na propria View;\n\nA linha 3 \u00e9 o link para o css que iremos utilizar aqui.\n\nAgora definimos nosso rodap\u00e9:\n\n<footer> \u00a9 @DateTime.Now.Year <\/footer>\n\nBem simples, o \u00fanico processamento do servidor ser\u00e1 pra exibir o ano corrente.\n\nE agora o mais importante, onde queremos que nossa View apare\u00e7a no layout:\n\n<div id=\"main\"> @RenderBody() <\/div>\n\nPara que o conte\u00fado das Views apare\u00e7am no Layout, devemos colocar @RenderBody(). O @RenderBody() sem duvidas \u00e9 a parte mais importante do layout, sem ele n\u00e3o teremos dados das Views no nosso layout.\n\nO resultado final do _Layout.cshtml ficou assim:\n\n <html lang=\"pt-br\">  <meta charset=\"utf-8\" \/> <title>@ViewBag.Title<\/title> <link href=\"@Url.Content(\"~\/Content\/Site.css\")\" rel=\"stylesheet\" type=\"text\/css\" \/>   <header> <\/header> <div id=\"main\"> @RenderBody() <\/div> <footer> \u00a9 @DateTime.Now.Year <\/footer>  \n\nE agora, quando criarmos uma View, ela automaticamente vir\u00e1 com o c\u00f3digo do layout. Pra exibirmos o titulo, podemos fazer de duas formas, usando o controller:\n\npublic ActionResult Index() { ViewBag.Title = \"Titulo da p\u00e1gina\"; return View(); }\n\nOu podemos colocar na pr\u00f3pria View, pra isso colocamos o c\u00f3digo na primeira linha do arquivo, ficando assim:\n\n@{ ViewBag.Title = \"Titulo da p\u00e1gina\"; }\n\nO ultimo arquivo a ser renderizado \u00e9 o [View].cshtml, ou seja, se definirmos o ViewBag.Title na View e no controller, o valor utilizado ser\u00e1 o da View. No final, o HTML gerado ser\u00e1 o seguinte:\n\n <html lang=\"pt-br\">  <meta charset=\"utf-8\" \/> <title>Titulo da p\u00e1gina<\/title> <link href=\"\/Content\/Site.css\" rel=\"stylesheet\" type=\"text\/css\" \/>   <header> <\/header> <div id=\"main\"> <\/div> <footer> \u00a9 2013 <\/footer>  \n\nLimpo e bonito.\n\nExiste outras formas de utilizar layout padr\u00e3o no MVC 4, mas isso \u00e9 assunto para outro post.\n\nAt\u00e9 mais!\n\n\n","html":"<p>Nesse tutorial vamos aprender como utilizar o arquivo de _Layout.cshtml no nosso <a href=\"https:\/\/cezarcruz.com.br\/blog\/2013\/09\/criando-o-primeiro-projeto-aspnet-mvc-com-csharp\/\" target=\"_blank\">primeiro projeto MVC 4<\/a>.<\/p>\n<p>Assim como no Web Forms com seu Master Page, o MVC tem o seu arquivo master tamb\u00e9m, por\u00e9m ele \u00e9 chamado de _Layout.cshtml, nele colocamos nosso layout padr\u00e3o de p\u00e1ginas.<\/p>\n<p><!--more--><\/p>\n<blockquote><p>Quando uma View come\u00e7a com _ (underline) significa que ela n\u00e3o estar\u00e1 naveg\u00e1vel, ou seja, n\u00e3o ser\u00e1 poss\u00edvel acessar seu conte\u00fado atrav\u00e9s de requisi\u00e7\u00f5es do browser.<\/p><\/blockquote>\n<p>Para come\u00e7armos a utilizar um layout padr\u00e3o nas nossas p\u00e1ginas devemos criar dois arquivos cshtml:<\/p>\n<ul>\n<li>_ViewStart.cshtml: na raiz da pasta View do projeto;<\/li>\n<li>_Layout.cshtml: dentro da pasta Shared que por sua vez est\u00e1 dentro da pasta View;<\/li>\n<\/ul>\n<p>O arquivo _ViewStart.cshtml contem apenas uma referencia para nosso layout, pois ele sera processado antes de chamar a View, podemos incluir l\u00f3gica nesse arquivo, por exemplo, pra carregar um layout pra mobile quando vier uma requisi\u00e7\u00e3o de um navegador mobile. O arquivo deve ficar assim:<\/p>\n<pre class=\"lang:asp decode:true\">@{\n    Layout = \"~\/Views\/Shared\/_Layout.cshtml\";\n}<\/pre>\n<p>O arquivo _Layout.cshtml \u00e9 onde iremos colocar nosso Layout padr\u00e3o.<\/p>\n<p>E n\u00e3o podemos esquecer do diret\u00f3rio onde colocamos as folhas de estilo, basta criar, na raiz do projeto, uma pasta chamada Content, crie tamb\u00e9m um arquivo chamado Site.css, pode deixar em branco, voltaremos nele mais tarde.<\/p>\n<p>Pra criamos um layout din\u00e2mico, o primeiro passo \u00e9 modelar ele est\u00e1tico, depois colocamos as fun\u00e7\u00f5es din\u00e2micas. Vamos definir nosso layout utilizando Html:<\/p>\n<pre class=\"lang:asp decode:true\">&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;title&gt;Titulo&lt;\/title&gt;\n    &lt;\/head&gt;\n    &lt;body&gt;\n        &lt;!-- Cabe\u00e7alho, menu, --&gt;\n        &lt;header&gt;\n        &lt;\/header&gt;\n        &lt;!-- Conteudo vai aqui --&gt;\n\n        &lt;!-- Rodap\u00e9 --&gt;\n        &lt;footer&gt;\n            &amp;copy; 2013\n        &lt;\/footer&gt;\n    &lt;\/body&gt;\n&lt;\/html&gt;<\/pre>\n<p>Est\u00e1 ai a defini\u00e7\u00e3o do nosso layout (^^), claro que isso \u00e9 apenas para fins de tutorial, agora que temos nosso layout definido, hora de deixar ele um pouco mais &#8220;esperto&#8221;:<\/p>\n<p>No tag head, trocamos os dados por esse:<\/p>\n<pre class=\"lang:asp decode:true\">&lt;meta charset=\"utf-8\" \/&gt;\n&lt;title&gt;@ViewBag.Title&lt;\/title&gt;  \n&lt;link href=\"@Url.Content(\"~\/Content\/Site.css\")\" rel=\"stylesheet\" type=\"text\/css\" \/&gt;<\/pre>\n<p>A linha 2 \u00e9 a variavel com o titulo da View que est\u00e1 sendo carregado, o valor dessa vari\u00e1vel pode ser definida tanto no controller como na propria View;<\/p>\n<p>A linha 3 \u00e9 o link para o css que iremos utilizar aqui.<\/p>\n<p>Agora definimos nosso rodap\u00e9:<\/p>\n<pre class=\"lang:asp decode:true\">&lt;footer&gt;\n      &amp;copy; @DateTime.Now.Year\n&lt;\/footer&gt;<\/pre>\n<p>Bem simples, o \u00fanico processamento do servidor ser\u00e1 pra exibir o ano corrente.<\/p>\n<p>E agora o mais importante, onde queremos que nossa View apare\u00e7a no layout:<\/p>\n<pre class=\"lang:asp decode:true\">&lt;div id=\"main\"&gt;\n     @RenderBody()\n&lt;\/div&gt;<\/pre>\n<p>Para que o conte\u00fado das Views apare\u00e7am no Layout, devemos colocar @RenderBody(). O @RenderBody() sem duvidas \u00e9 a parte mais importante do layout, sem ele n\u00e3o teremos dados das Views no nosso layout.<\/p>\n<p>O resultado final do _Layout.cshtml ficou assim:<\/p>\n<pre class=\"lang:xhtml decode:true\">&lt;!DOCTYPE html&gt;\n&lt;html lang=\"pt-br\"&gt;\n    &lt;head&gt;\n        &lt;meta charset=\"utf-8\" \/&gt;\n        &lt;title&gt;@ViewBag.Title&lt;\/title&gt;  \n        &lt;link href=\"@Url.Content(\"~\/Content\/Site.css\")\" rel=\"stylesheet\" type=\"text\/css\" \/&gt;       \n    &lt;\/head&gt;\n    &lt;body&gt;\n        &lt;header&gt;            \n        &lt;\/header&gt;\n        &lt;div id=\"main\"&gt;\n            @RenderBody()\n        &lt;\/div&gt;\n        &lt;footer&gt;\n            &amp;copy; @DateTime.Now.Year\n        &lt;\/footer&gt;\n    &lt;\/body&gt;\n&lt;\/html&gt;<\/pre>\n<p>E agora, quando criarmos uma View, ela automaticamente vir\u00e1 com o c\u00f3digo do layout. Pra exibirmos o titulo, podemos fazer de duas formas, usando o controller:<\/p>\n<pre class=\"lang:c# decode:true\">public ActionResult Index()\n{\n     ViewBag.Title = \"Titulo da p\u00e1gina\";\n     return View();\n}<\/pre>\n<p>Ou podemos colocar na pr\u00f3pria View, pra isso colocamos o c\u00f3digo na primeira linha do arquivo, ficando assim:<\/p>\n<pre class=\"lang:asp decode:true\">@{\n    ViewBag.Title = \"Titulo da p\u00e1gina\";\n}<\/pre>\n<p>O ultimo arquivo a ser renderizado \u00e9 o [View].cshtml, ou seja, se definirmos o ViewBag.Title na View e no controller, o valor utilizado ser\u00e1 o da View. No final, o HTML gerado ser\u00e1 o seguinte:<\/p>\n<pre class=\"lang:asp decode:true\">&lt;!DOCTYPE html&gt;\n&lt;html lang=\"pt-br\"&gt;\n    &lt;head&gt;\n        &lt;meta charset=\"utf-8\" \/&gt;\n        &lt;title&gt;Titulo da p\u00e1gina&lt;\/title&gt;  \n        &lt;link href=\"\/Content\/Site.css\" rel=\"stylesheet\" type=\"text\/css\" \/&gt;       \n    &lt;\/head&gt;\n    &lt;body&gt;\n        &lt;header&gt;           \n        &lt;\/header&gt;\n        &lt;div id=\"main\"&gt;\n\n        &lt;\/div&gt;\n\n        &lt;footer&gt;\n            &amp;copy; 2013\n        &lt;\/footer&gt;\n    &lt;\/body&gt;\n&lt;\/html&gt;<\/pre>\n<p>Limpo e bonito.<\/p>\n<p>Existe outras formas de utilizar layout padr\u00e3o no MVC 4, mas isso \u00e9 assunto para outro post.<\/p>\n<p>At\u00e9 mais!<\/p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Fri, 13 Sep 2013 09:37:24 +0000","created_by":1,"updated_at":"Fri, 13 Sep 2013 09:37:24 +0000","updated_by":1,"published_at":"Fri, 13 Sep 2013 09:37:24 +0000","published_by":1},{"id":209,"title":"Utilizando multi idiomas no php CodeIgniter","slug":"utilizando-multi-idiomas-no-php-codeigniter","markdown":"\n\n## Esse \u00e9 o primeiro post falando de **CodeIginiter**.\n\nVamos l\u00e1, nesse tutorial vamos tentar aprender como utilizar o multi idioma em uma aplica\u00e7\u00e3o utilizando **CodeIginiter**, daqui pra frente, apenas CI.\n\nO primeiro passo \u00e9 configurar:\n\nCriamos uma pasta dentro de application\/language chamada **portuguese **nessa pasta que iremos colocar nossas strings traduzidas.\n\nAp\u00f3s criarmos a pasta, devemos alterar o arquivo application\/config\/config.php, na seguinte linha:\n\n$config['language'] = 'english';\n\npara:\n\n$config['language'] = 'portuguese';\n\nEssa configura\u00e7\u00e3o quer dizer que o idioma padr\u00e3o vai ser o que tiver dentro da pasta portuguese.\n\n> Repare que temos duas pastas language, uma dentro de application e outra dentro de system, quando o CI procura pelas strings traduzidas, o primeiro local que ele procurar \u00e9 em application\/language e em seguida system\/language, ent\u00e3o, o mais sensato \u00e9 colocarmos nossas strings dentro de application\/language.\n\nA nomenclatura padr\u00e3o dos arquivos de idiomas \u00e9 **nome_lang.php, **para o nosso exemplo, vamos criar um arquivo chamada app_lang.php dentro da pasta portuguese. O conte\u00fado do arquivo dever\u00e1 ficar da seguinte forma:\n\n<?php $lang['title'] = \"Titulo\"; $lang['first_name'] = \"Primeiro nome\"; $lang['last_name'] = \"Ultimo nome\"; $lang['date'] = \"data\"; ?>\n\nAgora, para utilizarmos ele \u00e9 t\u00e3o simples quanto a sua cria\u00e7\u00e3o, basta carregar ele com essa \u201cenorme\u201d linha de c\u00f3digo:\n\n$this->lang->load(\"app\",\"portuguese\");\n\nDa forma acima, devemos colocar a chamada em todo lugar que for ter strings traduzidas, ent\u00e3o, pra facilitar, vamos usar ele no m\u00e9todo construtor do nosso Controller:\n\npublic function __construct() { parent::__construct(); $this->lang->load(\"app\",\"portuguese\"); }\n\n> \u00a0Repare que utilizamos apenas o nome do arquivo, \u201capp\u201d, o resto o CI que preenche.\n\nAgora que carregamos ele no nosso Controller, vamos utilizar ele:\n\n$data['title'] = $this -> lang -> line('title');\n\nA linha acima assume que o valor de $title ser\u00e1 Titulo. \u00c9 t\u00e3o simples que parece mentira, mas \u00e9 isso mesmo, agora s\u00f3 passar o valor pra view e exibir, lindo e traduzido.\n\nE claro, como a inten\u00e7\u00e3o de utilizar o multi idioma \u00e9 o de que nossa aplica\u00e7\u00e3o seja vis\u00edvel em outra l\u00edngua, pra isso, basta criar uma nova pasta em application\/language com o idioma que preferir, criar os mesmos arquivos que est\u00e3o na pasta portuguese e mandar ver na tradu\u00e7\u00e3o.\n\nS\u00f3 n\u00e3o esque\u00e7a de alterar o lang->load para que ele carregue o novo idioma corretamente:\n\n$this->lang->load(\"app\",\"idioma\");\n\n[Obtenha o CI aqui](https:\/\/github.com\/EllisLab\/CodeIgniter\/) e o[ pratico manual aqui](http:\/\/ellislab.com\/codeigniter\/user-guide\/).\n\n\u00c9 isso ai, espero que seja \u00fatil.\n\nAt\u00e9 mais, abra\u00e7os.\n\n\n","html":"<h2>Esse \u00e9 o primeiro post falando de <strong>CodeIginiter<\/strong>.<\/h2>\n<p>Vamos l\u00e1, nesse tutorial vamos tentar aprender como utilizar o multi idioma em uma aplica\u00e7\u00e3o utilizando <strong>CodeIginiter<\/strong>, daqui pra frente, apenas CI.<\/p>\n<p>O primeiro passo \u00e9 configurar:<\/p>\n<p><!--more--><\/p>\n<p>Criamos uma pasta dentro de application\/language chamada <strong>portuguese <\/strong>nessa pasta que iremos colocar nossas strings traduzidas.<\/p>\n<p>Ap\u00f3s criarmos a pasta, devemos alterar o arquivo application\/config\/config.php, na seguinte linha:<\/p>\n<pre class=\"lang:php decode:true\">$config['language'] = 'english';<\/pre>\n<p>para:<\/p>\n<pre class=\"lang:php decode:true\">$config['language'] = 'portuguese';<\/pre>\n<p>Essa configura\u00e7\u00e3o quer dizer que o idioma padr\u00e3o vai ser o que tiver dentro da pasta portuguese.<\/p>\n<blockquote><p>Repare que temos duas pastas language, uma dentro de application e outra dentro de system, quando o CI procura pelas strings traduzidas, o primeiro local que ele procurar \u00e9 em application\/language e em seguida system\/language, ent\u00e3o, o mais sensato \u00e9 colocarmos nossas strings dentro de application\/language.<\/p><\/blockquote>\n<p>A nomenclatura padr\u00e3o dos arquivos de idiomas \u00e9 <strong>nome_lang.php, <\/strong>para o nosso exemplo, vamos criar um arquivo chamada app_lang.php dentro da pasta portuguese. O conte\u00fado do arquivo dever\u00e1 ficar da seguinte forma:<\/p>\n<pre class=\"lang:php decode:true\">&lt;?php\n        $lang['title'] = \"Titulo\";\n\t$lang['first_name'] = \"Primeiro nome\";\n\t$lang['last_name'] = \"Ultimo nome\";\n\t$lang['date'] = \"data\";\n\n?&gt;<\/pre>\n<p>Agora, para utilizarmos ele \u00e9 t\u00e3o simples quanto a sua cria\u00e7\u00e3o, basta carregar ele com essa &#8220;enorme&#8221; linha de c\u00f3digo:<\/p>\n<pre class=\"lang:php decode:true\">$this-&gt;lang-&gt;load(\"app\",\"portuguese\");<\/pre>\n<p>Da forma acima, devemos colocar a chamada em todo lugar que for ter strings traduzidas, ent\u00e3o, pra facilitar, vamos usar ele no m\u00e9todo construtor do nosso Controller:<\/p>\n<pre class=\"lang:php decode:true\">public function __construct() {\n        parent::__construct();      \n        $this-&gt;lang-&gt;load(\"app\",\"portuguese\");\n   }<\/pre>\n<blockquote><p>\u00a0Repare que utilizamos apenas o nome do arquivo, &#8220;app&#8221;, o resto o CI que preenche.<\/p><\/blockquote>\n<p>Agora que carregamos ele no nosso Controller, vamos utilizar ele:<\/p>\n<pre class=\"lang:php decode:true\">$data['title'] = $this -&gt; lang -&gt; line('title');<\/pre>\n<p>A linha acima assume que o valor de $title ser\u00e1 Titulo. \u00c9 t\u00e3o simples que parece mentira, mas \u00e9 isso mesmo, agora s\u00f3 passar o valor pra view e exibir, lindo e traduzido.<\/p>\n<p>E claro, como a inten\u00e7\u00e3o de utilizar o multi idioma \u00e9 o de que nossa aplica\u00e7\u00e3o seja vis\u00edvel em outra l\u00edngua, pra isso, basta criar uma nova pasta em application\/language com o idioma que preferir, criar os mesmos arquivos que est\u00e3o na pasta portuguese e mandar ver na tradu\u00e7\u00e3o.<\/p>\n<p>S\u00f3 n\u00e3o esque\u00e7a de alterar o lang-&gt;load para que ele carregue o novo idioma corretamente:<\/p>\n<pre class=\"lang:php decode:true\">$this-&gt;lang-&gt;load(\"app\",\"idioma\");<\/pre>\n<p><a href=\"https:\/\/github.com\/EllisLab\/CodeIgniter\/\">Obtenha o CI aqui<\/a> e o<a href=\"http:\/\/ellislab.com\/codeigniter\/user-guide\/\"> pratico manual aqui<\/a>.<\/p>\n<p>\u00c9 isso ai, espero que seja \u00fatil.<\/p>\n<p>At\u00e9 mais, abra\u00e7os.<\/p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Tue, 01 Oct 2013 15:23:53 +0000","created_by":1,"updated_at":"Tue, 01 Oct 2013 15:23:53 +0000","updated_by":1,"published_at":"Tue, 01 Oct 2013 15:23:53 +0000","published_by":1},{"id":230,"title":"Como instalar o Nginx + PHP + MySql no Ubuntu","slug":"como-instalar-o-nginx-php-mysql-no-ubuntu","markdown":"\n\n## Hoje uma dica bem simples: como instalar o Nginx (Servidor WEB) + PHP e MySql no Ubuntu.\n\nO **Nginx** (Pronuncia Engine-x) \u00e9 um concorrente do Apache para servir p\u00e1ginas web. Para servir p\u00e1ginas est\u00e1ticas, sem d\u00favidas \u00e9 muito melhor que o Apache e tem um ganho com p\u00e1ginas din\u00e2micas tamb\u00e9m ([Apache vs Nginx](http:\/\/systemsarchitect.net\/apache2-vs-nginx-for-php-application\/)). O que pude comprovar \u00e9 o uso de mem\u00f3ria, por exemplo, o **Nginx** usa bem menos e o tempo de reposta \u00e9 bem menor quando comparado ao Apache. Vamos l\u00e1.\n\nO primeiro passo \u00e9 Instalar o **Nginx**:\n\nsudo apt-get install nginx\n\n> A vers\u00e3o no reposit\u00f3rio oficial do Ubuntu \u00e9 um pouco desatualizada, mas ir\u00e1 funcionar muito bem pra esse tutorial\n\nDepois de instalado, basta iniciar o servi\u00e7o:\n\n\/etc\/init.d\/nginx start\n\nA p\u00e1gina de boas vindas \u00e9 a seguinte:\n\n<div class=\"wp-caption aligncenter\" id=\"attachment_231\" style=\"width: 310px\">[![nginx-imagen-inicial](http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/h_169,w_300\/v1454457576\/nginx-imagen-inicial_krlgoc.png \"Welcome to nginx\")](http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/v1454457576\/nginx-imagen-inicial_krlgoc.png)Welcome to nginx\n\n<\/div>Pra instalar o PHP \u00e9 t\u00e3o simples quanto o **Nginx**:\n\napt-get install php5-fpm\n\n> O Php FPM \u00e9 o interpretador utilizado para os c\u00f3digos PHP. [Mais sobre PHP FPM](http:\/\/php-fpm.org\/about\/)\n\nPra integrar o **Nginx** com o PHP temos que por a m\u00e3o na massa, \u00e9 necess\u00e1rio alterar um arquivo de configura\u00e7\u00e3o:\n\n\/etc\/nginx\/sites-available\/default\n\nPra configura\u00e7\u00e3o b\u00e1sica, \u00e9 preciso fazer duas pequenas altera\u00e7\u00f5es:\n\nNo come\u00e7o do arquivo, precisamos adicionar **index.php **entre **index **e **index.html**, ficando assim:\n\nindex index.php index.html index.htm\n\ne mais abaixo, basta \u201cdescomentar\u201d algumas linhas, onde come\u00e7a o **location\u00a0 ~* .php**  \n , ficando assim:\n\nlocation ~* .php$ { fastcgi_split_path_info ^(.+.php)(\/.+)$; # NOTE: You should have \"cgi.fix_pathinfo = 0;\" in php.ini # With php5-cgi alone: # fastcgi_pass 127.0.0.1:9000; # With php5-fpm: fastcgi_pass unix:\/var\/run\/php5-fpm.sock; fastcgi_index index.php; include fastcgi_params; }\n\nAgora que est\u00e1 tudo configurado, \u00e9 preciso reiniciar o **Nginx**:\n\n\/etc\/init.d\/nginx restart\n\nPra verificarmos se est\u00e1 tudo funcionando, criamos um arquivo na pasta publica do Nginx (\/usr\/share\/nginx\/html) chamado info.php, com o conte\u00fado abaixo:\n\n<?php phpinfo(); ?>\n\nAcessar por **http:\/\/localhost\/info.php** E o resultado, claro:\n\n<div class=\"wp-caption aligncenter\" id=\"attachment_232\" style=\"width: 310px\">[![phpinfo-nginx](http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/h_169,w_300\/v1454457574\/phpinfo-nginx_lk5sxg.png \"PHP info no Nginx\")](http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/v1454457574\/phpinfo-nginx_lk5sxg.png)PHP info no Nginx\n\n<\/div>Tudo funcionando, agora \u00e9 hora de instalar o MySQL, mesmo comando simples de sempre:\n\napt-get install mysql-server mysql-client php5-mysql\n\nPara verificar se o MySql est\u00e1 corretamente instalado basta acessar novamente **http:\/\/localhost\/info.php\u00a0**e procurar por MySql, o resultado deve ser igual o abaixo:\n\n<div class=\"wp-caption aligncenter\" id=\"attachment_234\" style=\"width: 310px\">[![phpinfor-mysql-nginx](http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/h_169,w_300\/v1454457573\/phpinfor-mysql-nginx_m0w6xb.png \"PHP info Nginx\")](http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/v1454457573\/phpinfor-mysql-nginx_m0w6xb.png)PHP info Nginx\n\n<\/div>Agora \u00e9 s\u00f3 se divertir, at\u00e9 mais!!\n\n\n# Bonus\n\n[Como usar o apt-get](http:\/\/www.infowester.com\/aptget1.php)\n\n[Sobre o Nginx](http:\/\/wiki.nginx.org\/Main)\n\n[CodeIgniter no Nginx](http:\/\/wiki.nginx.org\/Codeigniter)\n\n\n","html":"<h2>Hoje uma dica bem simples: como instalar o Nginx (Servidor WEB) + PHP e MySql no Ubuntu.<\/h2>\n<p>O <strong>Nginx<\/strong> (Pronuncia Engine-x) \u00e9 um concorrente do Apache para servir p\u00e1ginas web. Para servir p\u00e1ginas est\u00e1ticas, sem d\u00favidas \u00e9 muito melhor que o Apache e tem um ganho com p\u00e1ginas din\u00e2micas tamb\u00e9m (<a href=\"http:\/\/systemsarchitect.net\/apache2-vs-nginx-for-php-application\/\">Apache vs Nginx<\/a>). O que pude comprovar \u00e9 o uso de mem\u00f3ria, por exemplo, o <strong>Nginx<\/strong> usa bem menos e o tempo de reposta \u00e9 bem menor quando comparado ao Apache. Vamos l\u00e1.<\/p>\n<p><!--more--><\/p>\n<p>O primeiro passo \u00e9 Instalar o <strong>Nginx<\/strong>:<\/p>\n<pre class=\"lang:sh decode:true\">sudo apt-get install nginx<\/pre>\n<blockquote><p>A vers\u00e3o no reposit\u00f3rio oficial do Ubuntu \u00e9 um pouco desatualizada, mas ir\u00e1 funcionar muito bem pra esse tutorial<\/p><\/blockquote>\n<p>Depois de instalado, basta iniciar o servi\u00e7o:<\/p>\n<pre class=\"lang:sh decode:true\">\/etc\/init.d\/nginx start<\/pre>\n<p>A p\u00e1gina de boas vindas \u00e9 a seguinte:<\/p>\n<div id=\"attachment_231\" style=\"width: 310px\" class=\"wp-caption aligncenter\"><a href=\"http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/v1454457576\/nginx-imagen-inicial_krlgoc.png\"><img class=\"size-medium wp-image-231 \" title=\"Welcome to nginx\" alt=\"nginx-imagen-inicial\" src=\"http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/h_169,w_300\/v1454457576\/nginx-imagen-inicial_krlgoc.png\" width=\"300\" height=\"169\" \/><\/a><p class=\"wp-caption-text\">Welcome to nginx<\/p><\/div>\n<p style=\"text-align: left;\">Pra instalar o PHP \u00e9 t\u00e3o simples quanto o <strong>Nginx<\/strong>:<\/p>\n<pre class=\"lang:sh decode:true\">apt-get install php5-fpm<\/pre>\n<blockquote><p>O Php FPM \u00e9 o interpretador utilizado para os c\u00f3digos PHP. <a href=\"http:\/\/php-fpm.org\/about\/\">Mais sobre PHP FPM<\/a><\/p><\/blockquote>\n<p>Pra integrar o <strong>Nginx<\/strong> com o PHP temos que por a m\u00e3o na massa, \u00e9 necess\u00e1rio alterar um arquivo de configura\u00e7\u00e3o:<\/p>\n<pre class=\"lang:sh decode:true\">\/etc\/nginx\/sites-available\/default<\/pre>\n<p>Pra configura\u00e7\u00e3o b\u00e1sica, \u00e9 preciso fazer duas pequenas altera\u00e7\u00f5es:<\/p>\n<p>No come\u00e7o do arquivo, precisamos adicionar <strong>index.php <\/strong>entre <strong>index <\/strong>e <strong>index.html<\/strong>, ficando assim:<\/p>\n<pre class=\"lang:sh decode:true\">index index.php index.html index.htm<\/pre>\n<p>e mais abaixo, basta &#8220;descomentar&#8221; algumas linhas, onde come\u00e7a o <strong>location\u00a0 ~* .php<\/strong><br \/>\n, ficando assim:<\/p>\n<pre class=\"lang:sh decode:true\">location ~* .php$ {\n                fastcgi_split_path_info ^(.+.php)(\/.+)$;\n                # NOTE: You should have \"cgi.fix_pathinfo = 0;\" in php.ini\n\n                # With php5-cgi alone:\n        #       fastcgi_pass 127.0.0.1:9000;\n                # With php5-fpm:\n                fastcgi_pass unix:\/var\/run\/php5-fpm.sock;\n                fastcgi_index index.php;\n                include fastcgi_params;\n        }<\/pre>\n<p>Agora que est\u00e1 tudo configurado, \u00e9 preciso reiniciar o <strong>Nginx<\/strong>:<\/p>\n<pre class=\"lang:sh decode:true\">\/etc\/init.d\/nginx restart<\/pre>\n<p>Pra verificarmos se est\u00e1 tudo funcionando, criamos um arquivo na pasta publica do Nginx (\/usr\/share\/nginx\/html) chamado info.php, com o conte\u00fado abaixo:<\/p>\n<pre class=\"lang:php decode:true\">&lt;?php\n        phpinfo();\n?&gt;<\/pre>\n<p>Acessar por <strong>http:\/\/localhost\/info.php<\/strong> E o resultado, claro:<\/p>\n<div id=\"attachment_232\" style=\"width: 310px\" class=\"wp-caption aligncenter\"><a href=\"http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/v1454457574\/phpinfo-nginx_lk5sxg.png\"><img class=\"size-medium wp-image-232 \" title=\"PHP info no Nginx\" alt=\"phpinfo-nginx\" src=\"http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/h_169,w_300\/v1454457574\/phpinfo-nginx_lk5sxg.png\" width=\"300\" height=\"168\" \/><\/a><p class=\"wp-caption-text\">PHP info no Nginx<\/p><\/div>\n<p style=\"text-align: left;\">Tudo funcionando, agora \u00e9 hora de instalar o MySQL, mesmo comando simples de sempre:<\/p>\n<pre class=\"lang:sh decode:true\">apt-get install mysql-server mysql-client php5-mysql<\/pre>\n<p>Para verificar se o MySql est\u00e1 corretamente instalado basta acessar novamente <strong>http:\/\/localhost\/info.php\u00a0<\/strong>e procurar por MySql, o resultado deve ser igual o abaixo:<\/p>\n<div id=\"attachment_234\" style=\"width: 310px\" class=\"wp-caption aligncenter\"><a href=\"http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/v1454457573\/phpinfor-mysql-nginx_m0w6xb.png\"><img class=\"size-medium wp-image-234 \" title=\"PHP info Nginx\" alt=\"phpinfor-mysql-nginx\" src=\"http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/h_169,w_300\/v1454457573\/phpinfor-mysql-nginx_m0w6xb.png\" width=\"300\" height=\"168\" \/><\/a><p class=\"wp-caption-text\">PHP info Nginx<\/p><\/div>\n<p style=\"text-align: left;\">Agora \u00e9 s\u00f3 se divertir, at\u00e9 mais!!<\/p>\n<h1 style=\"text-align: left;\">Bonus<\/h1>\n<p><a href=\"http:\/\/www.infowester.com\/aptget1.php\">Como usar o apt-get<\/a><\/p>\n<p><a href=\"http:\/\/wiki.nginx.org\/Main\">Sobre o Nginx<\/a><\/p>\n<p><a href=\"http:\/\/wiki.nginx.org\/Codeigniter\">CodeIgniter no Nginx<\/a><\/p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Tue, 22 Oct 2013 10:48:50 +0000","created_by":1,"updated_at":"Tue, 02 Feb 2016 21:59:36 +0000","updated_by":1,"published_at":"Tue, 22 Oct 2013 10:48:50 +0000","published_by":1},{"id":243,"title":"Fazendo o CakePHP funcionar milagrosamente em um subdiret\u00f3rio do NGINX","slug":"fazendo-o-cakephp-funcionar-milagrosamente-em-subdiretorio-do-nginx","markdown":"\nOl\u00e1s, uma dica r\u00e1pida pra fazer o CakePHP rodar satisfatoriamente no NGINX.\n\nCaso queira saber como instalar o cake, \u00e9 soh [clicar aqui](https:\/\/cezarcruz.com.br\/blog\/2013\/10\/como-instalar-o-nginx-php-mysql-no-ubuntu\/ \"Como instalar o Nginx + PHP + MySql no Ubuntu\"). \ud83d\ude09\n\nSem mais delongas, basta abrir o arquivo de configura\u00e7\u00e3o do NGINX e adicionar as seguintes linhas, depois das configura\u00e7\u00f5es padr\u00f5es para funcionamento com o PHP:\n\n location \/cake { rewrite ^\/cake$ \/cake\/ permanent; rewrite ^\/cake\/(.+)$ \/$1 break; root \/usr\/share\/nginx\/html\/cake\/app\/webroot; try_files $uri \/$uri\/ @cakephp; } location @cakephp { set $q $request_uri; if ($request_uri ~ \"^\/cake(.+)$\") { set $q $1; } fastcgi_param SCRIPT_FILENAME \/usr\/share\/nginx\/html\/cake\/app\/webroot\/index.php; fastcgi_param QUERY_STRING url=$q; }\n\nLembrando que essa configura\u00e7\u00e3o \u00e9 pra quando estiver usando um subdiret\u00f3rio, no caso, \/cake, e os par\u00e2metros\u00a0 fastcgi_param SCRIPT_FILENAME e root devem apontar para o diret\u00f3rio \u201cfisico\u201d do CakePHP..\n\n\u00c9 isso ai, espere que ajude.\n\nAt\u00e9 mais!\n\n\n","html":"<p>Ol\u00e1s, uma dica r\u00e1pida pra fazer o CakePHP rodar satisfatoriamente no NGINX.<\/p>\n<p>Caso queira saber como instalar o cake, \u00e9 soh <a title=\"Como instalar o Nginx + PHP + MySql no Ubuntu\" href=\"https:\/\/cezarcruz.com.br\/blog\/2013\/10\/como-instalar-o-nginx-php-mysql-no-ubuntu\/\" target=\"_blank\">clicar aqui<\/a>. \ud83d\ude09<\/p>\n<p>Sem mais delongas, basta abrir o arquivo de configura\u00e7\u00e3o do NGINX e adicionar as seguintes linhas, depois das configura\u00e7\u00f5es padr\u00f5es para funcionamento com o PHP:<\/p>\n<pre class=\"lang:sh decode:true\">       location \/cake {\n               rewrite     ^\/cake$ \/cake\/ permanent;\n               rewrite     ^\/cake\/(.+)$ \/$1 break;\n               root        \/usr\/share\/nginx\/html\/cake\/app\/webroot;\n               try_files   $uri \/$uri\/ @cakephp;\n       }\n\n       location @cakephp {\n               set $q $request_uri;\n               if ($request_uri ~ \"^\/cake(.+)$\") {\n                       set $q $1;\n               }\n               fastcgi_param SCRIPT_FILENAME       \/usr\/share\/nginx\/html\/cake\/app\/webroot\/index.php;\n               fastcgi_param QUERY_STRING          url=$q;\n       }<\/pre>\n<p>Lembrando que essa configura\u00e7\u00e3o \u00e9 pra quando estiver usando um subdiret\u00f3rio, no caso, \/cake, e os par\u00e2metros\u00a0 fastcgi_param SCRIPT_FILENAME e root devem apontar para o diret\u00f3rio &#8220;fisico&#8221; do CakePHP..<\/p>\n<p>\u00c9 isso ai, espere que ajude.<\/p>\n<p>At\u00e9 mais!<\/p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Fri, 01 Nov 2013 11:11:15 +0000","created_by":1,"updated_at":"Fri, 01 Nov 2013 11:11:15 +0000","updated_by":1,"published_at":"Fri, 01 Nov 2013 11:11:15 +0000","published_by":1},{"id":262,"title":"Como utilizar o Jekyll pra criar um blog com p\u00e1ginas est\u00e1ticas. Jekyll parte 1","slug":"como-utilizar-o-jekyll-pra-criar-um-blog-com-paginas-estaticas-jekyll-parte-1","markdown":"\n**Jekyll**, um software para gerar p\u00e1ginas est\u00e1ticas usado principalmente pra blogs. Esse tutorial \u00e9 a primeira parte. O **Jekyll** \u00e9 um software gerador de p\u00e1ginas est\u00e1ticas. Usando arquivos de texto com [Markdown](http:\/\/daringfireball.net\/projects\/markdown\/syntax), ele cria um site completo, est\u00e1tico, pronto pra ser publicado. A vantagem de gerar um blog, ou um site em html est\u00e1tico, \u00e9 que n\u00e3o precisamos nos preocupar com muitas camadas de seguran\u00e7a, considerando que eliminamos o interpretador PHP, no caso do WordPress, eliminamos o pr\u00f3prio WordPress, que apesar de ser uma \u00f3tima plataforma de blog, pode conter bugs, eliminamos tamb\u00e9m a necessidade de um servidor de banco de dados (falow MySql \ud83d\ude09 ), e claro,\u00a0 o desempenho, como s\u00f3 \u00e9 exibido p\u00e1ginas est\u00e1ticas, s\u00e3o menos requisi\u00e7\u00f5es e nada pra processar e pra hospedar apenas p\u00e1ginas est\u00e1ticas \u00e9 muito mais barato e at\u00e9 \u201cdi gr\u00e1tis\u201d hehehehe.\n\n> Esse tutorial \u00e9 baseado no Ubuntu, o Windows n\u00e3o foi muito amig\u00e1vel pra instalar o Jekyll. =\/ Deixando bem claro que o WordPress \u00e9 uma \u00f3tima plataforma, supre qualquer necessidades para um blog e at\u00e9 algo mais avan\u00e7ado. O **Jekyll** n\u00e3o \u00e9 muito simples de se trabalhar, por isso deve ser utilizado, principalmente por desenvolvedores, e nesse caso, \u00e9 uma \u00f3tima oportunidade de aprender novas tecnologias e ir afiando os conhecimentos em otimiza\u00e7\u00e3o n\u00e3o somente de conte\u00fado como tamb\u00e9m dos c\u00f3digos do site.\n\nVamos come\u00e7ar. O primeiro passo \u00e9 instalar o Ruby na maquina, no Ubuntu \u00e9 muuuuuuuuuito simples:\n\nsudo apt-get install ruby1.9.1 ruby1.9.1-dev\n\n> No comando eu utilizei a vers\u00e3o 1.9.1, apesar de j\u00e1 existir a vers\u00e3o 2.1 do Ruby, quando fiz os primeiros testes, as coisas n\u00e3o foram lisas, como usando a 1.9.1 vai atender pro que precisamos, ent\u00e3o \u00e9 ela que iremos utilizar aqui. =D\n\nIsso j\u00e1 \u00e9 o suficiente pra instalar o Ruby no ubuntu. Pra verificar se instalou certo, mais por desencargo mesmo, basta digitar o comando abaixo:\n\nruby --version\n\nE o resultado \u00e9 a vers\u00e3o do Ruby instalado\u2026 \ud83d\ude09 Agora que temos o Ruby funcionando, vamos instalar o **Jekyll**, o comando, claro, \u00e9 bem simples:\n\ngem install jekyll\n\n> \u00a0O gem \u00e9 o comando do Ruby similar ao comando apt-get do Linux, ele serve pra instalar pacotes.\n\nAgora j\u00e1 estamos quase prontos pra come\u00e7ar a\u00a0 criar p\u00e1ginas est\u00e1ticas. O comando que devemos utilizar agora \u00e9:\n\njekyll new blog\n\nEle ir\u00e1 criar a estrutura padr\u00e3o de diret\u00f3rios do **Jekyll**, ela deve ficar assim:\n\n[![arvore_de_diretorio_jekyll](http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/h_193,w_300\/v1454457572\/arvore_de_diretorio_jekyll_kqae0n.png)](http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/v1454457572\/arvore_de_diretorio_jekyll_kqae0n.png)\n\n\u00a0\n\n- Os arquivos** _config.yml** \u00e9 onde ficam as configura\u00e7\u00f5es do blog, como o nome do blog, por exemplo;\n- A pasta **css** \u00e9 onde fica os arquivos de estilo;\n- A pasta **_layouts** \u00e9 onde fica o layout padr\u00e3o de cada p\u00e1gina, mais pra frente, veremos como ele \u00e9 utilizado;\n- A pasta **_posts** \u00e9 onde fica os posts do nosso blog;\n\nPor enquanto esses s\u00e3o os diret\u00f3rios essenciais para come\u00e7armos a conhecer melhor nosso blog. Pra rodarmos ele localmente e ver como ficou, devemos, de dentro da pasta blog, rodar o comando abaixo:\n\njekyll serve\n\nEle ir\u00e1 disponibilizar um modo \u201cpreview\u201d do blog no endere\u00e7o http:\/\/localhost:4000, assim podemos ver como ir\u00e1 ficar nosso blog com o layout padr\u00e3o do **jekyll**. Al\u00e9m disso, \u00e9 claro, ele ir\u00e1 gerar uma build, as p\u00e1ginas html, dentro da pasta _site. O resultado final \u00e9 a p\u00e1gina abaixo: [![pagina_inicial_utilizando_o_layout_padrao_do_jekyll](http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/h_179,w_300\/v1454457571\/pagina_inicial_utilizando_o_layout_padrao_do_jekyll_kqxcae.png)](http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/v1454457571\/pagina_inicial_utilizando_o_layout_padrao_do_jekyll_kqxcae.png) Nos pr\u00f3ximos tutorias irei explicar como criar um post, personalizar o blog, otimizar o SEO e o que for surgindo. Links \u00fateis:\n\n- [Site oficial do Jekyll](http:\/\/jekyllrb.com\/) (A documenta\u00e7\u00e3o \u00e9 bem completa);\n- [Site oficila do Ruby](https:\/\/www.ruby-lang.org\/pt\/);\n\n\n","html":"<p><strong>Jekyll<\/strong>, um software para gerar p\u00e1ginas est\u00e1ticas usado principalmente pra blogs. Esse tutorial \u00e9 a primeira parte. O <strong>Jekyll<\/strong> \u00e9 um software gerador de p\u00e1ginas est\u00e1ticas. Usando arquivos de texto com <a href=\"http:\/\/daringfireball.net\/projects\/markdown\/syntax\">Markdown<\/a>, ele cria um site completo, est\u00e1tico, pronto pra ser publicado. A vantagem de gerar um blog, ou um site em html est\u00e1tico, \u00e9 que n\u00e3o precisamos nos preocupar com muitas camadas de seguran\u00e7a, considerando que eliminamos o interpretador PHP, no caso do WordPress, eliminamos o pr\u00f3prio WordPress, que apesar de ser uma \u00f3tima plataforma de blog, pode conter bugs, eliminamos tamb\u00e9m a necessidade de um servidor de banco de dados (falow MySql \ud83d\ude09 ), e claro,\u00a0 o desempenho, como s\u00f3 \u00e9 exibido p\u00e1ginas est\u00e1ticas, s\u00e3o menos requisi\u00e7\u00f5es e nada pra processar e pra hospedar apenas p\u00e1ginas est\u00e1ticas \u00e9 muito mais barato e at\u00e9 &#8220;di gr\u00e1tis&#8221; hehehehe.<\/p>\n<p><!--more--><\/p>\n<blockquote><p>Esse tutorial \u00e9 baseado no Ubuntu, o Windows n\u00e3o foi muito amig\u00e1vel pra instalar o Jekyll. =\/ Deixando bem claro que o WordPress \u00e9 uma \u00f3tima plataforma, supre qualquer necessidades para um blog e at\u00e9 algo mais avan\u00e7ado. O <strong>Jekyll<\/strong> n\u00e3o \u00e9 muito simples de se trabalhar, por isso deve ser utilizado, principalmente por desenvolvedores, e nesse caso, \u00e9 uma \u00f3tima oportunidade de aprender novas tecnologias e ir afiando os conhecimentos em otimiza\u00e7\u00e3o n\u00e3o somente de conte\u00fado como tamb\u00e9m dos c\u00f3digos do site.<\/p><\/blockquote>\n<p>Vamos come\u00e7ar. O primeiro passo \u00e9 instalar o Ruby na maquina, no Ubuntu \u00e9 muuuuuuuuuito simples:<\/p>\n<pre class=\"lang:sh decode:true\">sudo apt-get install ruby1.9.1 ruby1.9.1-dev<\/pre>\n<blockquote><p>No comando eu utilizei a vers\u00e3o 1.9.1, apesar de j\u00e1 existir a vers\u00e3o 2.1 do Ruby, quando fiz os primeiros testes, as coisas n\u00e3o foram lisas, como usando a 1.9.1 vai atender pro que precisamos, ent\u00e3o \u00e9 ela que iremos utilizar aqui. =D<\/p><\/blockquote>\n<p>Isso j\u00e1 \u00e9 o suficiente pra instalar o Ruby no ubuntu. Pra verificar se instalou certo, mais por desencargo mesmo, basta digitar o comando abaixo:<\/p>\n<pre class=\"lang:sh decode:true\">ruby --version<\/pre>\n<p>E o resultado \u00e9 a vers\u00e3o do Ruby instalado&#8230; \ud83d\ude09 Agora que temos o Ruby funcionando, vamos instalar o <strong>Jekyll<\/strong>, o comando, claro, \u00e9 bem simples:<\/p>\n<pre class=\"lang:ruby decode:true\">gem install jekyll<\/pre>\n<blockquote><p>\u00a0O gem \u00e9 o comando do Ruby similar ao comando apt-get do Linux, ele serve pra instalar pacotes.<\/p><\/blockquote>\n<p>Agora j\u00e1 estamos quase prontos pra come\u00e7ar a\u00a0 criar p\u00e1ginas est\u00e1ticas. O comando que devemos utilizar agora \u00e9:<\/p>\n<pre class=\"lang:sh decode:true\">jekyll new blog<\/pre>\n<p>Ele ir\u00e1 criar a estrutura padr\u00e3o de diret\u00f3rios do <strong>Jekyll<\/strong>, ela deve ficar assim:<\/p>\n<p><a href=\"http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/v1454457572\/arvore_de_diretorio_jekyll_kqae0n.png\"><img class=\"size-medium wp-image-264 aligncenter\" alt=\"arvore_de_diretorio_jekyll\" src=\"http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/h_193,w_300\/v1454457572\/arvore_de_diretorio_jekyll_kqae0n.png\" width=\"300\" height=\"192\" \/><\/a><\/p>\n<p>&nbsp;<\/p>\n<ul>\n<li>Os arquivos<strong> _config.yml<\/strong> \u00e9 onde ficam as configura\u00e7\u00f5es do blog, como o nome do blog, por exemplo;<\/li>\n<li>A pasta <strong>css<\/strong> \u00e9 onde fica os arquivos de estilo;<\/li>\n<li>A pasta <strong>_layouts<\/strong> \u00e9 onde fica o layout padr\u00e3o de cada p\u00e1gina, mais pra frente, veremos como ele \u00e9 utilizado;<\/li>\n<li>A pasta <strong>_posts<\/strong> \u00e9 onde fica os posts do nosso blog;<\/li>\n<\/ul>\n<p>Por enquanto esses s\u00e3o os diret\u00f3rios essenciais para come\u00e7armos a conhecer melhor nosso blog. Pra rodarmos ele localmente e ver como ficou, devemos, de dentro da pasta blog, rodar o comando abaixo:<\/p>\n<pre class=\"lang:default decode:true\">jekyll serve<\/pre>\n<p>Ele ir\u00e1 disponibilizar um modo &#8220;preview&#8221; do blog no endere\u00e7o http:\/\/localhost:4000, assim podemos ver como ir\u00e1 ficar nosso blog com o layout padr\u00e3o do <strong>jekyll<\/strong>. Al\u00e9m disso, \u00e9 claro, ele ir\u00e1 gerar uma build, as p\u00e1ginas html, dentro da pasta _site. O resultado final \u00e9 a p\u00e1gina abaixo: <a href=\"http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/v1454457571\/pagina_inicial_utilizando_o_layout_padrao_do_jekyll_kqxcae.png\"><img class=\"size-medium wp-image-265 aligncenter\" alt=\"pagina_inicial_utilizando_o_layout_padrao_do_jekyll\" src=\"http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/h_179,w_300\/v1454457571\/pagina_inicial_utilizando_o_layout_padrao_do_jekyll_kqxcae.png\" width=\"300\" height=\"178\" \/><\/a> Nos pr\u00f3ximos tutorias irei explicar como criar um post, personalizar o blog, otimizar o SEO e o que for surgindo. Links \u00fateis:<\/p>\n<ul>\n<li><a href=\"http:\/\/jekyllrb.com\/\">Site oficial do Jekyll<\/a> (A documenta\u00e7\u00e3o \u00e9 bem completa);<\/li>\n<li><a href=\"https:\/\/www.ruby-lang.org\/pt\/\">Site oficila do Ruby<\/a>;<\/li>\n<\/ul>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Wed, 15 Jan 2014 22:40:15 +0000","created_by":1,"updated_at":"Tue, 02 Feb 2016 21:59:32 +0000","updated_by":1,"published_at":"Wed, 15 Jan 2014 22:40:15 +0000","published_by":1},{"id":273,"title":"Como escrever textos usando Markdown","slug":"como-escrever-textos-usando-markdown","markdown":"\nOl\u00e1s, nesse tutorial, vou mostrar como utilizarmos o **Markdown** para escrevermos textos formatados em Html. Esse tutorial ser\u00e1, basicamente, um spin-off da saga Jekyll.\n\n**Markdown** \u00e9 uma ferramenta de convers\u00e3o texto pra HTML para escrever textos para web. **Markdown** permite escrever usando um texto f\u00e1cil de ler e escrever e depois converte em uma estrutura valida de XHTML (ou HTML). Pra uma defini\u00e7\u00e3o melhor, veja o [site do projeto](http:\/\/daringfireball.net\/projects\/markdown\/).\n\nUm local onde o **Markdown** \u00e9 bastante utilizado \u00e9 nos arquivos .md utilizado no [Git Hub](https:\/\/github.com\/).\n\nMas vamos l\u00e1, pra escrevermos texto come\u00e7amos sempre com o titulo, hehehe. Pra gerarmos\u00a0 um titulo em **Markdown** \u00e9 tranquilo, veja:\n\n007 - Um novo dia pra morrer ============================\n\nColocamos a partir de tr\u00eas s\u00edmbolos de **=\u00a0**(igual)\u00a0 abaixo do texto, e o HTML gerado \u00e9:\n\n<h1>007 - Um novo dia pra morrer<\/h1>\n\nBem sussa, pra gerar um subt\u00edtulo, \u00e9 t\u00e3o simples quanto:\n\nO Daniel Craig \u00e9 o James Bond mais zica ---------------------------------------\n\nColocamos a partir de tr\u00eas tra\u00e7os abaixo do texto, e o HTML gerado \u00e9:\n\n<h2>O Daniel Craig \u00e9 o James Bond mais zica<\/h2>\n\nPra escrever t\u00edtulos, podemos utilizar outras formas tamb\u00e9m:\n\n#Titulo 1 ##Subt\u00edtulo ###SubSubt\u00edtulo .....\n\nE o resultado \u00e9:\n\n<h1>Titulo 1<\/h1> <h2>Subt\u00edtulo<\/h2> <h3>SubSubt\u00edtulo<\/h3>\n\nPara escrevermos um texto, tamb\u00e9m \u00e9 bem simples, o que devemos atentar \u00e9 que pra come\u00e7armos um novo paragrafo, devemos deixar uma linha em branco no texto **Markdown**:\n\nCurabitur consequat commodo magna. Nulla vel eros nec dui malesuada gravida. Donec pellentesque, quam et varius consectetur, risus orci dapibus ante, quis euismod diam metus sed erat. Mauris aliquet pretium ante, a rutrum libero facilisis a. Nulla facilisi. Praesent semper ornare felis, non pharetra elit vestibulum pulvinar. Phasellus quis lacus ultrices, posuere urna eu, pellentesque metus. Donec vulputate velit sit amet augue mattis rutrum. Phasellus ultrices tempor elit vitae vulputate. Praesent quis ullamcorper justo. Cras euismod nisl nibh, eu pulvinar lectus condimentum ut.\n\nO HTML gerado segue abaixo:\n\n<p>Curabitur consequat commodo magna. Nulla vel eros nec dui malesuada gravida. Donec pellentesque, quam et varius consectetur, risus orci dapibus ante, quis euismod diam metus sed erat. <\/p> <p>Mauris aliquet pretium ante, a rutrum libero facilisis a. Nulla facilisi. Praesent semper ornare felis, non pharetra elit vestibulum pulvinar. <\/p> <p>Phasellus quis lacus ultrices, posuere urna eu, pellentesque metus. Donec vulputate velit sit amet augue mattis rutrum. Phasellus ultrices tempor elit vitae vulputate. Praesent quis ullamcorper justo. Cras euismod nisl nibh, eu pulvinar lectus condimentum ut.<\/p>\n\nNo meio do texto, podemos colocar palavras em it\u00e1lico ou negrito, por exemplo:\n\n_consequat_ **consequat**\n\nResultado:\n\n<em>consequat<\/em> <strong>consequat<\/strong>\n\nPra adicionarmos uma cita\u00e7\u00e3o:\n\n> Ser ou n\u00e3o ser, eis a quest\u00e3o.\n\nO HTML gerado \u00e9:\n\n<blockquote> <p>Ser ou n\u00e3o ser, eis a quest\u00e3o<\/p> <\/blockquote>\n\nEm **Markdown**, sempre que vc come\u00e7ar a linha com > (maior) ele ser\u00e1 uma cita\u00e7\u00e3o e se voc\u00ea continuar em varias linhas seguidas, ser\u00e1 apenas uma \u00fanica cita\u00e7\u00e3o com e um paragrafo, mas caso voc\u00ea coloque um linha em branco com sinal de > (maior) entre duas linhas com sinal de > (maior)\u00a0 mas que tenha algum conte\u00fado, voc\u00ea ir\u00e1 criar um novo paragrafo, porem, est\u00e1 dentro de uma \u00fanica cita\u00e7\u00e3o.\n\nPra criarmos uma lista n\u00e3o ordenada, temos um segredinho tamb\u00e9m, temos que pular uma linha depois do ultimo paragrafo, veja:\n\nLista de compras * alface * tomate * cebola * couve\n\nO resultado:\n\n<p>Lista de compras<\/p> <ul> <li>alface<\/li> <li>tomate<\/li> <li>cebola<\/li> <li>couve<\/li> <\/ul>\n\nAl\u00e9m do * (asterisco), podemos utilizar o sinal de + (soma) ou \u2013 (subtra\u00e7\u00e3o) pra formarmos uma lista.\n\nPra termos uma lista ordenada, segue a mesma ideia da lista n\u00e3o ordenada:\n\nLista de compras 1. alface 2. tomate 3. cebola 4. couve\n\nE resultado:\n\n<p>Lista de compras<\/p> <ol> <li>alface<\/li> <li>tomate<\/li> <li>cebola<\/li> <li>couve<\/li> <\/ol>\n\nPra criamos uma lista aninhada, basta uma colocarmos o subitem com um espa\u00e7o na frente:\n\nLista de compras * alface * tomate * cebola * couve\n\nO resultado:\n\n<p>Lista de compras<\/p> <ul> <li>alface <ul> <li>tomate<\/li> <\/ul> <\/li> <li>cebola <ul> <li>couve<\/li> <li>espinafre<\/li> <\/ul> <\/li> <\/ul>\n\nA ideia \u00e9 a mesma para a lista ordenada.\n\nPra criamos um link com uma p\u00e1gina da web:\n\n`Esse o [link para o meu blog](https:\/\/cezarcruz.com.br\/blog\/ \"Meu blog\")`\n\nO resultado vem logo abaixo:\n\n<p>Esse o <a href=\"https:\/\/cezarcruz.com.br\/blog\/\" title=\"Meu blog\">link para o meu blog<\/a><\/p>\n\nRepare que o que est\u00e1 dentro do colchetes \u00e9 o que ir\u00e1 virar um link, o endere\u00e7o vem dentro de par\u00eanteses e utilizar o title dentro do par\u00eanteses \u00e9 opcional, caso n\u00e3o queira, basta deixar somente o endere\u00e7o.\n\nAinda com links, podemos usar ele de uma forma um pouco mais organizada, utilizando referencias:\n\nO site do [G1][1] \u00e9 igual ao do [R7][2] [1]: http:\/\/g1.com \"Site do G1\" [2]: http:\/\/r7.com \"Site do R7\"\n\nO Resultado segue como de costume:\n\n<p>O site do <a href=\"g1.com\" title=\"Site do G1\">G1<\/a> \u00e9 igual ao do <a href=\"r7.com\" title=\"Site do R7\">R7<\/a><\/p>\n\nPra utilizarmos referencias em links, temos que atentar aos fatos:\n\n- O que estiver entre os primeiros colchetes \u00e9 o que ir\u00e1 se tornar \u201cclic\u00e1vel\u201d;\n- O segundo colchetes \u00e9 a referencia, nela, podemos utilizar uma letra ou palavra e elas n\u00e3o s\u00e3o *case sensitive*;\n- No local onde deixamos organizada as referencias, temos de colocar : (dois pontos) depois dos colchetes pra que funcione corretamente;\n- N\u00e3o esquecer de por **http:\/\/**;\n\nPra utilizarmos imagens, o c\u00f3digo \u00e9 semelhante ao de links:\n\n![O alt](https:\/\/www.google.com.br\/images\/srpr\/logo11w.png \"Logo do google\")\n\nE o lindo resultado:\n\n<p>Olha essa imagem: <img src=\"https:\/\/www.google.com.br\/images\/srpr\/logo11w.png\" alt=\"O alt\" title=\"Logo do google\"><\/p>\n\nA diferen\u00e7a b\u00e1sica entre links e imagens \u00e9 a ! (exclama\u00e7\u00e3o) antes do c\u00f3digo.\n\nBom por enquanto \u00e9 isso ai, s\u00e3o bem b\u00e1sicas, mas \u00e9 o suficiente pra nos prepararmos pros pr\u00f3ximos tutoriais de Jekyll.\n\nAbra\u00e7os.\n\nLinks \u00fateis\n\n- [Markdown editor online](http:\/\/markable.in\/editor\/)\n- [Site oficial do Markdown](http:\/\/daringfireball.net\/)\n- [Jekyll beeeeem b\u00e1sico](https:\/\/cezarcruz.com.br\/blog\/2014\/01\/como-utilizar-o-jekyll-pra-criar-um-blog-com-paginas-estaticas-jekyll-parte-1\/ \"Como utilizar o Jekyll pra criar um blog com p\u00e1ginas est\u00e1ticas. Jekyll parte 1\")\n\n\n","html":"<p>Ol\u00e1s, nesse tutorial, vou mostrar como utilizarmos o <strong>Markdown<\/strong> para escrevermos textos formatados em Html. Esse tutorial ser\u00e1, basicamente, um spin-off da saga Jekyll.<\/p>\n<p><strong>Markdown<\/strong> \u00e9 uma ferramenta de convers\u00e3o texto pra HTML para escrever textos para web. <strong>Markdown<\/strong> permite escrever usando um texto f\u00e1cil de ler e escrever e depois converte em uma estrutura valida de XHTML (ou HTML). Pra uma defini\u00e7\u00e3o melhor, veja o <a href=\"http:\/\/daringfireball.net\/projects\/markdown\/\">site do projeto<\/a>.<\/p>\n<p><!--more--><\/p>\n<p>Um local onde o <strong>Markdown<\/strong> \u00e9 bastante utilizado \u00e9 nos arquivos .md utilizado no <a href=\"https:\/\/github.com\/\">Git Hub<\/a>.<\/p>\n<p>Mas vamos l\u00e1, pra escrevermos texto come\u00e7amos sempre com o titulo, hehehe. Pra gerarmos\u00a0 um titulo em <strong>Markdown<\/strong> \u00e9 tranquilo, veja:<\/p>\n<pre class=\"lang:yaml decode:true\">007 - Um novo dia pra morrer\n============================<\/pre>\n<p>Colocamos a partir de tr\u00eas s\u00edmbolos de <strong>=\u00a0<\/strong>(igual)\u00a0 abaixo do texto, e o HTML gerado \u00e9:<\/p>\n<pre class=\"lang:xhtml decode:true\">&lt;h1&gt;007 - Um novo dia pra morrer&lt;\/h1&gt;<\/pre>\n<p>Bem sussa, pra gerar um subt\u00edtulo, \u00e9 t\u00e3o simples quanto:<\/p>\n<pre class=\"lang:yaml decode:true\">O Daniel Craig \u00e9 o James Bond mais zica\n---------------------------------------<\/pre>\n<p>Colocamos a partir de tr\u00eas tra\u00e7os abaixo do texto, e o HTML gerado \u00e9:<\/p>\n<pre class=\"lang:xhtml decode:true\">&lt;h2&gt;O Daniel Craig \u00e9 o James Bond mais zica&lt;\/h2&gt;<\/pre>\n<p>Pra escrever t\u00edtulos, podemos utilizar outras formas tamb\u00e9m:<\/p>\n<pre class=\"lang:default decode:true\">#Titulo 1\n##Subt\u00edtulo\n###SubSubt\u00edtulo\n.....<\/pre>\n<p>E o resultado \u00e9:<\/p>\n<pre class=\"lang:xhtml decode:true\">&lt;h1&gt;Titulo 1&lt;\/h1&gt;\n&lt;h2&gt;Subt\u00edtulo&lt;\/h2&gt;\n&lt;h3&gt;SubSubt\u00edtulo&lt;\/h3&gt;<\/pre>\n<p>Para escrevermos um texto, tamb\u00e9m \u00e9 bem simples, o que devemos atentar \u00e9 que pra come\u00e7armos um novo paragrafo, devemos deixar uma linha em branco no texto <strong>Markdown<\/strong>:<\/p>\n<pre class=\"lang:default decode:true\">Curabitur consequat commodo magna. Nulla vel eros nec dui malesuada gravida. Donec pellentesque, quam et varius consectetur, risus orci dapibus ante, quis euismod diam metus sed erat. \n\nMauris aliquet pretium ante, a rutrum libero facilisis a. Nulla facilisi. Praesent semper ornare felis, non pharetra elit vestibulum pulvinar. \n\nPhasellus quis lacus ultrices, posuere urna eu, pellentesque metus. Donec vulputate velit sit amet augue mattis rutrum. Phasellus ultrices tempor elit vitae vulputate. Praesent quis ullamcorper justo. Cras euismod nisl nibh, eu pulvinar lectus condimentum ut.<\/pre>\n<p>O HTML gerado segue abaixo:<\/p>\n<pre class=\"lang:xhtml decode:true\">&lt;p&gt;Curabitur consequat commodo magna. Nulla vel eros nec dui malesuada gravida. Donec pellentesque, quam et varius consectetur, risus orci dapibus ante, quis euismod diam metus sed erat. &lt;\/p&gt;\n\n&lt;p&gt;Mauris aliquet pretium ante, a rutrum libero facilisis a. Nulla facilisi. Praesent semper ornare felis, non pharetra elit vestibulum pulvinar. &lt;\/p&gt;\n\n&lt;p&gt;Phasellus quis lacus ultrices, posuere urna eu, pellentesque metus. Donec vulputate velit sit amet augue mattis rutrum. Phasellus ultrices tempor elit vitae vulputate. Praesent quis ullamcorper justo. Cras euismod nisl nibh, eu pulvinar lectus condimentum ut.&lt;\/p&gt;<\/pre>\n<p>No meio do texto, podemos colocar palavras em it\u00e1lico ou negrito, por exemplo:<\/p>\n<pre class=\"lang:default decode:true\">_consequat_\n**consequat**<\/pre>\n<p>Resultado:<\/p>\n<pre class=\"lang:default decode:true\">&lt;em&gt;consequat&lt;\/em&gt;\n&lt;strong&gt;consequat&lt;\/strong&gt;<\/pre>\n<p>Pra adicionarmos uma cita\u00e7\u00e3o:<\/p>\n<pre class=\"lang:default decode:true\">&gt; Ser ou n\u00e3o ser, eis a quest\u00e3o.<\/pre>\n<p>O HTML gerado \u00e9:<\/p>\n<pre class=\"lang:default decode:true\">&lt;blockquote&gt;\n&lt;p&gt;Ser ou n\u00e3o ser, eis a quest\u00e3o&lt;\/p&gt;\n&lt;\/blockquote&gt;<\/pre>\n<p>Em <strong>Markdown<\/strong>, sempre que vc come\u00e7ar a linha com &gt; (maior) ele ser\u00e1 uma cita\u00e7\u00e3o e se voc\u00ea continuar em varias linhas seguidas, ser\u00e1 apenas uma \u00fanica cita\u00e7\u00e3o com e um paragrafo, mas caso voc\u00ea coloque um linha em branco com sinal de &gt; (maior) entre duas linhas com sinal de &gt; (maior)\u00a0 mas que tenha algum conte\u00fado, voc\u00ea ir\u00e1 criar um novo paragrafo, porem, est\u00e1 dentro de uma \u00fanica cita\u00e7\u00e3o.<\/p>\n<p>Pra criarmos uma lista n\u00e3o ordenada, temos um segredinho tamb\u00e9m, temos que pular uma linha depois do ultimo paragrafo, veja:<\/p>\n<pre class=\"lang:default decode:true\">Lista de compras\n\n* alface\n* tomate\n* cebola\n* couve<\/pre>\n<p>O resultado:<\/p>\n<pre class=\"lang:default decode:true\">&lt;p&gt;Lista de compras&lt;\/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;alface&lt;\/li&gt;\n&lt;li&gt;tomate&lt;\/li&gt;\n&lt;li&gt;cebola&lt;\/li&gt;\n&lt;li&gt;couve&lt;\/li&gt;\n&lt;\/ul&gt;<\/pre>\n<p>Al\u00e9m do * (asterisco), podemos utilizar o sinal de + (soma) ou &#8211; (subtra\u00e7\u00e3o) pra formarmos uma lista.<\/p>\n<p>Pra termos uma lista ordenada, segue a mesma ideia da lista n\u00e3o ordenada:<\/p>\n<pre class=\"lang:default decode:true\">Lista de compras\n\n1. alface\n2. tomate\n3. cebola\n4. couve<\/pre>\n<p>E resultado:<\/p>\n<pre class=\"lang:default decode:true\">&lt;p&gt;Lista de compras&lt;\/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;alface&lt;\/li&gt;\n&lt;li&gt;tomate&lt;\/li&gt;\n&lt;li&gt;cebola&lt;\/li&gt;\n&lt;li&gt;couve&lt;\/li&gt;\n&lt;\/ol&gt;<\/pre>\n<p>Pra criamos uma lista aninhada, basta uma colocarmos o subitem com um espa\u00e7o na frente:<\/p>\n<pre class=\"lang:default decode:true\">Lista de compras\n\n* alface\n * tomate\n* cebola\n * couve<\/pre>\n<p>O resultado:<\/p>\n<pre class=\"lang:default decode:true\">&lt;p&gt;Lista de compras&lt;\/p&gt;\n\n&lt;ul&gt;\n    &lt;li&gt;alface\n        &lt;ul&gt;\n            &lt;li&gt;tomate&lt;\/li&gt;\n        &lt;\/ul&gt;\n    &lt;\/li&gt;\n    &lt;li&gt;cebola\n        &lt;ul&gt;\n            &lt;li&gt;couve&lt;\/li&gt;\n            &lt;li&gt;espinafre&lt;\/li&gt;\n        &lt;\/ul&gt;\n    &lt;\/li&gt;\n&lt;\/ul&gt;<\/pre>\n<p>A ideia \u00e9 a mesma para a lista ordenada.<\/p>\n<p>Pra criamos um link com uma p\u00e1gina da web:<\/p>\n<pre><code>Esse o [link para o meu blog](https:\/\/cezarcruz.com.br\/blog\/ \"Meu blog\")<\/code><\/pre>\n<p>O resultado vem logo abaixo:<\/p>\n<pre class=\"lang:default decode:true\">&lt;p&gt;Esse o &lt;a href=\"https:\/\/cezarcruz.com.br\/blog\/\" title=\"Meu blog\"&gt;link para o meu blog&lt;\/a&gt;&lt;\/p&gt;<\/pre>\n<p>Repare que o que est\u00e1 dentro do colchetes \u00e9 o que ir\u00e1 virar um link, o endere\u00e7o vem dentro de par\u00eanteses e utilizar o title dentro do par\u00eanteses \u00e9 opcional, caso n\u00e3o queira, basta deixar somente o endere\u00e7o.<\/p>\n<p>Ainda com links, podemos usar ele de uma forma um pouco mais organizada, utilizando referencias:<\/p>\n<pre class=\"lang:default decode:true\">O site do [G1][1] \u00e9 igual ao do [R7][2]\n\n[1]: http:\/\/g1.com \"Site do G1\"\n[2]: http:\/\/r7.com \"Site do R7\"<\/pre>\n<p>O Resultado segue como de costume:<\/p>\n<pre class=\"lang:default decode:true\">&lt;p&gt;O site do &lt;a href=\"g1.com\" title=\"Site do G1\"&gt;G1&lt;\/a&gt; \u00e9 igual ao do &lt;a href=\"r7.com\" title=\"Site do R7\"&gt;R7&lt;\/a&gt;&lt;\/p&gt;<\/pre>\n<p>Pra utilizarmos referencias em links, temos que atentar aos fatos:<\/p>\n<ul>\n<li>O que estiver entre os primeiros colchetes \u00e9 o que ir\u00e1 se tornar &#8220;clic\u00e1vel&#8221;;<\/li>\n<li>O segundo colchetes \u00e9 a referencia, nela, podemos utilizar uma letra ou palavra e elas n\u00e3o s\u00e3o <em>case sensitive<\/em>;<\/li>\n<li>No local onde deixamos organizada as referencias, temos de colocar : (dois pontos) depois dos colchetes pra que funcione corretamente;<\/li>\n<li>N\u00e3o esquecer de por <strong>http:\/\/<\/strong>;<\/li>\n<\/ul>\n<p>Pra utilizarmos imagens, o c\u00f3digo \u00e9 semelhante ao de links:<\/p>\n<pre class=\"lang:default decode:true\">![O alt](https:\/\/www.google.com.br\/images\/srpr\/logo11w.png \"Logo do google\")<\/pre>\n<p>E o lindo resultado:<\/p>\n<pre class=\"lang:default decode:true\">&lt;p&gt;Olha essa imagem: &lt;img src=\"https:\/\/www.google.com.br\/images\/srpr\/logo11w.png\" alt=\"O alt\" title=\"Logo do google\"&gt;&lt;\/p&gt;<\/pre>\n<p>A diferen\u00e7a b\u00e1sica entre links e imagens \u00e9 a ! (exclama\u00e7\u00e3o) antes do c\u00f3digo.<\/p>\n<p>Bom por enquanto \u00e9 isso ai, s\u00e3o bem b\u00e1sicas, mas \u00e9 o suficiente pra nos prepararmos pros pr\u00f3ximos tutoriais de Jekyll.<\/p>\n<p>Abra\u00e7os.<\/p>\n<p>Links \u00fateis<\/p>\n<ul>\n<li><a href=\"http:\/\/markable.in\/editor\/\">Markdown editor online<\/a><\/li>\n<li><a href=\"http:\/\/daringfireball.net\/\">Site oficial do Markdown<\/a><\/li>\n<li><a title=\"Como utilizar o Jekyll pra criar um blog com p\u00e1ginas est\u00e1ticas. Jekyll parte 1\" href=\"https:\/\/cezarcruz.com.br\/blog\/2014\/01\/como-utilizar-o-jekyll-pra-criar-um-blog-com-paginas-estaticas-jekyll-parte-1\/\">Jekyll beeeeem b\u00e1sico<\/a><\/li>\n<\/ul>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Fri, 17 Jan 2014 12:36:48 +0000","created_by":1,"updated_at":"Fri, 17 Jan 2014 12:36:48 +0000","updated_by":1,"published_at":"Fri, 17 Jan 2014 12:36:48 +0000","published_by":1},{"id":286,"title":"Dica git: .gitignore n\u00e3o est\u00e1 funcionando corretamente","slug":"dica-gitignore-nao-esta-funcionando","markdown":"\n\n## Ol\u00e1s, aqui vai um dica rapidinha, pra quem usa Git.\n\nQuando atualizamos o .gitignore (arquivo utilizado pra descrever pastas ou arquivos que n\u00e3o devem ser versionados), pode ser que os arquivos que colocamos neles continuem sendo versionados, pra que ele funcione corretamente, devemos limpar o cache local:\n\n`git rm -r --cached .`\n\nRode o comando acima no root do diret\u00f3rio.\n\nDepois, procedimento padr\u00e3o:\n\n`git add .`\n\n`git commit -m \".gitignore funcionando ;)\"`\n\nEspero que ajude, at\u00e9 mais. =D\n\n\n","html":"<h2>Ol\u00e1s, aqui vai um dica rapidinha, pra quem usa Git.<\/h2>\n<p>Quando atualizamos o .gitignore (arquivo utilizado pra descrever pastas ou arquivos que n\u00e3o devem ser versionados), pode ser que os arquivos que colocamos neles continuem sendo versionados, pra que ele funcione corretamente, devemos limpar o cache local:<\/p>\n<pre><code>git rm -r --cached .<\/code><\/pre>\n<p>Rode o comando acima no root do diret\u00f3rio.<\/p>\n<p>Depois, procedimento padr\u00e3o:<\/p>\n<pre><code>git add .<\/code><\/pre>\n<pre><code>git commit -m \".gitignore funcionando ;)\"<\/code><\/pre>\n<p>Espero que ajude, at\u00e9 mais. =D<\/p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Wed, 05 Feb 2014 13:36:20 +0000","created_by":1,"updated_at":"Wed, 05 Feb 2014 13:36:20 +0000","updated_by":1,"published_at":"Wed, 05 Feb 2014 13:36:20 +0000","published_by":1},{"id":337,"title":"CSS: como personalizar inputs sem utilizar classe","slug":"css-como-personalizar-inputs-sem-utilizar-classe","markdown":"\nOl\u00e1s, vindo aqui hoje s\u00f3 pra manter o blog \u201cativo\u201d heheh, hoje, uma dica bem simples de **css** pra personalizar <del>textbox<\/del> (mania de .net) inputs.\n\nO c\u00f3digo \u00e9 o seguinte:\n\ninput[type=text] { \/* regras de estilo aqui. *\/ }\n\nCom o c\u00f3digo **css** acima, n\u00e3o ser\u00e1 mais preciso declarar uma classe no e colocar em cada elemento input, lembrando que pode ser utilizado em outros elementos, exemplo:\n\ninput[type=checkbox] { \/* estilo aqui *\/ }\n\nParece bobo e pregui\u00e7oso, mas se levarmos em conta o quanto da pra economizar de Ctrl + C e Ctrl + V.\n\nEspero que ajude, at\u00e9 mais.\n\n\n","html":"<p>Ol\u00e1s, vindo aqui hoje s\u00f3 pra manter o blog &#8220;ativo&#8221; heheh, hoje, uma dica bem simples de <strong>css<\/strong> pra personalizar <del>textbox<\/del> (mania de .net) inputs.<\/p>\n<p>O c\u00f3digo \u00e9 o seguinte:<\/p>\n<pre class=\"lang:css decode:true\">input[type=text] {\n  \/* regras de estilo aqui. *\/\n}<\/pre>\n<p>Com o c\u00f3digo <strong>css<\/strong> acima, n\u00e3o ser\u00e1 mais preciso declarar uma classe no e colocar em cada elemento input, lembrando que pode ser utilizado em outros elementos, exemplo:<\/p>\n<pre class=\"lang:css decode:true\">input[type=checkbox] {\n    \/* estilo aqui *\/\n}<\/pre>\n<p>Parece bobo e pregui\u00e7oso, mas se levarmos em conta o quanto da pra economizar de Ctrl + C e Ctrl + V.<\/p>\n<p>Espero que ajude, at\u00e9 mais.<\/p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Fri, 28 Mar 2014 16:23:34 +0000","created_by":1,"updated_at":"Fri, 28 Mar 2014 16:23:34 +0000","updated_by":1,"published_at":"Fri, 28 Mar 2014 16:23:34 +0000","published_by":1},{"id":352,"title":"Como adicionar o Lightbox em um site utilizando CakePHP","slug":"como-adicionar-o-lightbox-em-um-site-utilizando-cakephp","markdown":"\nOl\u00e1s,\n\nHoje vamos com uma dica simples e usual: Como utilizar o Lightbox, [aquele plugin JQuery para imagens\/galeria](http:\/\/lokeshdhakar.com\/projects\/lightbox2\/), com o CakePHP.\n\nVamos l\u00e1, depois de instalado o CakePHP, podemos utilizar esse tutorial ([Como usar javascript e css no CakePHP](https:\/\/cezarcruz.com.br\/2013\/07\/como-usar-javascript-e-css-no-cakephp\/)), pra colocarmos os arquivos do Lightbox no local correto, e fazermos a chamada no nosso arquivo de layout.\n\nA chamada para os arquivos de CSS e Javascript devem ficar assim:\n\n<?php echo $this->Html->css('lightbox'); ?> <script src=\"http:\/\/ajax.googleapis.com\/ajax\/libs\/jquery\/2.1.0\/jquery.min.js\" type=\"text\/javascript\"><\/script> <?php echo $this->Html->script('lightbox.min'); ?>\n\nNo c\u00f3digo acima podemos ver:\n\n1. A chamada pra exibir o css do Lightbox;\n2. A chamada pro JQuery 2.1.0 nos servidores do Google =D;\n3. A chamada para o arquivo Javascript do Lightbox\n\nFeito isso, j\u00e1 estamos na metade do caminho, o pr\u00f3ximo passo, \u00e9 colocar as imagens que ser\u00e3o exibidas.\n\nVeja como ir\u00e1 ficar a nossa View que ir\u00e1 exibir as fotos:\n\n\u00a0\n\necho $this->Html->link( $this->Html->image($fotos['Foto']['caminho'], array('class' => 'class_img')), $fotos['Foto']['caminho'], array('escapeTitle' => false, 'title' => $fotos['Foto']['alt'], 'data-lightbox'=> 'roadtrip', 'class' => 'class_url') );\n\nExplicando o c\u00f3digo (Acho que vou criar um categoria, \u201c*explicando o c\u00f3digo*\u201d hahahahahah) :\n\n1. Utilizaremos o m\u00e9todo link do Helper Html do CakePhp;\n2. Dentro do m\u00e9todo Html, iremos colocar o m\u00e9todo image, tamb\u00e9m do Helper Html (Aqui podemos utilizar a forma padr\u00e3o, primeiro com o caminho da imagem, e depois os par\u00e2metros adicionais dentro de um array, como \u00e9 feito de costume), aqui, sugiro que utilize um thumbnail;\n3. Na 3\u00b0 linha, temos novamente o caminho da imagem, \u00e9 ali que o link ir\u00e1 apontar pra imagem que ira ser aberta no modal;\n4. N 4\u00b0 linha, temos os par\u00e2metros finais do link, o title \u00e9 o que ir\u00e1 aparecer na legenda da imagem quando ela for aberta no modal, o mais importate \u00e9 o \u2018data-lightbox\u2019, esse par\u00e2metro que ser\u00e1 utilizado para ativar o Lightbox;\n\nA partir daqui, use a criatividade e seja feliz =D.\n\nEspero que seja \u00fatil e obrigado por ter chegado at\u00e9 aqui!!\n\nAt\u00e9!\n\n\n","html":"<p>Ol\u00e1s,<\/p>\n<p>Hoje vamos com uma dica simples e usual: Como utilizar o Lightbox, <a href=\"http:\/\/lokeshdhakar.com\/projects\/lightbox2\/\">aquele plugin JQuery para imagens\/galeria<\/a>, com o CakePHP.<\/p>\n<p>Vamos l\u00e1, depois de instalado o CakePHP, podemos utilizar esse tutorial (<a href=\"https:\/\/cezarcruz.com.br\/2013\/07\/como-usar-javascript-e-css-no-cakephp\/\">Como usar javascript e css no CakePHP<\/a>), pra colocarmos os arquivos do Lightbox no local correto, e fazermos a chamada no nosso arquivo de layout.<\/p>\n<p>A chamada para os arquivos de CSS e Javascript devem ficar assim:<\/p>\n<pre class=\"lang:php decode:true\">&lt;?php echo $this-&gt;Html-&gt;css('lightbox'); ?&gt;\r\n&lt;script src=\"http:\/\/ajax.googleapis.com\/ajax\/libs\/jquery\/2.1.0\/jquery.min.js\" type=\"text\/javascript\"&gt;&lt;\/script&gt;\t\r\n&lt;?php echo $this-&gt;Html-&gt;script('lightbox.min'); ?&gt;\r\n<\/pre>\n<p>No c\u00f3digo acima podemos ver:<\/p>\n<ol>\n<li>A chamada pra exibir o css do Lightbox;<\/li>\n<li>A chamada pro JQuery 2.1.0 nos servidores do Google =D;<\/li>\n<li>A chamada para o arquivo Javascript do Lightbox<\/li>\n<\/ol>\n<p>Feito isso, j\u00e1 estamos na metade do caminho, o pr\u00f3ximo passo, \u00e9 colocar as imagens que ser\u00e3o exibidas.<\/p>\n<p>Veja como ir\u00e1 ficar a nossa View que ir\u00e1 exibir as fotos:<\/p>\n<p>&nbsp;<\/p>\n<pre class=\"lang:php decode:true\">echo $this-&gt;Html-&gt;link(\r\n\t $this-&gt;Html-&gt;image($fotos['Foto']['caminho'], array('class' =&gt; 'class_img')),\r\n\t $fotos['Foto']['caminho'],\r\n\t array('escapeTitle' =&gt; false, 'title' =&gt; $fotos['Foto']['alt'], 'data-lightbox'=&gt; 'roadtrip', 'class' =&gt; 'class_url')\r\n);<\/pre>\n<p>Explicando o c\u00f3digo (Acho que vou criar um categoria, &#8220;<em>explicando o c\u00f3digo<\/em>&#8221; hahahahahah) :<\/p>\n<ol>\n<li>Utilizaremos o m\u00e9todo link do Helper Html do CakePhp;<\/li>\n<li>Dentro do m\u00e9todo Html, iremos colocar o m\u00e9todo image, tamb\u00e9m do Helper Html (Aqui podemos utilizar a forma padr\u00e3o, primeiro com o caminho da imagem, e depois os par\u00e2metros adicionais dentro de um array, como \u00e9 feito de costume), aqui, sugiro que utilize um thumbnail;<\/li>\n<li>Na 3\u00b0 linha, temos novamente o caminho da imagem, \u00e9 ali que o link ir\u00e1 apontar pra imagem que ira ser aberta no modal;<\/li>\n<li>N 4\u00b0 linha, temos os par\u00e2metros finais do link, o title \u00e9 o que ir\u00e1 aparecer na legenda da imagem quando ela for aberta no modal, o mais importate \u00e9 o &#8216;data-lightbox&#8217;, esse par\u00e2metro que ser\u00e1 utilizado para ativar o Lightbox;<\/li>\n<\/ol>\n<p>A partir daqui, use a criatividade e seja feliz =D.<\/p>\n<p>Espero que seja \u00fatil e obrigado por ter chegado at\u00e9 aqui!!<\/p>\n<p>At\u00e9!<\/p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Sat, 19 Apr 2014 11:50:41 +0000","created_by":1,"updated_at":"Thu, 12 May 2016 19:28:44 +0000","updated_by":1,"published_at":"Sat, 19 Apr 2014 11:50:41 +0000","published_by":1},{"id":366,"title":"Utilizando timer com JavaScript e AJAX JQuery","slug":"utilizando-timer-com-javascript-e-ajax-jquery","markdown":"\nOl\u00e1s,\n\nHoje uma pequena dica de JavaScript \/ JQuery: Como fazer um \u201cAjax get\u201d com timer.\n\nVamos l\u00e1, depois de colocarmos as referencias necess\u00e1rias para o JQuery, devemos utilizar o seguinte c\u00f3digo:\n\n\u00a0\n\n<script> $(document).ready(function() { function getData() { $.ajax({ url: \"http:\/\/localhost\/dados.php\", beforeSend: function() {$(\"#conteudo\").empty();$(\"#conteudo\").append(\"Carregando\");} }).done(function(data) { $(\"#conteudo\").empty(); $(\"#conteudo\").append(data); }); } getData(); setInterval(getData, 50000); }); <\/script>\n\nExplicando:\n\nDentro do \u00a0**$(document).ready(function() **colocamos os scripts que ir\u00e3o fazer a m\u00e1gica.\n\nNa fun\u00e7\u00e3o **getData** colocamos a chamada ajax:\n\nParametros\n\n- url: caminho do script que ir\u00e1 retornar os dados;\n- beforeSend: a\u00e7\u00e3o que deve ser realizada antes de obter o resultado da url solicitada, loading, por exemplo;\n- .done: \u00e9 o que acontece ap\u00f3s o recebimento dos dados, nesse caso o resultado \u00e9 salvo na var **data. **\n\nAp\u00f3s a cria\u00e7\u00e3o da fun\u00e7\u00e3o, devemos fazer a primeira chamada, pois quando utilizamos o timer, ele executa somente ap\u00f3s ao tempo determinado.\n\nA parte principal \u00e9 o **setInterval(getData, 50000).\u00a0**Aqui temos\u00a0 a parte principal, que efetivamente ir\u00e1 fazer a requisi\u00e7\u00e3o de tempos em tempos, nela devemos atentar a 2 fatos:\n\n1. A fun\u00e7\u00e3o que ser\u00e1 executada deve ser chamada sem o \u201c()\u201d (par\u00eanteses) no final;\n2. O segundo par\u00e2metro \u00e9 o intervalo de tempo e milissegundos;\n\n\u00a0\n\nBom, \u00e9 isso, espero que seja \u00fatil!! At\u00e9 mais! =D\n\nPS: Nesse tutorial utilizamos o JQuery somente pelo fato de abstrair o AJAX, de qualquer forma, ele ir\u00e1 funcionar normalmente se voc\u00ea n\u00e3o utilizar uma lib JavaScript.\n\n\n","html":"<p>Ol\u00e1s,<\/p>\n<p>Hoje uma pequena dica de JavaScript \/ JQuery: Como fazer um &#8220;Ajax get&#8221; com timer.<\/p>\n<p>Vamos l\u00e1, depois de colocarmos as referencias necess\u00e1rias para o JQuery, devemos utilizar o seguinte c\u00f3digo:<\/p>\n<p>&nbsp;<\/p>\n<pre class=\"lang:js decode:true\">&lt;script&gt;\r\n    $(document).ready(function() {\r\n    \tfunction getData() {\r\n    \t\t$.ajax({\r\n    \t\t\turl: \"http:\/\/localhost\/dados.php\",\r\n    \t\t\tbeforeSend: function() {$(\"#conteudo\").empty();$(\"#conteudo\").append(\"Carregando\");}\t\t\t\t\t\r\n    \t\t}).done(function(data) {\r\n    \t\t\t$(\"#conteudo\").empty();\t\t\t\r\n    \t\t\t$(\"#conteudo\").append(data);\r\n    \t\t});\r\n    \t}\r\n    \tgetData();\r\n    \tsetInterval(getData, 50000);\r\n    });\r\n&lt;\/script&gt;<\/pre>\n<p>Explicando:<\/p>\n<p>Dentro do \u00a0<strong>$(document).ready(function() <\/strong>colocamos os scripts que ir\u00e3o fazer a m\u00e1gica.<\/p>\n<p>Na fun\u00e7\u00e3o <strong>getData<\/strong> colocamos a chamada ajax:<\/p>\n<p>Parametros<\/p>\n<ul>\n<li>url: caminho do script que ir\u00e1 retornar os dados;<\/li>\n<li>beforeSend: a\u00e7\u00e3o que deve ser realizada antes de obter o resultado da url solicitada, loading, por exemplo;<\/li>\n<li>.done: \u00e9 o que acontece ap\u00f3s o recebimento dos dados, nesse caso o resultado \u00e9 salvo na var <strong>data. <\/strong><\/li>\n<\/ul>\n<p>Ap\u00f3s a cria\u00e7\u00e3o da fun\u00e7\u00e3o, devemos fazer a primeira chamada, pois quando utilizamos o timer, ele executa somente ap\u00f3s ao tempo determinado.<\/p>\n<p>A parte principal \u00e9 o <strong>setInterval(getData, 50000).\u00a0<\/strong>Aqui temos\u00a0 a parte principal, que efetivamente ir\u00e1 fazer a requisi\u00e7\u00e3o de tempos em tempos, nela devemos atentar a 2 fatos:<\/p>\n<ol>\n<li>A fun\u00e7\u00e3o que ser\u00e1 executada deve ser chamada sem o &#8220;()&#8221; (par\u00eanteses) no final;<\/li>\n<li>O segundo par\u00e2metro \u00e9 o intervalo de tempo e milissegundos;<\/li>\n<\/ol>\n<p>&nbsp;<\/p>\n<p>Bom, \u00e9 isso, espero que seja \u00fatil!! At\u00e9 mais! =D<\/p>\n<p>PS: Nesse tutorial utilizamos o JQuery somente pelo fato de abstrair o AJAX, de qualquer forma, ele ir\u00e1 funcionar normalmente se voc\u00ea n\u00e3o utilizar uma lib JavaScript.<\/p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Fri, 09 May 2014 09:17:40 +0000","created_by":1,"updated_at":"Thu, 12 May 2016 19:27:56 +0000","updated_by":1,"published_at":"Fri, 09 May 2014 09:17:40 +0000","published_by":1},{"id":378,"title":"Como instalar o Maven no Windows","slug":"como-instalar-o-maven-windows","markdown":"\nOl\u00e1s, depois de um tempo parado, voltamos com um post ensinando como instalar o Maven.\n\nPra quem n\u00e3o sabe, o Maven \u00e9 basicamente um reposit\u00f3rio de libs\/jars, que armazena tudo em um \u00fanico servidor remoto, com isso, teremos sempre certeza de que todos os ambientes (desenvolvimento e build), estar\u00e3o com as mesmas vers\u00f5es de depend\u00eancias, entre outras coisas, pelo Maven \u00e9 poss\u00edvel realizar testes unit\u00e1rios automatizados.\n\nVamos l\u00e1, o primeiro passo \u00e9 ter instalado o JVM no seu sistema, feito isso, n\u00e3o se esque\u00e7a de adicionar o JAVA_HOME no path, o pr\u00f3ximo passo \u00e9 baixar o Maven no site:\n\n[Lista de downloads](http:\/\/maven.apache.org\/download.cgi), hoje a vers\u00e3o mais recente \u00e9 a 3.2.2, escolha o pacote apache-maven-3.2.2-bin.zip, e fa\u00e7a o download.\n\nAp\u00f3s a conclus\u00e3o do download, descompacte os arquivos, pra esse tutorial iremos utilizar a pasta C:dev, ap\u00f3s descompactar, devemos adicionar uma nova vari\u00e1vel de ambiente no path do Windows:\n\n<div class=\"wp-caption aligncenter\" id=\"attachment_379\" style=\"width: 254px\">[![Propriedades do sistema](https:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/h_300,w_244\/v1454457569\/Propriedades-do-sistema_bs5ku1.png)](https:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/v1454457569\/Propriedades-do-sistema_bs5ku1.png)Janela de propriedades do sistema\n\n<\/div><div class=\"wp-caption aligncenter\" id=\"attachment_380\" style=\"width: 283px\">[![Variaveis_de_ambiente](https:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/h_300,w_273\/v1454457567\/Variaveis_de_ambiente_enmiij.png)](https:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/v1454457567\/Variaveis_de_ambiente_enmiij.png)Janela de vari\u00e1veis de ambiente.\n\n<\/div>Na janela Vari\u00e1veis de ambiente, no grupo Vari\u00e1veis do sistema, devemos adicionar uma nova vari\u00e1vel chamada M2_HOME, tudo em mai\u00fasculo, o campo valor da variavel deve ser o caminho de instala\u00e7\u00e3o do Maven, no nosso caso C:devapache-maven-3.2.2\n\n<div class=\"wp-caption aligncenter\" id=\"attachment_381\" style=\"width: 310px\">[![nova_variavel_de_sistema](https:\/\/cezarcruz.com.br\/wp-content\/uploads\/2014\/07\/nova_variavel_de_sistema-300x129.png)](https:\/\/cezarcruz.com.br\/wp-content\/uploads\/2014\/07\/nova_variavel_de_sistema.png)Janela nova vari\u00e1vel de sistema\n\n<\/div>Agora j\u00e1 est\u00e1 tudo instalado e configurado, o pr\u00f3ximo passo \u00e9 testar, para isso, basta abrirmos uma janela de comando (dos) e digitar o comando mvn, o resultado dever ser igual o abaixo:\n\n<div class=\"wp-caption aligncenter\" id=\"attachment_382\" style=\"width: 310px\">[![Saida do comando mvn](https:\/\/cezarcruz.com.br\/wp-content\/uploads\/2014\/07\/tela_comando_mvn-300x58.png)](https:\/\/cezarcruz.com.br\/wp-content\/uploads\/2014\/07\/tela_comando_mvn.png)Saida do comando mvn\n\n<\/div>Depois disso, \u00e9 s\u00f3 usar.\n\nLogo logo, estarei postando mais uns tutorias b\u00e1sicos sobre Java e Maven, abra\u00e7os e at\u00e9.\n\n\n","html":"<p>Ol\u00e1s, depois de um tempo parado, voltamos com um post ensinando como instalar o Maven.<\/p>\n<p>Pra quem n\u00e3o sabe, o Maven \u00e9 basicamente um reposit\u00f3rio de libs\/jars, que armazena tudo em um \u00fanico servidor remoto, com isso, teremos sempre certeza de que todos os ambientes (desenvolvimento e build), estar\u00e3o com as mesmas vers\u00f5es de depend\u00eancias, entre outras coisas, pelo Maven \u00e9 poss\u00edvel realizar testes unit\u00e1rios automatizados.<\/p>\n<p>Vamos l\u00e1, o primeiro passo \u00e9 ter instalado o JVM no seu sistema, feito isso, n\u00e3o se esque\u00e7a de adicionar o JAVA_HOME no path, o pr\u00f3ximo passo \u00e9 baixar o Maven no site:<\/p>\n<p><a href=\"http:\/\/maven.apache.org\/download.cgi\">Lista de downloads<\/a>, hoje a vers\u00e3o mais recente \u00e9 a 3.2.2, escolha o pacote apache-maven-3.2.2-bin.zip, e fa\u00e7a o download.<\/p>\n<p>Ap\u00f3s a conclus\u00e3o do download, descompacte os arquivos, pra esse tutorial iremos utilizar a pasta C:dev, ap\u00f3s descompactar, devemos adicionar uma nova vari\u00e1vel de ambiente no path do Windows:<\/p>\n<div id=\"attachment_379\" style=\"width: 254px\" class=\"wp-caption aligncenter\"><a href=\"https:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/v1454457569\/Propriedades-do-sistema_bs5ku1.png\"><img class=\"wp-image-379 size-medium\" src=\"https:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/h_300,w_244\/v1454457569\/Propriedades-do-sistema_bs5ku1.png\" alt=\"Propriedades do sistema\" width=\"244\" height=\"300\" \/><\/a><p class=\"wp-caption-text\">Janela de propriedades do sistema<\/p><\/div>\n<div id=\"attachment_380\" style=\"width: 283px\" class=\"wp-caption aligncenter\"><a href=\"https:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/v1454457567\/Variaveis_de_ambiente_enmiij.png\"><img class=\"wp-image-380 size-medium\" src=\"https:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/h_300,w_273\/v1454457567\/Variaveis_de_ambiente_enmiij.png\" alt=\"Variaveis_de_ambiente\" width=\"273\" height=\"300\" \/><\/a><p class=\"wp-caption-text\">Janela de vari\u00e1veis de ambiente.<\/p><\/div>\n<p>Na janela Vari\u00e1veis de ambiente, no grupo Vari\u00e1veis do sistema, devemos adicionar uma nova vari\u00e1vel chamada M2_HOME, tudo em mai\u00fasculo, o campo valor da variavel deve ser o caminho de instala\u00e7\u00e3o do Maven, no nosso caso C:devapache-maven-3.2.2<\/p>\n<div id=\"attachment_381\" style=\"width: 310px\" class=\"wp-caption aligncenter\"><a href=\"https:\/\/cezarcruz.com.br\/wp-content\/uploads\/2014\/07\/nova_variavel_de_sistema.png\"><img class=\"wp-image-381 size-medium\" src=\"https:\/\/cezarcruz.com.br\/wp-content\/uploads\/2014\/07\/nova_variavel_de_sistema-300x129.png\" alt=\"nova_variavel_de_sistema\" width=\"300\" height=\"129\" \/><\/a><p class=\"wp-caption-text\">Janela nova vari\u00e1vel de sistema<\/p><\/div>\n<p>Agora j\u00e1 est\u00e1 tudo instalado e configurado, o pr\u00f3ximo passo \u00e9 testar, para isso, basta abrirmos uma janela de comando (dos) e digitar o comando mvn, o resultado dever ser igual o abaixo:<\/p>\n<div id=\"attachment_382\" style=\"width: 310px\" class=\"wp-caption aligncenter\"><a href=\"https:\/\/cezarcruz.com.br\/wp-content\/uploads\/2014\/07\/tela_comando_mvn.png\"><img class=\"size-medium wp-image-382\" src=\"https:\/\/cezarcruz.com.br\/wp-content\/uploads\/2014\/07\/tela_comando_mvn-300x58.png\" alt=\"Saida do comando mvn\" width=\"300\" height=\"58\" \/><\/a><p class=\"wp-caption-text\">Saida do comando mvn<\/p><\/div>\n<p>Depois disso, \u00e9 s\u00f3 usar.<\/p>\n<p>Logo logo, estarei postando mais uns tutorias b\u00e1sicos sobre Java e Maven, abra\u00e7os e at\u00e9.<\/p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Tue, 08 Jul 2014 11:38:57 +0000","created_by":1,"updated_at":"Thu, 12 May 2016 19:26:38 +0000","updated_by":1,"published_at":"Tue, 08 Jul 2014 11:38:57 +0000","published_by":1},{"id":388,"title":"Como usar Case em select no Oracle","slug":"como-usar-case-em-select-no-oracle","markdown":"\nOl\u00e1s,\n\nHoje uma dica r\u00e1pida sobre oracle: Como utilizar o **Case** em um select no Oracle.\n\nO **Case**, basicamente \u00e9 um \u201cif\/else\u201d, por exemplo, se um condi\u00e7\u00e3o for for verdadeira ele faz determinada a\u00e7\u00e3o.\n\nA utiliza\u00e7\u00e3o do Case \u00e9 bem simples, veja abaixo:\n\nSELECT CASE nome_coluna WHEN 'valor_ocorrer' THEN 'substitui_por_isso' ELSE 'valor_padr\u00e3o' END FROM tabela;\n\nExplicando:\n\n**CASE** o nome da coluna WHEN o valor que ir\u00e1 retornar THEN substitui por esse valor ELSE n\u00e3o encontre o valor na cl\u00e1usula, usa este como default END.\n\nTamb\u00e9m \u00e9 poss\u00edvel utilizar mais de uma cl\u00e1usula, bastando apenas acrescentar elas da seguinte forma:\n\nSELECT CASE nome_coluna WHEN 'valor_ocorrer' THEN 'substitui_por_isso' WHEN 'valor2_ocorrer' THEN 'substitui_por_isso' WHEN 'valor3_ocorrer' THEN 'substitui_por_isso' ELSE valor_padr\u00e3o END FROM tabela;\n\nSimples, porem muuuuuuito \u00fatil em alguns casos.\n\n\u00c9 isso ae, use com modera\u00e7\u00e3o, boa sorte e at\u00e9!!\n\n\n","html":"<p>Ol\u00e1s,<\/p>\n<p>Hoje uma dica r\u00e1pida sobre oracle: Como utilizar o <strong>Case<\/strong> em um select no Oracle.<\/p>\n<p><!--more--><\/p>\n<p>O <strong>Case<\/strong>, basicamente \u00e9 um &#8220;if\/else&#8221;, por exemplo, se um condi\u00e7\u00e3o for for verdadeira ele faz determinada a\u00e7\u00e3o.<\/p>\n<p>A utiliza\u00e7\u00e3o do Case \u00e9 bem simples, veja abaixo:<\/p>\n<pre class=\"lang:plsql decode:true\">SELECT \r\n     CASE nome_coluna \r\n     WHEN 'valor_ocorrer' THEN 'substitui_por_isso'\r\n     ELSE 'valor_padr\u00e3o'\r\n     END\r\nFROM tabela;\r\n<\/pre>\n<p>Explicando:<\/p>\n<p><strong>CASE<\/strong> o nome da coluna WHEN o valor que ir\u00e1 retornar THEN substitui por esse valor ELSE n\u00e3o encontre o valor na cl\u00e1usula, usa este como default END.<\/p>\n<p>Tamb\u00e9m \u00e9 poss\u00edvel utilizar mais de uma cl\u00e1usula, bastando apenas acrescentar elas da seguinte forma:<\/p>\n<pre class=\"lang:plsql decode:true\">SELECT \r\n     CASE nome_coluna \r\n     WHEN 'valor_ocorrer' THEN 'substitui_por_isso'\r\n     WHEN 'valor2_ocorrer' THEN 'substitui_por_isso'\r\n     WHEN 'valor3_ocorrer' THEN 'substitui_por_isso'\r\n     ELSE valor_padr\u00e3o\r\n     END\r\nFROM tabela;<\/pre>\n<p>Simples, porem muuuuuuito \u00fatil em alguns casos.<\/p>\n<p>\u00c9 isso ae, use com modera\u00e7\u00e3o, boa sorte e at\u00e9!!<\/p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Wed, 30 Jul 2014 16:51:56 +0000","created_by":1,"updated_at":"Fri, 06 May 2016 17:05:56 +0000","updated_by":1,"published_at":"Wed, 30 Jul 2014 16:51:56 +0000","published_by":1},{"id":397,"title":"Criando um projeto Maven web com o Eclipse JEE","slug":"criando-um-projeto-maven-web-com-o-eclipse-jee","markdown":"\nOl\u00e1s, hoje vamos ver como criar um projeto java web utilizando [Maven ](https:\/\/cezarcruz.com.br\/2014\/07\/como-instalar-o-maven-windows\/ \"Como instalar o Maven no Windows\")e Eclipse JEE\/Tomcat.\n\nPra esse tutorial, vamos considerar que o **Maven**, **Eclipse JEE** (utilizando java 1.8) e o **tomcat** est\u00e3o configurados.\n\n\n## Criando o projeto\n\nO primeiro passo \u00e9 criar um projeto no Eclipse:\n\nFile -> New -> Maven Project\n\n<div class=\"wp-caption aligncenter\" id=\"attachment_398\" style=\"width: 310px\">[![Novo projeto Maven](http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/h_272,w_300\/v1454457566\/maven-new-project_chg3gr.png)](https:\/\/wordpress-cezzao.rhcloud.com\/wp-content\/uploads\/2014\/08\/maven-new-project.png)Novo projeto Maven\n\n<\/div>Nessa tele devemos selecionar a op\u00e7\u00e3o **Create a simple project(skip archetype selection), **conforme a figura, em seguida clicar em next.\n\n<div class=\"wp-caption aligncenter\" id=\"attachment_399\" style=\"width: 310px\">[![Novo projeto Maven - Descri\u00e7\u00e3o](http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/h_272,w_300\/v1454457564\/maven-new-project-description_ui33fj.png)](https:\/\/wordpress-cezzao.rhcloud.com\/wp-content\/uploads\/2014\/08\/maven-new-project-description.png)Novo projeto Maven \u2013 Descri\u00e7\u00e3o\n\n<\/div>Nessa tela temos as op\u00e7\u00f5es para identificar nosso projeto, devemos preencher as seguintes op\u00e7\u00f5es:\n\n- `Group ID `(um identificador da empresa\/grupo ao qual o projeto pertence. Geralmente o nome do site da empresa\/grupo ao contr\u00e1rio) : **br.com.cezarcruz**\n- Artifact ID (nome do projeto): **website**\n- Packaging (como o projeto ser\u00e1 empacotado, ex: jar, war, ear): **war**\n\n> Pra conhecer um pouco mais acesse o link: [http:\/\/maven.apache.org\/guides\/mini\/guide-naming-conventions.html](http:\/\/maven.apache.org\/guides\/mini\/guide-naming-conventions.html)\n\nDepois de preencher os dados, clique em finish.\n\nDepois disso nosso projeto ser\u00e1 criado com a seguinte estrutura:\n\n<div class=\"wp-caption aligncenter\" id=\"attachment_400\" style=\"width: 240px\">[![Estrutura de um projeto Maven](http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/h_300,w_230\/v1454457563\/projeto-maven-estrutura_sr3pff.png)](https:\/\/wordpress-cezzao.rhcloud.com\/wp-content\/uploads\/2014\/08\/projeto-maven-estrutura.png)Estrutura de um projeto Maven\n\n<\/div>De cima pra baixo temo:\n\n- Java Resources: \u00e9 nessa pasta onde deve ficar o c\u00f3digo java de nossa aplica\u00e7\u00e3o\/site, ela usa uma estrutura pr\u00f3pria para o **Maven**. A pasta \u00e9 dividia em sub diret\u00f3rio: - src\/main\/java: onde fica os packages e as classes java;\n- src\/main\/resources: fica os arquivos de properties (ex: arquivos res, persistence.xml, configura\u00e7\u00e3o de logs);\n- src\/test\/java: aqui onde fica os arquivos de teste unit\u00e1rios;\n- src\/test\/resources: arquivos de propertires que s\u00e3o usado em **tempo de testes**.\n- src\/main: nessa pasta ficam uma c\u00f3pia dos arquivos do src\/main\/java, mas exibidas como elas s\u00e3o exibidas na estrutura de pastas; - webapp: essa \u00e9 a pasta onde iram ficar os arquivos html\/jsp\/xhtml;\n- pom.xml: pra um projeto **maven**, esse \u00e9 o arquivo onde ficam todas as configura\u00e7\u00f5es pertinente a gera\u00e7\u00e3o de build, testes, jars de terceiros, etc;\n\n\u00a0\n\n\n## Ajustando configura\u00e7\u00f5es\n\nDepois que nosso projeto foi criado, precisamos fazer alguns ajustes para que ele rode adequadamente no **Eclipse**. Vamos come\u00e7ar pelo** pom.xml,** a vers\u00e3o gerada pelo Eclipse \u00e9 a seguinte:\n\n<project xmlns=\"http:\/\/maven.apache.org\/POM\/4.0.0\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" xsi:schemaLocation=\"http:\/\/maven.apache.org\/POM\/4.0.0 http:\/\/maven.apache.org\/xsd\/maven-4.0.0.xsd\"> <modelVersion>4.0.0<\/modelVersion> <groupId>br.com.cezarcruz<\/groupId> <artifactId>website<\/artifactId> <version>0.0.1-SNAPSHOT<\/version> <packaging>war<\/packaging> <\/project>\n\nNele devemos adicionar uma configura\u00e7\u00e3o para que o **maven\/eclipse** saiba qual a vers\u00e3o do **java** ele deve utilizar no projeto:\n\n<project xmlns=\"http:\/\/maven.apache.org\/POM\/4.0.0\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" xsi:schemaLocation=\"http:\/\/maven.apache.org\/POM\/4.0.0 http:\/\/maven.apache.org\/xsd\/maven-4.0.0.xsd\"> <modelVersion>4.0.0<\/modelVersion> <groupId>br.com.cezarcruz<\/groupId> <artifactId>website<\/artifactId> <version>0.0.1-SNAPSHOT<\/version> <packaging>war<\/packaging> <build> <finalName>website<\/finalName> <plugins> <plugin> <groupId>org.apache.maven.plugins<\/groupId> <artifactId>maven-compiler-plugin<\/artifactId> <version>3.1<\/version> <configuration> <source>1.8<\/source> <target>1.8<\/target> <\/configuration> <\/plugin> <\/plugins> <\/build> <\/project>\n\nExplicando:\n\nDentro do **build**, definimos o **finalName** (o nome final do pacote, ex: website.war), em seguida os **plugins**, aqui destacamos apenas as marca\u00e7\u00f5es **source** dentro de **configuration**, \u00e9 nela que definimos a vers\u00e3o do java utilizado no projeto, nesse caso a vers\u00e3o 1.8.\n\nDepois disso, temos que atualizar o projeto:\n\nBot\u00e3o direito em cima do nome do projeto: **Maven** -> Update Project.\n\nFeito isso, nosso projeto j\u00e1 est\u00e1 quase pronto, falta apenas criar o arquivo web.xml:\n\nClicar com bot\u00e3o direito em webapp: New -> Other.\n\nEscolha a op\u00e7\u00e3o pra criar um arquivo xml. Clique em next:\n\n<div class=\"wp-caption aligncenter\" id=\"attachment_403\" style=\"width: 270px\">[![](http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/h_300,w_260\/v1454457561\/criando-arquivo-web-xml1_sjwkfw.png)](https:\/\/wordpress-cezzao.rhcloud.com\/wp-content\/uploads\/2014\/08\/criando-arquivo-web-xml1.png)Criando arquivo xml\n\n<\/div>Aqui, devemos reparar em duas coisas:\n\n- O local do arquivo: foi acrescentado a subpasta** \/WEB-INF**;\n- O nome do arquivo tem que ser **web.xml**;\n\nFeito isso, clique em finish, ser\u00e1 criando um arquivo xml vazio, apenas com o cabe\u00e7alho, devemos apagar e colocar o conte\u00fado abaixo:\n\n<?xml version=\"1.0\" encoding=\"UTF-8\"?> <web-app version=\"3.1\" xmlns=\"http:\/\/xmlns.jcp.org\/xml\/ns\/javaee\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" xsi:schemaLocation=\"http:\/\/xmlns.jcp.org\/xml\/ns\/javaee http:\/\/xmlns.jcp.org\/xml\/ns\/javaee\/web-app_3_1.xsd\" \/>\n\n> Os arquivos que ficam dentro de WEB-INF n\u00e3o \u00e9 poss\u00edvel acessar pela rede.\n\nPronto, projeto configurado.\n\n\u00a0\n\n\n## Criando e acessando uma p\u00e1gina HTML\n\nAgora que nosso projeto est\u00e1 configurado, vamos criar nossa primeira p\u00e1gina, pra isso, basta criarmos uma p\u00e1gina html qualquer, dentro da pasta webapp, pra concluir nosso tutorial, crie uma p\u00e1gina com nome index.html e utilize o HTML abaixo:\n\n   <meta charset=\"UTF-8\"> <title>Insert title here<\/title>   <h1>Ol\u00e1 mundo<\/h1>  \n\nFeito isso, basta adicionarmos o projeto dentro do **tomcat** e iniciar o mesmo. Ap\u00f3s a inicializa\u00e7\u00e3o do **tomcat**, acesse nossa pagina utilizando o link http:\/\/localhost:8080\/website\/ e nossa linda p\u00e1gina ser\u00e1 carregada:\n\n<div class=\"wp-caption aligncenter\" id=\"attachment_404\" style=\"width: 310px\">[![P\u00e1gina html](http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/h_162,w_300\/v1454457560\/pagina-html_jfcria.png)](https:\/\/wordpress-cezzao.rhcloud.com\/wp-content\/uploads\/2014\/08\/pagina-html.png)P\u00e1gina html\n\n<\/div>\u00c9 isso ae, nosso projeto est\u00e1 OK, agora \u00e9 por sua conta.\n\nAt\u00e9 mais.\n\n\n","html":"<p>Ol\u00e1s, hoje vamos ver como criar um projeto java web utilizando <a title=\"Como instalar o Maven no Windows\" href=\"https:\/\/cezarcruz.com.br\/2014\/07\/como-instalar-o-maven-windows\/\">Maven <\/a>e Eclipse JEE\/Tomcat.<\/p>\n<p><!--more--><\/p>\n<p>Pra esse tutorial, vamos considerar que o <strong>Maven<\/strong>, <strong>Eclipse JEE<\/strong> (utilizando java 1.8) e o <strong>tomcat<\/strong> est\u00e3o configurados.<\/p>\n<h2>Criando o projeto<\/h2>\n<p>O primeiro passo \u00e9 criar um projeto no Eclipse:<\/p>\n<p>File -&gt; New -&gt; Maven Project<\/p>\n<div id=\"attachment_398\" style=\"width: 310px\" class=\"wp-caption aligncenter\"><a href=\"https:\/\/wordpress-cezzao.rhcloud.com\/wp-content\/uploads\/2014\/08\/maven-new-project.png\"><img class=\"wp-image-398 size-medium\" src=\"http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/h_272,w_300\/v1454457566\/maven-new-project_chg3gr.png\" alt=\"Novo projeto Maven\" width=\"300\" height=\"271\" \/><\/a><p class=\"wp-caption-text\">Novo projeto Maven<\/p><\/div>\n<p>Nessa tele devemos selecionar a op\u00e7\u00e3o <strong>Create a simple project(skip archetype selection), <\/strong>conforme a figura, em seguida clicar em next.<\/p>\n<div id=\"attachment_399\" style=\"width: 310px\" class=\"wp-caption aligncenter\"><a href=\"https:\/\/wordpress-cezzao.rhcloud.com\/wp-content\/uploads\/2014\/08\/maven-new-project-description.png\"><img class=\"wp-image-399 size-medium\" src=\"http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/h_272,w_300\/v1454457564\/maven-new-project-description_ui33fj.png\" alt=\"Novo projeto Maven - Descri\u00e7\u00e3o\" width=\"300\" height=\"271\" \/><\/a><p class=\"wp-caption-text\">Novo projeto Maven &#8211; Descri\u00e7\u00e3o<\/p><\/div>\n<p>Nessa tela temos as op\u00e7\u00f5es para identificar nosso projeto, devemos preencher as seguintes op\u00e7\u00f5es:<\/p>\n<ul>\n<li><code>Group ID <\/code>(um identificador da empresa\/grupo ao qual o projeto pertence. Geralmente o nome do site da empresa\/grupo ao contr\u00e1rio) : <strong>br.com.cezarcruz<\/strong><\/li>\n<li>Artifact ID (nome do projeto): <strong>website<\/strong><\/li>\n<li>Packaging (como o projeto ser\u00e1 empacotado, ex: jar, war, ear): <strong>war<\/strong><\/li>\n<\/ul>\n<blockquote><p>Pra conhecer um pouco mais acesse o link: <a href=\"http:\/\/maven.apache.org\/guides\/mini\/guide-naming-conventions.html\">http:\/\/maven.apache.org\/guides\/mini\/guide-naming-conventions.html<\/a><\/p><\/blockquote>\n<p>Depois de preencher os dados, clique em finish.<\/p>\n<p>Depois disso nosso projeto ser\u00e1 criado com a seguinte estrutura:<\/p>\n<div id=\"attachment_400\" style=\"width: 240px\" class=\"wp-caption aligncenter\"><a href=\"https:\/\/wordpress-cezzao.rhcloud.com\/wp-content\/uploads\/2014\/08\/projeto-maven-estrutura.png\"><img class=\"wp-image-400 size-medium\" src=\"http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/h_300,w_230\/v1454457563\/projeto-maven-estrutura_sr3pff.png\" alt=\"Estrutura de um projeto Maven\" width=\"230\" height=\"300\" \/><\/a><p class=\"wp-caption-text\">Estrutura de um projeto Maven<\/p><\/div>\n<p>De cima pra baixo temo:<\/p>\n<ul>\n<li>Java Resources: \u00e9 nessa pasta onde deve ficar o c\u00f3digo java de nossa aplica\u00e7\u00e3o\/site, ela usa uma estrutura pr\u00f3pria para o <strong>Maven<\/strong>. A pasta \u00e9 dividia em sub diret\u00f3rio:\n<ul>\n<li>src\/main\/java: onde fica os packages e as classes java;<\/li>\n<li>src\/main\/resources: fica os arquivos de properties (ex: arquivos res, persistence.xml, configura\u00e7\u00e3o de logs);<\/li>\n<li>src\/test\/java: aqui onde fica os arquivos de teste unit\u00e1rios;<\/li>\n<li>src\/test\/resources: arquivos de propertires que s\u00e3o usado em <strong>tempo de testes<\/strong>.<\/li>\n<\/ul>\n<\/li>\n<li>src\/main: nessa pasta ficam uma c\u00f3pia dos arquivos do src\/main\/java, mas exibidas como elas s\u00e3o exibidas na estrutura de pastas;\n<ul>\n<li>webapp: essa \u00e9 a pasta onde iram ficar os arquivos html\/jsp\/xhtml;<\/li>\n<\/ul>\n<\/li>\n<li>pom.xml: pra um projeto <strong>maven<\/strong>, esse \u00e9 o arquivo onde ficam todas as configura\u00e7\u00f5es pertinente a gera\u00e7\u00e3o de build, testes, jars de terceiros, etc;<\/li>\n<\/ul>\n<p>&nbsp;<\/p>\n<h2>Ajustando configura\u00e7\u00f5es<\/h2>\n<p>Depois que nosso projeto foi criado, precisamos fazer alguns ajustes para que ele rode adequadamente no <strong>Eclipse<\/strong>. Vamos come\u00e7ar pelo<strong> pom.xml,<\/strong> a vers\u00e3o gerada pelo Eclipse \u00e9 a seguinte:<\/p>\n<pre class=\"lang:xhtml decode:true \">&lt;project xmlns=\"http:\/\/maven.apache.org\/POM\/4.0.0\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" xsi:schemaLocation=\"http:\/\/maven.apache.org\/POM\/4.0.0 http:\/\/maven.apache.org\/xsd\/maven-4.0.0.xsd\"&gt;\r\n  &lt;modelVersion&gt;4.0.0&lt;\/modelVersion&gt;\r\n  &lt;groupId&gt;br.com.cezarcruz&lt;\/groupId&gt;\r\n  &lt;artifactId&gt;website&lt;\/artifactId&gt;\r\n  &lt;version&gt;0.0.1-SNAPSHOT&lt;\/version&gt;\r\n  &lt;packaging&gt;war&lt;\/packaging&gt;\r\n&lt;\/project&gt;<\/pre>\n<p>Nele devemos adicionar uma configura\u00e7\u00e3o para que o <strong>maven\/eclipse<\/strong> saiba qual a vers\u00e3o do <strong>java<\/strong> ele deve utilizar no projeto:<\/p>\n<pre class=\"lang:xhtml decode:true \">&lt;project xmlns=\"http:\/\/maven.apache.org\/POM\/4.0.0\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\"\r\n\txsi:schemaLocation=\"http:\/\/maven.apache.org\/POM\/4.0.0 http:\/\/maven.apache.org\/xsd\/maven-4.0.0.xsd\"&gt;\r\n\t&lt;modelVersion&gt;4.0.0&lt;\/modelVersion&gt;\r\n\t&lt;groupId&gt;br.com.cezarcruz&lt;\/groupId&gt;\r\n\t&lt;artifactId&gt;website&lt;\/artifactId&gt;\r\n\t&lt;version&gt;0.0.1-SNAPSHOT&lt;\/version&gt;\r\n\t&lt;packaging&gt;war&lt;\/packaging&gt;\r\n\t&lt;build&gt;\r\n\t\t&lt;finalName&gt;website&lt;\/finalName&gt;\r\n\t\t&lt;plugins&gt;\r\n\t\t\t&lt;plugin&gt;\r\n\t\t\t\t&lt;groupId&gt;org.apache.maven.plugins&lt;\/groupId&gt;\r\n\t\t\t\t&lt;artifactId&gt;maven-compiler-plugin&lt;\/artifactId&gt;\r\n\t\t\t\t&lt;version&gt;3.1&lt;\/version&gt;\r\n\t\t\t\t&lt;configuration&gt;\r\n\t\t\t\t\t&lt;source&gt;1.8&lt;\/source&gt;\r\n\t\t\t\t\t&lt;target&gt;1.8&lt;\/target&gt;\r\n\t\t\t\t&lt;\/configuration&gt;\r\n\t\t\t&lt;\/plugin&gt;\r\n\t\t&lt;\/plugins&gt;\r\n\t&lt;\/build&gt;\r\n&lt;\/project&gt;<\/pre>\n<p>Explicando:<\/p>\n<p>Dentro do <strong>build<\/strong>, definimos o <strong>finalName<\/strong> (o nome final do pacote, ex: website.war), em seguida os <strong>plugins<\/strong>, aqui destacamos apenas as marca\u00e7\u00f5es <strong>source<\/strong> dentro de <strong>configuration<\/strong>, \u00e9 nela que definimos a vers\u00e3o do java utilizado no projeto, nesse caso a vers\u00e3o 1.8.<\/p>\n<p>Depois disso, temos que atualizar o projeto:<\/p>\n<p>Bot\u00e3o direito em cima do nome do projeto: <strong>Maven<\/strong> -&gt; Update Project.<\/p>\n<p>Feito isso, nosso projeto j\u00e1 est\u00e1 quase pronto, falta apenas criar o arquivo web.xml:<\/p>\n<p>Clicar com bot\u00e3o direito em webapp: New -&gt; Other.<\/p>\n<p>Escolha a op\u00e7\u00e3o pra criar um arquivo xml. Clique em next:<\/p>\n<div id=\"attachment_403\" style=\"width: 270px\" class=\"wp-caption aligncenter\"><a href=\"https:\/\/wordpress-cezzao.rhcloud.com\/wp-content\/uploads\/2014\/08\/criando-arquivo-web-xml1.png\"><img class=\"wp-image-403 size-medium\" src=\"http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/h_300,w_260\/v1454457561\/criando-arquivo-web-xml1_sjwkfw.png\" alt=\"\" width=\"260\" height=\"300\" \/><\/a><p class=\"wp-caption-text\">Criando arquivo xml<\/p><\/div>\n<p>Aqui, devemos reparar em duas coisas:<\/p>\n<ul>\n<li>O local do arquivo: foi acrescentado a subpasta<strong> \/WEB-INF<\/strong>;<\/li>\n<li>O nome do arquivo tem que ser <strong>web.xml<\/strong>;<\/li>\n<\/ul>\n<p>Feito isso, clique em finish, ser\u00e1 criando um arquivo xml vazio, apenas com o cabe\u00e7alho, devemos apagar e colocar o conte\u00fado abaixo:<\/p>\n<pre class=\"lang:default decode:true\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\r\n&lt;web-app version=\"3.1\" xmlns=\"http:\/\/xmlns.jcp.org\/xml\/ns\/javaee\"\r\n\txmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\"\r\n\txsi:schemaLocation=\"http:\/\/xmlns.jcp.org\/xml\/ns\/javaee http:\/\/xmlns.jcp.org\/xml\/ns\/javaee\/web-app_3_1.xsd\" \/&gt;\r\n<\/pre>\n<blockquote><p>Os arquivos que ficam dentro de WEB-INF n\u00e3o \u00e9 poss\u00edvel acessar pela rede.<\/p><\/blockquote>\n<p>Pronto, projeto configurado.<\/p>\n<p>&nbsp;<\/p>\n<h2>Criando e acessando uma p\u00e1gina HTML<\/h2>\n<p>Agora que nosso projeto est\u00e1 configurado, vamos criar nossa primeira p\u00e1gina, pra isso, basta criarmos uma p\u00e1gina html qualquer, dentro da pasta webapp, pra concluir nosso tutorial, crie uma p\u00e1gina com nome index.html e utilize o HTML abaixo:<\/p>\n<pre class=\"lang:php decode:true\">&lt;!DOCTYPE html&gt;\r\n&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;meta charset=\"UTF-8\"&gt;\r\n&lt;title&gt;Insert title here&lt;\/title&gt;\r\n&lt;\/head&gt;\r\n&lt;body&gt;\r\n\t&lt;h1&gt;Ol\u00e1 mundo&lt;\/h1&gt;\r\n&lt;\/body&gt;\r\n&lt;\/html&gt;<\/pre>\n<p>Feito isso, basta adicionarmos o projeto dentro do <strong>tomcat<\/strong> e iniciar o mesmo. Ap\u00f3s a inicializa\u00e7\u00e3o do <strong>tomcat<\/strong>, acesse nossa pagina utilizando o link http:\/\/localhost:8080\/website\/ e nossa linda p\u00e1gina ser\u00e1 carregada:<\/p>\n<div id=\"attachment_404\" style=\"width: 310px\" class=\"wp-caption aligncenter\"><a href=\"https:\/\/wordpress-cezzao.rhcloud.com\/wp-content\/uploads\/2014\/08\/pagina-html.png\"><img class=\"wp-image-404 size-medium\" src=\"http:\/\/res.cloudinary.com\/cezarcruz-com-br\/image\/upload\/h_162,w_300\/v1454457560\/pagina-html_jfcria.png\" alt=\"P\u00e1gina html\" width=\"300\" height=\"162\" \/><\/a><p class=\"wp-caption-text\">P\u00e1gina html<\/p><\/div>\n<p>\u00c9 isso ae, nosso projeto est\u00e1 OK, agora \u00e9 por sua conta.<\/p>\n<p>At\u00e9 mais.<\/p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Sun, 31 Aug 2014 13:11:10 +0000","created_by":1,"updated_at":"Fri, 06 May 2016 17:03:23 +0000","updated_by":1,"published_at":"Sun, 31 Aug 2014 13:11:10 +0000","published_by":1},{"id":409,"title":"Java - Como navegar por ENUMs","slug":"java-como-navegar-por-enums","markdown":"\nOl\u00e1s,  \n hoje uma dica r\u00e1pida pra navegarmos por uma classe java que contenha **enums**:\n\nConsiderando nosso **enum**:\n\npublic enum Cidades { CAMPINAS, HORTOLANDIA, SUMARE, VALINHOS }\n\nPra navegamos por ele basta fazer o seguinte:\n\nfor (Cidades c : Cidages.values()) { System.out.println(c.toString()); }\n\nUtilizando o m\u00e9todo **values**, obtemos um list do tipo do nosso **enum** com todos os **enum**, da\u00ed pra frente \u00e9 s\u00f3 divers\u00e3o.\n\nAbra\u00e7os!\n\n\n","html":"<p>Ol\u00e1s,<br \/>\nhoje uma dica r\u00e1pida pra navegarmos por uma classe java que contenha <strong>enums<\/strong>:<\/p>\n<p>Considerando nosso <strong>enum<\/strong>:<\/p>\n<pre class=\"lang:java decode:true\">public enum Cidades {\n    CAMPINAS, HORTOLANDIA, SUMARE, VALINHOS\n}<\/pre>\n<p>Pra navegamos por ele basta fazer o seguinte:<\/p>\n<pre class=\"lang:default decode:true\">for (Cidades c : Cidages.values()) {\n    System.out.println(c.toString());\n}<\/pre>\n<p>Utilizando o m\u00e9todo <strong>values<\/strong>, obtemos um list do tipo do nosso <strong>enum<\/strong> com todos os <strong>enum<\/strong>, da\u00ed pra frente \u00e9 s\u00f3 divers\u00e3o.<\/p>\n<p>Abra\u00e7os!<\/p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Thu, 11 Sep 2014 15:37:27 +0000","created_by":1,"updated_at":"Thu, 11 Sep 2014 15:37:27 +0000","updated_by":1,"published_at":"Thu, 11 Sep 2014 15:37:27 +0000","published_by":1},{"id":425,"title":"Como salvar autentica\u00e7\u00e3o no reposit\u00f3rio local usando GIT","slug":"como-salvar-autenticacao-no-repositorio-local-usando-git","markdown":"\nUma dica bem curtinha, por\u00e9m \u00fatil:  \n Como configurar o git para n\u00e3o pedir senha ao baixar ou subir dados no reposit\u00f3rio remoto, para isto, basta entrar no seu reposit\u00f3rio local e digitar o comando abaixo:\n\ngit config credential.helper cache\n\nPra salvar apenas por um tempo determinado, utilizar:\n\ngit config credential.helper 'cache --timeout=60000'\n\n=D\n\n\n","html":"<p>Uma dica bem curtinha, por\u00e9m \u00fatil:<br \/>\nComo configurar o git para n\u00e3o pedir senha ao baixar ou subir dados no reposit\u00f3rio remoto, para isto, basta entrar no seu reposit\u00f3rio local e digitar o comando abaixo:<\/p>\n<pre class=\"line-pre \">git config credential.helper cache<\/pre>\n<p>Pra salvar apenas por um tempo determinado, utilizar:<\/p>\n<pre class=\"lang:default decode:true\">git config credential.helper 'cache --timeout=60000'<\/pre>\n<p>=D<\/p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Thu, 06 Nov 2014 21:49:38 +0000","created_by":1,"updated_at":"Mon, 10 Nov 2014 09:43:39 +0000","updated_by":1,"published_at":"Thu, 06 Nov 2014 21:49:38 +0000","published_by":1},{"id":427,"title":"Curtinhas: Como exibir o nome do usu\u00e1rio logado em um template django","slug":"curtinhas-como-exibir-o-nome-do-usuario-logado-em-um-template-django","markdown":"\nOl\u00e1, uma dica curtinha hoje:\n\nComo exibir o nome do usu\u00e1rio logado em um sistema\/site utilizando Django 1.7+.\n\nBasta colocar no template (p\u00e1gina html) a linha abaixo para exibir o nome completo:\n\n{{ user.get_full_name }}\n\nPara exibir o username:\n\n{{ user.get_username }}\n\nPara mais informa\u00e7\u00f5es acesse:\n\n[https:\/\/docs.djangoproject.com\/en\/1.7\/topics\/auth\/](https:\/\/docs.djangoproject.com\/en\/1.7\/topics\/auth\/)\n\nAt\u00e9.\n\n\n","html":"<p>Ol\u00e1, uma dica curtinha hoje:<\/p>\n<p>Como exibir o nome do usu\u00e1rio logado em um sistema\/site utilizando Django 1.7+.<\/p>\n<p><!--more--><\/p>\n<p>Basta colocar no template (p\u00e1gina html) a linha abaixo para exibir o nome completo:<\/p>\n<pre class=\"lang:default decode:true\">{{ user.get_full_name }}<\/pre>\n<p>Para exibir o username:<\/p>\n<pre class=\"lang:default decode:true \">{{ user.get_username }}<\/pre>\n<p>Para mais informa\u00e7\u00f5es acesse:<\/p>\n<p><a href=\"https:\/\/docs.djangoproject.com\/en\/1.7\/topics\/auth\/\">https:\/\/docs.djangoproject.com\/en\/1.7\/topics\/auth\/<\/a><\/p>\n<p>At\u00e9.<\/p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Mon, 10 Nov 2014 09:42:29 +0000","created_by":1,"updated_at":"Fri, 06 May 2016 17:05:31 +0000","updated_by":1,"published_at":"Mon, 10 Nov 2014 09:42:29 +0000","published_by":1},{"id":431,"title":"Como navegar por um field manytomany em um template Django","slug":"como-navegar-por-um-field-manytomany-em-um-template-django","markdown":"\nOl\u00e1s,\u00a0 hoje mais uma dica curtinha: como navegar por um campo **manytomany** em um template **Django**.\n\nBasta entendermos que o campo **manytomany** vem como um list, ent\u00e3o a navega\u00e7\u00e3o fica simples, veja:\n\n{% for item in list_pedidos_abertos %} {% for serv in item.servicos.all %} <p>{{ serv.nome }}<\/p> {% endfor %} {% endfor %}\n\nOnde *list_pedidos_abertos* \u00e9 uma lista de pedidos (pode ser qualquer coisa), e nessa lista de pedidos temos *item.servicos*, que \u00e9 uma lista com os servi\u00e7os associados a esse pedido, ent\u00e3o, para implementar um la\u00e7o, basta utilizar o *item.servicos.all* e estar\u00e1 na forma que estamos acostumados a fazer.\n\n\u00c9 isso ai, at\u00e9!!\n\n=D\n\n\n","html":"<p>Ol\u00e1s,\u00a0 hoje mais uma dica curtinha: como navegar por um campo <strong>manytomany<\/strong> em um template <strong>Django<\/strong>.<\/p>\n<p><!--more--><\/p>\n<p>Basta entendermos que o campo <strong>manytomany<\/strong> vem como um list, ent\u00e3o a navega\u00e7\u00e3o fica simples, veja:<\/p>\n<pre class=\"lang:default decode:true\">{% for item in list_pedidos_abertos %}\r\n   {% for serv in item.servicos.all %}\r\n\t   &lt;p&gt;{{ serv.nome }}&lt;\/p&gt; \r\n   {% endfor %}\r\n{% endfor %}<\/pre>\n<p>Onde <em>list_pedidos_abertos<\/em> \u00e9 uma lista de pedidos (pode ser qualquer coisa), e nessa lista de pedidos temos <em>item.servicos<\/em>, que \u00e9 uma lista com os servi\u00e7os associados a esse pedido, ent\u00e3o, para implementar um la\u00e7o, basta utilizar o <em>item.servicos.all<\/em> e estar\u00e1 na forma que estamos acostumados a fazer.<\/p>\n<p>\u00c9 isso ai, at\u00e9!!<\/p>\n<p>=D<\/p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Tue, 11 Nov 2014 11:58:36 +0000","created_by":1,"updated_at":"Fri, 06 May 2016 17:05:39 +0000","updated_by":1,"published_at":"Tue, 11 Nov 2014 11:58:36 +0000","published_by":1},{"id":434,"title":"Hello Angular.js","slug":"hello-angular-js","markdown":"\nOl\u00e1, hoje vou escrever um post bem b\u00e1sico de como utilizar **Angular.JS** no seu pr\u00f3ximo projeto.\n\nPra quem n\u00e3o sabe, o Angular.JS \u00e9 um framework javascript MV*(C), feito pelo google para basicamente \u201cdeixar seu **html** din\u00e2mico\u201d, ou seja, com algumas tags no seu **HTML** ser\u00e1 poss\u00edvel fazer atualiza\u00e7\u00e3o de dados, por exemplo.\n\nChega de papo, para mais informa\u00e7\u00f5es nerds, acesse o [site do agunlar.](https:\/\/angularjs.org\/ \"https:\/\/angularjs.org\/\")\n\nBom, o primeiro passo \u00e9 adicionar o **javascript** na nossa p\u00e1gina HTML:\n\n<script src=\"https:\/\/ajax.googleapis.com\/ajax\/libs\/angularjs\/1.3.7\/angular.js\"><\/script>\n\n> \u00a0Vamos usar o CDN deles, fica a seu crit\u00e9rio usar remoto ou local.\n\nDepois de adicionarmos isso no header do nosso **HTML**, o pr\u00f3ximo passo \u00e9 adicionar a tag ng-app no elemento body, ele ficara assim:\n\n<html lang=\"pt-BR\" ng-app>\n\nFeito isso, seu **HTML** dever\u00e1 estar assim:\n\n <html lang=\"pt-BR\" ng-app>  <meta http-equiv=\"Content-Type\" content=\"text\/html; charset=utf-8\" \/> <title>Titulo<\/title> <script src=\"https:\/\/ajax.googleapis.com\/ajax\/libs\/angularjs\/1.3.7\/angular.js\"><\/script>   1 + 1 = {{ 1 + 1 }}  \n\n> \u00a0Adicionei o c\u00f3digo 1 + 1 = {{ 1 + 1 }} apenas pra verificar se est\u00e1 ok, caso esteja ok, a saida do seu **HTML** dever\u00e1 ser 1 + 1 = 2. Simples assim.\n\nAssim, conclu\u00edmos que tudo que tiver dentro de {{ }} ser\u00e1 processado pelo **Angular**. Agora vamos a um exemplo mais legal.\n\nTroque o conte\u00fado do seu body pelo c\u00f3digo abaixo:\n\n<input type=\"text\" ng-model=\"valor\"\/> <p>{{valor}}<\/p>\n\nNele temos o conte\u00fado do <p> sendo atualizado conforme \u00e9 digitado o no input. O grande segredo est\u00e1 no ng-model e no [Two-way Data Binding](https:\/\/docs.angularjs.org\/tutorial\/step_04) do Angular.\n\nPor ultimo um exemplo que mostra uma pontinha do potencial do **Angular.JS**, veja s\u00f3:\n\n<html lang=\"pt-BR\" ng-app=\"meuApp\"> <script> var meuApp = angular.module('meuApp',[]); meuApp.controller('HomeCtrl', ['$scope', function($scope) { $scope.valor = 'Oi Blog!'; }]); <\/script> <div ng-controller=\"HomeCtrl\"> <input type=\"text\" ng-model=\"valor\"\/> <p>{{valor}}<\/p> <\/div>\n\nPodemos ver as seguintes altera\u00e7\u00f5es:\n\n- Alteramos o ng-app no elemento HTML para o valor meuApp;\n- Alteramos o JavaScript, nele criamos o \u201cmeuApp\u201d, que eh um module do Angular;\n- Em seguida, criamos o controller \u201cHomeCtrl\u201d e setamos o valor da vari\u00e1vel \u201cValor\u201d;\n- Criamos uma nova div com o valor de ng-controller setado para \u201cHomeCtrl\u201d, isso significa que tudo que est\u00e1 dentro da div, refere apenas ao que est\u00e1 na cria\u00e7\u00e3o do controller no javascript.\n\n> Aten\u00e7\u00e3o ao $scope, ele \u00e9 o cara que devemos setar o valor do ng-model.\n\nNesse ultimo exemplo quero apenas mostrar que o Angular permite alterar o valor de um span, por exemplo, de dentro do javascript, e como essa altera\u00e7\u00e3o ocorre em tempo real, voc\u00ea pode utilizar, por exemplo, um webservice REST para buscar os dados e atribuir os valores tudo em tempo real e sem complica\u00e7\u00f5es.\n\nBom, acho que \u00e9 isso, esse ser\u00e1 o primeiro post de **Angular**, logo vir\u00e1 mais alguns. Obrigado e bons estudos!!\n\nPS: Feliz Natal e um 2015 com muito amor!!\n\n\n","html":"<p>Ol\u00e1, hoje vou escrever um post bem b\u00e1sico de como utilizar <strong>Angular.JS<\/strong> no seu pr\u00f3ximo projeto.<\/p>\n<p><!--more--><\/p>\n<p>Pra quem n\u00e3o sabe, o Angular.JS \u00e9 um framework javascript MV*(C), feito pelo google para basicamente &#8220;deixar seu <strong>html<\/strong> din\u00e2mico&#8221;, ou seja, com algumas tags no seu <strong>HTML<\/strong> ser\u00e1 poss\u00edvel fazer atualiza\u00e7\u00e3o de dados, por exemplo.<\/p>\n<p>Chega de papo, para mais informa\u00e7\u00f5es nerds, acesse o <a title=\"https:\/\/angularjs.org\/\" href=\"https:\/\/angularjs.org\/\">site do agunlar.<\/a><\/p>\n<p>Bom, o primeiro passo \u00e9 adicionar o <strong>javascript<\/strong> na nossa p\u00e1gina HTML:<\/p>\n<pre class=\"lang:js decode:true \">&lt;script src=\"https:\/\/ajax.googleapis.com\/ajax\/libs\/angularjs\/1.3.7\/angular.js\"&gt;&lt;\/script&gt;<\/pre>\n<blockquote><p>\u00a0Vamos usar o CDN deles, fica a seu crit\u00e9rio usar remoto ou local.<\/p><\/blockquote>\n<p>Depois de adicionarmos isso no header do nosso <strong>HTML<\/strong>, o pr\u00f3ximo passo \u00e9 adicionar a tag ng-app no elemento body, ele ficara assim:<\/p>\n<pre class=\"lang:default decode:true \">&lt;html lang=\"pt-BR\" ng-app&gt;<\/pre>\n<p>Feito isso, seu <strong>HTML<\/strong> dever\u00e1 estar assim:<\/p>\n<pre class=\"lang:default decode:true\">&lt;!DOCTYPE html&gt;\r\n&lt;html lang=\"pt-BR\" ng-app&gt;\r\n&lt;head&gt;\r\n    &lt;meta http-equiv=\"Content-Type\" content=\"text\/html; charset=utf-8\" \/&gt;\r\n    &lt;title&gt;Titulo&lt;\/title&gt;\r\n    &lt;script src=\"https:\/\/ajax.googleapis.com\/ajax\/libs\/angularjs\/1.3.7\/angular.js\"&gt;&lt;\/script&gt;\r\n&lt;\/head&gt;\r\n&lt;body&gt;\r\n    1 + 1 = {{ 1 + 1 }}\r\n&lt;\/body&gt;\r\n&lt;\/html&gt;<\/pre>\n<blockquote><p>\u00a0Adicionei o c\u00f3digo 1 + 1 = {{ 1 + 1 }} apenas pra verificar se est\u00e1 ok, caso esteja ok, a saida do seu <strong>HTML<\/strong> dever\u00e1 ser 1 + 1 = 2. Simples assim.<\/p><\/blockquote>\n<p>Assim, conclu\u00edmos que tudo que tiver dentro de {{ }} ser\u00e1 processado pelo <strong>Angular<\/strong>. Agora vamos a um exemplo mais legal.<\/p>\n<p>Troque o conte\u00fado do seu body pelo c\u00f3digo abaixo:<\/p>\n<pre class=\"lang:default decode:true\">&lt;input type=\"text\" ng-model=\"valor\"\/&gt;\r\n&lt;p&gt;{{valor}}&lt;\/p&gt;<\/pre>\n<p>Nele temos o conte\u00fado do &lt;p&gt; sendo atualizado conforme \u00e9 digitado o no input. O grande segredo est\u00e1 no ng-model e no <a class=\"ng-binding\" tabindex=\"2\" href=\"https:\/\/docs.angularjs.org\/tutorial\/step_04\">Two-way Data Binding<\/a> do Angular.<\/p>\n<p>Por ultimo um exemplo que mostra uma pontinha do potencial do <strong>Angular.JS<\/strong>, veja s\u00f3:<\/p>\n<pre class=\"lang:default decode:true \">&lt;html lang=\"pt-BR\" ng-app=\"meuApp\"&gt;\r\n\r\n&lt;script&gt;\r\n        var meuApp = angular.module('meuApp',[]);\r\n        meuApp.controller('HomeCtrl', ['$scope', function($scope) {\r\n              $scope.valor = 'Oi Blog!';\r\n        }]);\r\n&lt;\/script&gt;\r\n\r\n&lt;div ng-controller=\"HomeCtrl\"&gt;\r\n        &lt;input type=\"text\" ng-model=\"valor\"\/&gt;\r\n        &lt;p&gt;{{valor}}&lt;\/p&gt;\r\n&lt;\/div&gt;<\/pre>\n<p>Podemos ver as seguintes altera\u00e7\u00f5es:<\/p>\n<ul>\n<li>Alteramos o ng-app no elemento HTML para o valor meuApp;<\/li>\n<li>Alteramos o JavaScript, nele criamos o &#8220;meuApp&#8221;, que eh um module do Angular;<\/li>\n<li>Em seguida, criamos o controller &#8220;HomeCtrl&#8221; e setamos o valor da vari\u00e1vel &#8220;Valor&#8221;;<\/li>\n<li>Criamos uma nova div com o valor de ng-controller setado para &#8220;HomeCtrl&#8221;, isso significa que tudo que est\u00e1 dentro da div, refere apenas ao que est\u00e1 na cria\u00e7\u00e3o do controller no javascript.<\/li>\n<\/ul>\n<blockquote><p>Aten\u00e7\u00e3o ao $scope, ele \u00e9 o cara que devemos setar o valor do ng-model.<\/p><\/blockquote>\n<p>Nesse ultimo exemplo quero apenas mostrar que o Angular permite alterar o valor de um span, por exemplo, de dentro do javascript, e como essa altera\u00e7\u00e3o ocorre em tempo real, voc\u00ea pode utilizar, por exemplo, um webservice REST para buscar os dados e atribuir os valores tudo em tempo real e sem complica\u00e7\u00f5es.<\/p>\n<p>Bom, acho que \u00e9 isso, esse ser\u00e1 o primeiro post de <strong>Angular<\/strong>, logo vir\u00e1 mais alguns. Obrigado e bons estudos!!<\/p>\n<p>PS: Feliz Natal e um 2015 com muito amor!!<\/p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Thu, 18 Dec 2014 22:04:33 +0000","created_by":1,"updated_at":"Fri, 06 May 2016 17:04:40 +0000","updated_by":1,"published_at":"Thu, 18 Dec 2014 22:04:33 +0000","published_by":1},{"id":453,"title":"Criando um controller com Angular.JS utilizando padr\u00f5es","slug":"criando-um-controller-com-angular-js-utilizando-padroes","markdown":"\nOl<span class=\"st\">\u00e1s<\/span>, hoje vamos ver como criar um Controller no Angular.JS utilizando [styleguide](https:\/\/github.com\/johnpapa\/angular-styleguide) criado pelo John Papa.\n\nVamos l<span class=\"st\">\u00e1<\/span>, o primeiro passo \u00e9 iniciarmos o arquivo utilizando o Immediately Invoked Function Expression (IIFE), ele garante que as vari\u00e1veis fique apenas no escopo utilizado cuidando para que n\u00e3o aconte\u00e7a colis\u00f5es de vari\u00e1veis. Para isso colocamos o c\u00f3digo abaixo:\n\n(function(){ \/\/conte\u00fado aqui })();\n\nFeito isso, criamos o controller, efetivamente:\n\nangular.module('app.seriado').controller('SeriadosCtrl', SeriadosCtrl);\n\nNa \u00fanica linha acima, setamos o controller SeriadosCtrl no angular module com a function SeriadosCtrl, o c\u00f3digo ficar<span class=\"st\">\u00e1<\/span> mais completo, com o exemplo abaixo:\n\n(function() { \/** * Controller do seriados. *\/ angular.module('app.seriado').controller('SeriadosCtrl', SeriadosCtrl); SeriadosCtrl.$inject = ['$location', 'SeriadoService','$modal']; function SeriadosCtrl($location, SeriadoService, $modal) { } })();\n\nNas linhas acima temos o complemento da cria\u00e7\u00e3o de um controller e ainda utilizamos a inje\u00e7\u00e3o de depend\u00eancias no controller, pra isso utilizamos o <function_name>.$inject = <depend\u00eancias>, lembrando que a ordem das depend\u00eancias e a assinatura da function (SeriadosCtrl) devem ser as mesmas.\n\nN\u00e3o sei dizer quanto a desempenho, mas quanto a legibilidade de c\u00f3digo, fica muito melhor utilizando o styleguide.\n\nBom, \u00e9 isso ai, espero que possa ajudar. At\u00e9 o pr\u00f3ximo tuto de Angular.JS.\n\nAbra\u00e7os.\n\n\n","html":"<p>Ol<span class=\"st\">\u00e1s<\/span>, hoje vamos ver como criar um Controller no Angular.JS utilizando <a href=\"https:\/\/github.com\/johnpapa\/angular-styleguide\">styleguide<\/a> criado pelo John Papa.<\/p>\n<p><!--more--><\/p>\n<p>Vamos l<span class=\"st\">\u00e1<\/span>, o primeiro passo \u00e9 iniciarmos o arquivo utilizando o Immediately Invoked Function Expression (IIFE), ele garante que as vari\u00e1veis fique apenas no escopo utilizado cuidando para que n\u00e3o aconte\u00e7a colis\u00f5es de vari\u00e1veis. Para isso colocamos o c\u00f3digo abaixo:<\/p>\n<pre class=\"lang:js decode:true \">(function(){\r\n    \/\/conte\u00fado aqui\r\n})();<\/pre>\n<p>Feito isso, criamos o controller, efetivamente:<\/p>\n<pre class=\"lang:js decode:true \">angular.module('app.seriado').controller('SeriadosCtrl', SeriadosCtrl);<\/pre>\n<p>Na \u00fanica linha acima, setamos o controller SeriadosCtrl no angular module com a function SeriadosCtrl, o c\u00f3digo ficar<span class=\"st\">\u00e1<\/span> mais completo, com o exemplo abaixo:<\/p>\n<pre class=\"lang:default decode:true\">(function() {\r\n\t\/**\r\n\t * Controller do seriados.\r\n\t *\/\r\nangular.module('app.seriado').controller('SeriadosCtrl', SeriadosCtrl);\r\n\r\n\tSeriadosCtrl.$inject = ['$location', 'SeriadoService','$modal'];\r\n\r\n\tfunction SeriadosCtrl($location, SeriadoService, $modal) {\r\n\t\r\n\t}\r\n})();<\/pre>\n<p>Nas linhas acima temos o complemento da cria\u00e7\u00e3o de um controller e ainda utilizamos a inje\u00e7\u00e3o de depend\u00eancias no controller, pra isso utilizamos o &lt;function_name&gt;.$inject = &lt;depend\u00eancias&gt;, lembrando que a ordem das depend\u00eancias e a assinatura da function (SeriadosCtrl) devem ser as mesmas.<\/p>\n<p>N\u00e3o sei dizer quanto a desempenho, mas quanto a legibilidade de c\u00f3digo, fica muito melhor utilizando o styleguide.<\/p>\n<p>Bom, \u00e9 isso ai, espero que possa ajudar. At\u00e9 o pr\u00f3ximo tuto de Angular.JS.<\/p>\n<p>Abra\u00e7os.<\/p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Mon, 27 Apr 2015 23:55:37 +0000","created_by":1,"updated_at":"Fri, 06 May 2016 17:04:28 +0000","updated_by":1,"published_at":"Mon, 27 Apr 2015 23:55:37 +0000","published_by":1},{"id":457,"title":"Como utilizar o $http interceptor do Angular.JS","slug":"como-utilizar-o-http-interceptor-do-angular-js","markdown":"\nOl\u00e1s, hoje uma dica para como utilizar um $http interceptor do Angular.JS.\n\nComo o pr\u00f3prio nome j\u00e1 diz, o interceptor serve para interceptar requisi\u00e7\u00f5es http ($http.get, $http.post, etc..) request do angular. Utilizo para os casos abaixo:\n\n- Colocar um header em todas as requisi\u00e7\u00f5es que ser\u00e3o enviadas ao backend;\n- Ter um tratamento gen\u00e9rico para todas as resposta do backend (ex.: erro 404, erro 500 );\n- Iniciar e parar uma spinner de forma autom\u00e1tica a cada requisi\u00e7\u00e3o ao backend;\n\nBasicamente, precisamos criar um Factory, injetar o [$q](https:\/\/docs.angularjs.org\/api\/ng\/service\/$q), e usando conven\u00e7\u00e3o do Angular, implementar algumas functions.\n\nUma descri\u00e7\u00e3o mais detalhada pode ser encontrada [na p\u00e1gina da api $http do angular](https:\/\/docs.angularjs.org\/api\/ng\/service\/$http).\n\nNa p\u00e1gina do angular podemos ver que temos 4 tipos de interceptors (functions), s\u00e3o eles:\n\n- *request*: esse interceptor \u00e9 executado toda vez que temos um $http.get;\n- *requestError*: esse interceptor \u00e9 executado quando o \u201crequest\u201d retorna um erro ou uma \u201crejei\u00e7\u00e3o de promisse\u201d;\n- *response*: esse interceptor \u00e9 executado quando temos uma resposta para o *request*;\n- *responseError*: esse interceptor \u00e9 executado quando temos uma resposta com erro;\n\nPara o nosso exemplo, vou utilizar apenas o request e o responseError, para inserir um header na requisi\u00e7\u00e3o e tratar um erro de acesso negado, vamos l\u00e1:\n\nPrimeiro vamos criar um factory:\n\n(function(){ angular.module('app', []).factory('Interceptor', Interceptor); Interceptor.$inject = ['$q']; function Interceptor($q) { } })();\n\nCom o Interceptor criado, vamos adicionar as functions necess\u00e1rias para interceptar as requisi\u00e7\u00f5es:\n\nfunction Interceptor($q) { return { request: function(config) { config.headers['X-TOKEN'] = \"exemplo\"; return config; }, responseError: function(error) { if (error.status === 401 || error.status === 403) { \/\/faz alguma coisa. } return $q.reject(error); } }; }\n\nNo request temos uma function que recebe um valor \u201cconfig\u201d, nele temos os dados da requisi\u00e7\u00e3o, os headers, etc\u2026 No exemplo acima, adicionamos um header na requisi\u00e7\u00e3o e damos um \u201creturn\u201d com os dados alterados. Quando ele passa por esse interceptor, ele faz a altera\u00e7\u00e3o e o fluxo da requisi\u00e7\u00e3o continua normalmente.\n\nJ\u00e1 o responseError \u00e9 executado quando obtemos uma resposta com o status 40x, que representa algum tipo de erro no lado do servidor, no nosso caso, quando temos um erro 401 ou 403, eu executo alguma a\u00e7\u00e3o e uso o $q.reject para que a requisi\u00e7\u00e3o v\u00e1 para o callback de error do $http do angular.\n\nMas pra isso funcionar ainda falta um passo importante, registrar o interceptor no Angular:\n\nangular.module('app').config(['$httpProvider', Interceptor]); function Interceptor($httpProvider) { $httpProvider.interceptors.push('Interceptor'); }\n\nFeito isso, todas as requisi\u00e7\u00f5es $http ir\u00e3o passar pelo interceptor acima.\n\n\u00c9 isso ai, at\u00e9 a pr\u00f3xima.\n\n\n","html":"<p>Ol\u00e1s, hoje uma dica para como utilizar um $http interceptor do Angular.JS.<\/p>\n<p><!--more--><\/p>\n<p>Como o pr\u00f3prio nome j\u00e1 diz, o interceptor serve para interceptar requisi\u00e7\u00f5es http ($http.get, $http.post, etc..) request do angular. Utilizo para os casos abaixo:<\/p>\n<ul>\n<li>Colocar um header em todas as requisi\u00e7\u00f5es que ser\u00e3o enviadas ao backend;<\/li>\n<li>Ter um tratamento gen\u00e9rico para todas as resposta do backend (ex.: erro 404, erro 500 );<\/li>\n<li>Iniciar e parar uma spinner de forma autom\u00e1tica a cada requisi\u00e7\u00e3o ao backend;<\/li>\n<\/ul>\n<p>Basicamente, precisamos criar um Factory, injetar o <a href=\"https:\/\/docs.angularjs.org\/api\/ng\/service\/$q\">$q<\/a>, e usando conven\u00e7\u00e3o do Angular, implementar algumas functions.<\/p>\n<p>Uma descri\u00e7\u00e3o mais detalhada pode ser encontrada <a href=\"https:\/\/docs.angularjs.org\/api\/ng\/service\/$http\">na p\u00e1gina da api $http do angular<\/a>.<\/p>\n<p>Na p\u00e1gina do angular podemos ver que temos 4 tipos de interceptors (functions), s\u00e3o eles:<\/p>\n<ul>\n<li><em>request<\/em>: esse interceptor \u00e9 executado toda vez que temos um $http.get;<\/li>\n<li><em>requestError<\/em>: esse interceptor \u00e9 executado quando o &#8220;request&#8221; retorna um erro ou uma &#8220;rejei\u00e7\u00e3o de promisse&#8221;;<\/li>\n<li><em>response<\/em>: esse interceptor \u00e9 executado quando temos uma resposta para o <em>request<\/em>;<\/li>\n<li><em>responseError<\/em>: esse interceptor \u00e9 executado quando temos uma resposta com erro;<\/li>\n<\/ul>\n<p>Para o nosso exemplo, vou utilizar apenas o request e o responseError, para inserir um header na requisi\u00e7\u00e3o e tratar um erro de acesso negado, vamos l\u00e1:<\/p>\n<p>Primeiro vamos criar um factory:<\/p>\n<pre class=\"lang:js decode:true\">(function(){\r\n\tangular.module('app', []).factory('Interceptor', Interceptor);\r\n\t\r\n\tInterceptor.$inject = ['$q'];\r\n\t\r\n\tfunction Interceptor($q) {\r\n\t\t\r\n\t}\t\r\n})();<\/pre>\n<p>Com o Interceptor criado, vamos adicionar as functions necess\u00e1rias para interceptar as requisi\u00e7\u00f5es:<\/p>\n<pre class=\"lang:default decode:true\">function Interceptor($q) {\t\t\r\n\t\treturn {\r\n\t\t\trequest: function(config) {\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\tconfig.headers['X-TOKEN'] = \"exemplo\";\t\t\t\t\r\n\t\t\t\treturn config;\r\n\t\t\t},\r\n\t\t\tresponseError: function(error) {\r\n\t\t\t\tif (error.status === 401 || error.status === 403) {\r\n\t\t\t\t\t\/\/faz alguma coisa.\r\n\t\t\t\t}\r\n\t\t\t\treturn $q.reject(error);\r\n\t\t\t}\r\n\t\t};\r\n\t}<\/pre>\n<p>No request temos uma function que recebe um valor &#8220;config&#8221;, nele temos os dados da requisi\u00e7\u00e3o, os headers, etc&#8230; No exemplo acima, adicionamos um header na requisi\u00e7\u00e3o e damos um &#8220;return&#8221; com os dados alterados. Quando ele passa por esse interceptor, ele faz a altera\u00e7\u00e3o e o fluxo da requisi\u00e7\u00e3o continua normalmente.<\/p>\n<p>J\u00e1 o responseError \u00e9 executado quando obtemos uma resposta com o status 40x, que representa algum tipo de erro no lado do servidor, no nosso caso, quando temos um erro 401 ou 403, eu executo alguma a\u00e7\u00e3o e uso o $q.reject para que a requisi\u00e7\u00e3o v\u00e1 para o callback de error do $http do angular.<\/p>\n<p>Mas pra isso funcionar ainda falta um passo importante, registrar o interceptor no Angular:<\/p>\n<pre class=\"lang:default decode:true\">angular.module('app').config(['$httpProvider', Interceptor]);\r\n\t\r\nfunction Interceptor($httpProvider) {\r\n\t$httpProvider.interceptors.push('Interceptor');\t\t\r\n}<\/pre>\n<p>Feito isso, todas as requisi\u00e7\u00f5es $http ir\u00e3o passar pelo interceptor acima.<\/p>\n<p>\u00c9 isso ai, at\u00e9 a pr\u00f3xima.<\/p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Fri, 10 Jul 2015 11:12:35 +0000","created_by":1,"updated_at":"Fri, 06 May 2016 17:04:15 +0000","updated_by":1,"published_at":"Fri, 10 Jul 2015 11:12:35 +0000","published_by":1},{"id":461,"title":"Como criar um diretiva de m\u00e1scara no angular js","slug":"como-criar-um-diretiva-de-mascara-no-angular-js","markdown":"\nOl\u00e1s, no tutorial de hoje, vou mostrar como criar um diretiva bem simples utilizando Angular JS para colocar uma m\u00e1scara de telefone celular com o nono digito em um campo input text.\n\nPr\u00e9 requisito:\n\n- Angular JS;\n- JQuery;\n- JQuery Mask ([http:\/\/igorescobar.github.io\/jQuery-Mask-Plugin\/](http:\/\/igorescobar.github.io\/jQuery-Mask-Plugin\/));\n- Tutorial [Hello Angular JS](https:\/\/cezarcruz.com.br\/2014\/12\/hello-angular-js\/);\n\nPara criar uma diretiva, devemos definir ela no m\u00f3dulo usando \u201cdirective\u201d e passando uma function, que ser\u00e1 a diretiva de fato:\n\nangular.module(\"app\").directive(\"phoneDir\", PhoneDir); function PhoneDir() { return { link : function(scope, element, attrs) { var options = { onKeyPress: function(val, e, field, options) { putMask(); } } $(element).mask('(00) 00000-0000', options); function putMask() { var mask; var cleanVal = element[0].value.replace(\/\\D\/g, '');\/\/pega o valor sem mascara if(cleanVal.length > 10) {\/\/verifica a quantidade de digitos. mask = \"(00) 00000-0000\"; } else { mask = \"(00) 0000-00009\"; } $(element).mask(mask, options);\/\/aplica a mascara novamente } } } }\n\n- Na primeira linha definimos a diretiva dando o nome de \u201cphoneDir\u201d, lembrando que o nome deve ser camel case;\n- Na function \u00e9 onde definimos a diretiva;\n- Come\u00e7amos sempre com um return;\n- A chave link deve ser utilizada para diretivas que alteram o DOM;\n- O \u201coptions\u201d \u00e9 um objeto utilizado para o JQuery, no caso, estamos definindo que quando temos um evento \u201conKeyPress\u201d (quando teclamos algo), ser\u00e1 executado a function putMask;\n- Na primeira vez que a diretiva \u00e9 executada j\u00e1 definimos uma valor inicial para a m\u00e1scara e adicionamos o objeto \u201coptions\u201d ao elemento para come\u00e7armos a termos uma a\u00e7\u00e3o sempre que \u00e9 digitado algo no campo;\n- Por fim a function que define qual mascara devemos utilizar: a simples de 8 d\u00edgitos ou a de 9 d\u00edgitos;\n- Observa\u00e7\u00e3o: a m\u00e1scara \u00e9 atualizada sempre que \u00e9 digitado uma nova tecla;\n\nCom a diretiva pronta, \u00e9 hora de utilizarmos ela em um campo de texto, o que \u00e9 muito simples:\n\n<input type=\"text\" ng-model=\"phone\" phone-dir\/>\n\nNo elemento eu coloco a diretiva utilizando o seguinte padr\u00e3o:\n\n- Sempre letras minusculas;\n- Quando a diretiva tiver um nome composto (phoneDir), no elemento html devemos colocar ela em min\u00fasculo e onde tiver um letra mai\u00fascula colocamos um h\u00edfen (-) (phone-dir);\n\nPronto, uma forma simples de criar uma diretiva AngularJS.\n\nAt\u00e9 a pr\u00f3xima.\n\n\u00a0\n\n\n","html":"<p>Ol\u00e1s, no tutorial de hoje, vou mostrar como criar um diretiva bem simples utilizando Angular JS para colocar uma m\u00e1scara de telefone celular com o nono digito em um campo input text.<\/p>\n<p><!--more--><\/p>\n<p>Pr\u00e9 requisito:<\/p>\n<ul>\n<li>Angular JS;<\/li>\n<li>JQuery;<\/li>\n<li>JQuery Mask (<a href=\"http:\/\/igorescobar.github.io\/jQuery-Mask-Plugin\/\">http:\/\/igorescobar.github.io\/jQuery-Mask-Plugin\/<\/a>);<\/li>\n<li>Tutorial <a href=\"https:\/\/cezarcruz.com.br\/2014\/12\/hello-angular-js\/\">Hello Angular JS<\/a>;<\/li>\n<\/ul>\n<p>Para criar uma diretiva, devemos definir ela no m\u00f3dulo usando &#8220;directive&#8221; e passando uma function, que ser\u00e1 a diretiva de fato:<\/p>\n<pre class=\"lang:js decode:true\">angular.module(\"app\").directive(\"phoneDir\", PhoneDir);\r\n\r\n\r\nfunction PhoneDir() {\r\n  return {\r\n    link : function(scope, element, attrs) {\r\n        var options = {\r\n            onKeyPress: function(val, e, field, options) {\r\n                putMask();\r\n            }\r\n        }\r\n\r\n        $(element).mask('(00) 00000-0000', options);\r\n\r\n        function putMask() {\r\n            var mask;\r\n            var cleanVal = element[0].value.replace(\/\\D\/g, '');\/\/pega o valor sem mascara\r\n            if(cleanVal.length &gt; 10) {\/\/verifica a quantidade de digitos.\r\n                mask = \"(00) 00000-0000\";\r\n            } else {\r\n                mask = \"(00) 0000-00009\";\r\n            }\r\n            $(element).mask(mask, options);\/\/aplica a mascara novamente\r\n        }\r\n    }\r\n  }\r\n}<\/pre>\n<ul>\n<li>Na primeira linha definimos a diretiva dando o nome de &#8220;phoneDir&#8221;, lembrando que o nome deve ser camel case;<\/li>\n<li>Na function \u00e9 onde definimos a diretiva;<\/li>\n<li>Come\u00e7amos sempre com um return;<\/li>\n<li>A chave link deve ser utilizada para diretivas que alteram o DOM;<\/li>\n<li>O &#8220;options&#8221; \u00e9 um objeto utilizado para o JQuery, no caso, estamos definindo que quando temos um evento &#8220;onKeyPress&#8221; (quando teclamos algo), ser\u00e1 executado a function putMask;<\/li>\n<li>Na primeira vez que a diretiva \u00e9 executada j\u00e1 definimos uma valor inicial para a m\u00e1scara e adicionamos o objeto &#8220;options&#8221; ao elemento para come\u00e7armos a termos uma a\u00e7\u00e3o sempre que \u00e9 digitado algo no campo;<\/li>\n<li>Por fim a function que define qual mascara devemos utilizar: a simples de 8 d\u00edgitos ou a de 9 d\u00edgitos;<\/li>\n<li>Observa\u00e7\u00e3o: a m\u00e1scara \u00e9 atualizada sempre que \u00e9 digitado uma nova tecla;<\/li>\n<\/ul>\n<p>Com a diretiva pronta, \u00e9 hora de utilizarmos ela em um campo de texto, o que \u00e9 muito simples:<\/p>\n<pre class=\"lang:default decode:true \">&lt;input type=\"text\" ng-model=\"phone\" phone-dir\/&gt;<\/pre>\n<p>No elemento eu coloco a diretiva utilizando o seguinte padr\u00e3o:<\/p>\n<ul>\n<li>Sempre letras minusculas;<\/li>\n<li>Quando a diretiva tiver um nome composto (phoneDir), no elemento html devemos colocar ela em min\u00fasculo e onde tiver um letra mai\u00fascula colocamos um h\u00edfen (-) (phone-dir);<\/li>\n<\/ul>\n<p>Pronto, uma forma simples de criar uma diretiva AngularJS.<\/p>\n<p>At\u00e9 a pr\u00f3xima.<\/p>\n<p>&nbsp;<\/p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Sun, 13 Sep 2015 17:24:18 +0000","created_by":1,"updated_at":"Fri, 06 May 2016 17:02:06 +0000","updated_by":1,"published_at":"Sun, 13 Sep 2015 17:24:18 +0000","published_by":1},{"id":522,"title":"How to create a Sails.JS start app","slug":"how-to-create-a-sails-js-start-app","markdown":"\nHello folks.\n\nFor this post i think doing something different. I will try to write this post in English. Any question, please, chat me. Thanks.\n\nWhat is Sails.JS?\n\n> Sails makes it easy to build custom, enterprise-grade Node.js apps. ([http:\/\/sailsjs.org\/](http:\/\/sailsjs.org\/))\n\nFirst of all, we will need node and npm installed, so, follow this guide to do it: [https:\/\/nodejs.org\/en\/download\/package-manager\/](https:\/\/nodejs.org\/en\/download\/package-manager\/) . Now, we can install Sails.JS:\n\nnpm -g install sails\n\nThis step maybe need a while.\n\nTo verify if Sails is installed, you can do that:\n\nsails --version\n\nIf you see something like \u201c0.12.3\u201d, Well done, Sails is installed. Next step is create an app, to do this, you must run that:\n\nsails new sailsapp\n\nThis command will take a while, because it will create a folder with basic structure of Sails and install your dependencies. When the command ends, you can see follow message and the app folder:\n\ninfo: Created a new Sails app `sailsapp`!\n\nIn this new folder, will can see the files created by Sails. To run our app, you need to execute this command:\n\nsails lift\n\nThis time, the command will be executed fast, so,\u00a0<span class=\"short_text\" id=\"result_box\" lang=\"en\"><span class=\"\">quickly<\/span><\/span> you can see a message saying something like that:\n\n... debug: Environment : development debug: Port : 1337 ...\n\nThe most important part of this message is the Sails port, to check your new app, you just need access this URL: http:\/\/localhost:1337\/\n\nNow we can add a simple endpoint just running this command (before run this command, you need stop Sails server with a \u201cCtrl+C\u201d):\n\n`sails generate api Hello`\n\nThis command will generate two files:\n\n- HelloController.js (app\/controllers) - A common empty controller file.\n- Hello.js (api\/models\/) - A common empty model file.\n\nTo create a new endpoint, you need to edit the HelloController.js and add the code bellow:\n\nmodule.exports = { action: function (req, res) { return res.send('Hello!'); } };\n\nIn this code, \u201caction\u201d is the name of the endpoint. The endpoint will be composed by: Controller name (without \u2018Controller\u2019) and the action name, in our case, will be: [http:\/\/localhost:1337\/hello\/action](http:\/\/localhost:1337\/hello\/action)\n\nNow you can start Sails again, but this time, it will ask you what to do with Model. To this example, you just need answer \u201c2\u201d, then, your app will start normally.\n\nNow, go to [http:\/\/localhost:1337\/hello\/action ](http:\/\/localhost:1337\/hello\/action), and you will see the \u201cHello!\u201d message.\n\nFor now, this is it! Thank you!\n\n**References**\n\n- [http:\/\/sailsjs.org\/](http:\/\/sailsjs.org\/)\n- [http:\/\/sailsjs.org\/documentation\/concepts\/](http:\/\/sailsjs.org\/documentation\/concepts\/)\n- [http:\/\/sailsjs.org\/get-started](http:\/\/sailsjs.org\/get-started)\n\n\n","html":"<p>Hello folks.<\/p>\n<p>For this post i think doing something different. I will try to write this post in English. Any question, please, chat me. Thanks.<\/p>\n<p><!--more--><\/p>\n<p>What is Sails.JS?<\/p>\n<blockquote><p>Sails makes it easy to build custom, enterprise-grade Node.js apps. (<a href=\"http:\/\/sailsjs.org\/\">http:\/\/sailsjs.org\/<\/a>)<\/p><\/blockquote>\n<p>First of all, we will need node and npm installed, so, follow this guide to do it: <a href=\"https:\/\/nodejs.org\/en\/download\/package-manager\/\">https:\/\/nodejs.org\/en\/download\/package-manager\/<\/a> . Now, we can install Sails.JS:<\/p>\n<pre>npm -g install sails<\/pre>\n<p>This step maybe need a while.<\/p>\n<p>To verify if Sails is installed, you can do that:<\/p>\n<pre>sails --version<\/pre>\n<p>If you see something like &#8220;0.12.3&#8221;, Well done, Sails is installed. Next step is create an app, to do this, you must run that:<\/p>\n<pre>sails new sailsapp<\/pre>\n<p>This command will take a while, because it will create a folder with basic structure of Sails and install your dependencies. When the command ends, you can see follow message and the app folder:<\/p>\n<pre>info: Created a new Sails app `sailsapp`!<\/pre>\n<p>In this new folder, will can see the files created by Sails. To run our app, you need to execute this command:<\/p>\n<pre>sails lift<\/pre>\n<p>This time, the command will be executed fast, so,\u00a0<span id=\"result_box\" class=\"short_text\" lang=\"en\"><span class=\"\">quickly<\/span><\/span> you can see a message saying something like that:<\/p>\n<pre>...\r\ndebug: Environment : development\r\ndebug: Port        : 1337\r\n...\r\n<\/pre>\n<p>The most important part of this message is the Sails port, to check your new app, you just need access this URL: http:\/\/localhost:1337\/<\/p>\n<p>Now we can add a simple endpoint just running this command (before run this command, you need stop Sails server with a &#8220;Ctrl+C&#8221;):<\/p>\n<p><code>sails generate api Hello<\/code><\/p>\n<p>This command will generate two files:<\/p>\n<ul>\n<li>HelloController.js (app\/controllers)\n<ul>\n<li>A common empty controller file.<\/li>\n<\/ul>\n<\/li>\n<li>Hello.js (api\/models\/)\n<ul>\n<li>A common empty model file.<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n<p>To create a new endpoint, you need to edit the HelloController.js and add the code bellow:<\/p>\n<pre>module.exports = {\r\n        action: function (req, res) {\r\n                return res.send('Hello!');\r\n        }\r\n};\r\n<\/pre>\n<p>In this code, &#8220;action&#8221; is the name of the endpoint. The endpoint will be composed by: Controller name (without &#8216;Controller&#8217;) and the action name, in our case, will be: <a href=\"http:\/\/localhost:1337\/hello\/action\">http:\/\/localhost:1337\/hello\/action<\/a><\/p>\n<p>Now you can start Sails again, but this time, it will ask you what to do with Model. To this example, you just need answer &#8220;2&#8221;, then, your app will start normally.<\/p>\n<p>Now, go to <a href=\"http:\/\/localhost:1337\/hello\/action\">http:\/\/localhost:1337\/hello\/action <\/a>, and you will see the &#8220;Hello!&#8221; message.<\/p>\n<p>For now, this is it! Thank you!<\/p>\n<p><strong>References<\/strong><\/p>\n<ul>\n<li><a href=\"http:\/\/sailsjs.org\/\">http:\/\/sailsjs.org\/<\/a><\/li>\n<li><a href=\"http:\/\/sailsjs.org\/documentation\/concepts\/\">http:\/\/sailsjs.org\/documentation\/concepts\/<\/a><\/li>\n<li><a href=\"http:\/\/sailsjs.org\/get-started\">http:\/\/sailsjs.org\/get-started<\/a><\/li>\n<\/ul>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Mon, 16 May 2016 12:39:06 +0000","created_by":1,"updated_at":"Mon, 16 May 2016 15:20:23 +0000","updated_by":1,"published_at":"Mon, 16 May 2016 12:39:06 +0000","published_by":1},{"id":532,"title":"Usando component no Angular 1.5","slug":"usando-component-no-angular-1-5","markdown":"\nOl\u00e1,\n\nHoje vamos ver uma forma de usar uma nova funcionalidade do Angular 1, o component.\n\nO component \u00e9 um tipo especial de diretiva, que permite criar, de uma forma simplificada, web components e pavimentar o caminho para uma futura migra\u00e7\u00e3o para o Angular 2. Para mim a principal vantagem \u00e9 poder criar pe\u00e7as de c\u00f3digos reaproveit\u00e1veis de uma maneira bem mais simples que criar uma diretiva e suas configura\u00e7\u00f5es complexas (manipula\u00e7\u00e3o de DOM ainda precisa ser feito por diretivas =\/).\n\nPara esse tutorial, o primeiro passo\u00a0\u00e9 criar um controller:  \n```\n<br><\/br>\n(function() {<br><\/br>\nangular.module('home-module').controller('HomeController', HomeController);<br><\/br>\nfunction HomeController() {<br><\/br>\nthis.valor = 'Blog do Cezar';<br><\/br>\n}<br><\/br>\n})();<br><\/br>```\n\nEsse \u00e9 um controller comum, que j\u00e1 estamos acostumados a criar no angular. O \u00fanico ponto de aten\u00e7\u00e3o \u00e9 quanto ao \u2018this\u2019, ao inv\u00e9s de utilizarmos \u2018$scope\u2019, podemos adicionar os valores direto no \u2018this\u2019, abaixo mostro como ele \u00e9 carregado no template.\n\nAgora que temos um controller, vamos criar um template para mostrar o nosso valor na tela:  \n``\n\n<div>{{ ::vm.valor }}<\/div>\u00a0\n\nNo nosso arquivo \u2018home.html\u2019, usamos a mesmas sintaxe que estamos acostumados, repare que usamos o \u2018vm\u2019 antes da vari\u00e1vel que declaramos no controller, no c\u00f3digo abaixo mostro o motivo ;).\n\nDepois de criarmos o controller e a view, vamos finalmente criar o nosso component, veja:\n\n```\nangular.module('home-module').component('homeModule', {<br><\/br>\ntemplateUrl: 'home.html',<br><\/br>\ncontroller: 'HomeController as vm',<br><\/br>\n});<br><\/br>```\n\nPara criarmos o component, basta colocar o \u2018.component\u2019 no modulo, como par\u00e2metros, ele recebe o nome e um objeto com as configura\u00e7\u00f5es do componente. O nome do componente segue o mesmo padr\u00e3o das diretivas:\n\nNome: **homeModule**  \n Referencia em outras partes da aplica\u00e7\u00e3o: **home-module**\n\nO par\u00e2metro \u2018templateUrl\u2019 passamos o caminho da view que criamos anteriormente. Podemos tamb\u00e9m, substituir esse par\u00e2metro por \u2018templatle\u2019 e colocar a view diretamente inline, para algo pequeno, me parece muito bom.\n\nPor fim, o par\u00e2metro \u2018controller\u2019, que como o nome sugere, injetamos o controller no nosso component, repare que adicionamos os valores \u2018as vm\u2019 junto ao controller, \u00e9 assim que definimos que o \u2018this\u2019, do controller, \u00e9 referenciado na view como \u2018vm\u2019, se adicionarmos apenas o nome do controller, o Angular infere que voc\u00ea ir\u00e1 utilizar \u2018$ctrl\u2019 na view.\n\nE por fim, para adicionarmos nosso component na aplica\u00e7\u00e3o, podemos fazer igual far\u00edamos normalmente com uma diretiva \u2018<home-module><\/home-module>\u2019 ou adicionar ele como uma uma rota, assim:\n\n```\n$routeProvider.when('\/home', {<br><\/br>\ntemplate: '```\n<home-module><\/home-module>```\n'<br><\/br>\n});<br><\/br>```\n\nE\u2019 isso ai, simples e f\u00e1cil.\n\nEspero que ajude, abra\u00e7os!\n\n**Referencias**\n\n[https:\/\/toddmotto.com\/exploring-the-angular-1-5-component-method\/  \n https:\/\/docs.angularjs.org\/guide\/component](https:\/\/docs.angularjs.org\/guide\/component)\n\n\n","html":"<p>Ol\u00e1,<\/p>\n<p>Hoje vamos ver uma forma de usar uma nova funcionalidade do Angular 1, o component.<\/p>\n<p>O component \u00e9 um tipo especial de diretiva, que permite criar, de uma forma simplificada, web components e pavimentar o caminho para uma futura migra\u00e7\u00e3o para o Angular 2. Para mim a principal vantagem \u00e9 poder criar pe\u00e7as de c\u00f3digos reaproveit\u00e1veis de uma maneira bem mais simples que criar uma diretiva e suas configura\u00e7\u00f5es complexas (manipula\u00e7\u00e3o de DOM ainda precisa ser feito por diretivas =\/).<\/p>\n<p><!--more--><\/p>\n<p>Para esse tutorial, o primeiro passo\u00a0\u00e9 criar um controller:<br \/>\n<code><br \/>\n(function() {<br \/>\nangular.module('home-module').controller('HomeController', HomeController);<br \/>\nfunction HomeController() {<br \/>\nthis.valor = 'Blog do Cezar';<br \/>\n}<br \/>\n})();<br \/>\n<\/code><\/p>\n<p>Esse \u00e9 um controller comum, que j\u00e1 estamos acostumados a criar no angular. O \u00fanico ponto de aten\u00e7\u00e3o \u00e9 quanto ao &#8216;this&#8217;, ao inv\u00e9s de utilizarmos &#8216;$scope&#8217;, podemos adicionar os valores direto no &#8216;this&#8217;, abaixo mostro como ele \u00e9 carregado no template.<\/p>\n<p>Agora que temos um controller, vamos criar um template para mostrar o nosso valor na tela:<br \/>\n<code><\/code><\/p>\n<div>{{ ::vm.valor }}<\/div>\n<p>&nbsp;<\/p>\n<p>No nosso arquivo &#8216;home.html&#8217;, usamos a mesmas sintaxe que estamos acostumados, repare que usamos o &#8216;vm&#8217; antes da vari\u00e1vel que declaramos no controller, no c\u00f3digo abaixo mostro o motivo ;).<\/p>\n<p>Depois de criarmos o controller e a view, vamos finalmente criar o nosso component, veja:<\/p>\n<p><code>angular.module('home-module').component('homeModule', {<br \/>\ntemplateUrl: 'home.html',<br \/>\ncontroller: 'HomeController as vm',<br \/>\n});<br \/>\n<\/code><\/p>\n<p>Para criarmos o component, basta colocar o &#8216;.component&#8217; no modulo, como par\u00e2metros, ele recebe o nome e um objeto com as configura\u00e7\u00f5es do componente. O nome do componente segue o mesmo padr\u00e3o das diretivas:<\/p>\n<p>Nome: <strong>homeModule<\/strong><br \/>\nReferencia em outras partes da aplica\u00e7\u00e3o: <strong>home-module<\/strong><\/p>\n<p>O par\u00e2metro &#8216;templateUrl&#8217; passamos o caminho da view que criamos anteriormente. Podemos tamb\u00e9m, substituir esse par\u00e2metro por &#8216;templatle&#8217; e colocar a view diretamente inline, para algo pequeno, me parece muito bom.<\/p>\n<p>Por fim, o par\u00e2metro &#8216;controller&#8217;, que como o nome sugere, injetamos o controller no nosso component, repare que adicionamos os valores &#8216;as vm&#8217; junto ao controller, \u00e9 assim que definimos que o &#8216;this&#8217;, do controller, \u00e9 referenciado na view como &#8216;vm&#8217;, se adicionarmos apenas o nome do controller, o Angular infere que voc\u00ea ir\u00e1 utilizar &#8216;$ctrl&#8217; na view.<\/p>\n<p>E por fim, para adicionarmos nosso component na aplica\u00e7\u00e3o, podemos fazer igual far\u00edamos normalmente com uma diretiva &#8216;&lt;home-module&gt;&lt;\/home-module&gt;&#8217; ou adicionar ele como uma uma rota, assim:<\/p>\n<p><code>$routeProvider.when('\/home', {<br \/>\ntemplate: '<\/code>&lt;home-module&gt;&lt;\/home-module&gt;<code>'<br \/>\n});<br \/>\n<\/code><\/p>\n<p>E&#8217; isso ai, simples e f\u00e1cil.<\/p>\n<p>Espero que ajude, abra\u00e7os!<\/p>\n<p><strong>Referencias<\/strong><\/p>\n<p><a href=\"https:\/\/docs.angularjs.org\/guide\/component\">https:\/\/toddmotto.com\/exploring-the-angular-1-5-component-method\/<br \/>\nhttps:\/\/docs.angularjs.org\/guide\/component<\/a><\/p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Tue, 21 Jun 2016 22:55:53 +0000","created_by":1,"updated_at":"Mon, 04 Jul 2016 10:09:15 +0000","updated_by":1,"published_at":"Tue, 21 Jun 2016 22:55:53 +0000","published_by":1}],"tags":[],"posts_tags":[],"users":[{"id":1,"slug":"ccruz","bio":false,"website":"http:\/\/cezarcruz.com.br","created_at":"Tue, 16 Sep 2014 13:34:28 +0000","created_by":1,"email":"cezarcruz@outlook.com","name":"ccruz"},{"id":2,"slug":"mgustavocoder","bio":false,"website":"","created_at":"Fri, 04 Dec 2015 11:07:31 +0000","created_by":1,"email":"mgustavocoder@gmail.com","name":"mgustavocoder"}]},"meta":{"exported_on":"Sat, 23 Jul 2016 20:32:48 +0000","version":"000"}}