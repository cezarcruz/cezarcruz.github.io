<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>.Net on Blog do Cezar</title>
    <link>https://cezarcruz.com.br/tags/.net/</link>
    <description>Recent content in .Net on Blog do Cezar</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-BR</language>
    <lastBuildDate>Fri, 13 Sep 2013 12:37:24 +0000</lastBuildDate>
    
	<atom:link href="https://cezarcruz.com.br/tags/.net/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Como utilizar _Layout.cshtml no ASP.NET MVC 4</title>
      <link>https://cezarcruz.com.br/como-utilizar-_layout-cshtml-no-asp-net-mvc-4/</link>
      <pubDate>Fri, 13 Sep 2013 12:37:24 +0000</pubDate>
      
      <guid>https://cezarcruz.com.br/como-utilizar-_layout-cshtml-no-asp-net-mvc-4/</guid>
      <description>&lt;p&gt;Nesse tutorial vamos aprender como utilizar o arquivo de _Layout.cshtml no nosso &lt;a href=&#34;https://cezarcruz.com.br/blog/2013/09/criando-o-primeiro-projeto-aspnet-mvc-com-csharp/&#34; target=&#34;_blank&#34;&gt;primeiro projeto MVC 4&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Assim como no Web Forms com seu Master Page, o MVC tem o seu arquivo master também, porém ele é chamado de _Layout.cshtml, nele colocamos nosso layout padrão de páginas.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Pegando valores via Url (GET) usando CSharp ou VB.NET</title>
      <link>https://cezarcruz.com.br/pegando-valores-via-url-get-usando-csharp-ou-vb-net/</link>
      <pubDate>Mon, 09 Sep 2013 18:26:46 +0000</pubDate>
      
      <guid>https://cezarcruz.com.br/pegando-valores-via-url-get-usando-csharp-ou-vb-net/</guid>
      <description>Dica rápida pra pegar valores (GET) em urls em ASP .NET:
Temos o seguinte link:
http://exemplo.com/pag.aspx?rel=valor&amp;amp;lang=br
Pra pegar o valor utilizando csharp:
string valor = Request.QueryString[&#34;rel&#34;]; Ou:
foreach(string params in Request.QueryString) { Response.write(Request.QueryString[params]) } Pra pegar o valor utilizando VB.NET:
Dim valar As String = Request.QueryString(&#34;rel&#34;) Ou:
For Each param As String In Request.QueryString() Response.Write(Request.QueryString(param)) Next Fácil fácil, até.</description>
    </item>
    
    <item>
      <title>Criando o primeiro projeto ASPNET MVC com CSharp</title>
      <link>https://cezarcruz.com.br/criando-o-primeiro-projeto-aspnet-mvc-com-csharp/</link>
      <pubDate>Mon, 02 Sep 2013 12:31:21 +0000</pubDate>
      
      <guid>https://cezarcruz.com.br/criando-o-primeiro-projeto-aspnet-mvc-com-csharp/</guid>
      <description>&lt;p&gt;Fala pessoal,&lt;/p&gt;

&lt;p&gt;nesse post vou mostrar como criar a nossa primeira página ASP.NET MVC.&lt;/p&gt;

&lt;p&gt;Não vou entrar em detalhes da tecnologia, mas pelo pouco que estou aprendendo, acredito ser uma boa área de estudo, quem vem do Web Forms vai sentir um pouco de dificuldade, mas rapidinho pega o jeito, vamos lá:&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Dica: CMS para blog utilizando ASP.NET / CSharp</title>
      <link>https://cezarcruz.com.br/dica-cms-para-blog-utilizando-aspnet-csharp/</link>
      <pubDate>Mon, 05 Aug 2013 18:53:22 +0000</pubDate>
      
      <guid>https://cezarcruz.com.br/dica-cms-para-blog-utilizando-aspnet-csharp/</guid>
      <description>O CMS que irei mostrar aqui é o BlogEngine, feito em CSharp e roda no IIS, uma boa alternativa ao WordPress para que usar servidor Windows.
O BlogEngine é uma ferramenta grátis para criação de blogs, que utiliza ASP.NET/CSharp no seu código fonte e para o armazenamento de dados utiliza como padrão arquivos XML.
É muito útil pra quem quer ter um blog e não quer usar o WordPress ou mesmo não sabia que existe esse tipo de ferramentas em .</description>
    </item>
    
    <item>
      <title>Como parar um serviço Windows utilizando CSharp</title>
      <link>https://cezarcruz.com.br/como-parar-um-servico-windows-utilizando-csharp/</link>
      <pubDate>Fri, 21 Jun 2013 12:22:39 +0000</pubDate>
      
      <guid>https://cezarcruz.com.br/como-parar-um-servico-windows-utilizando-csharp/</guid>
      <description>Saindo um pouco do PHP, vamos para a plataforma .NET, nesse tutorial (guia rápido hehhehe), vou ensinar como parar e subir um serviço Windows utilizando CSharp, vamos lá.
Primeiro, vamos intanciar o ServiceController passando como o parâmetro o nome do serviço que iremos gerenciar
using System.ServiceProcess; ServiceController service = new ServiceController(&#34;xxxservico&#34;); Aqui como paramos o serviço
if (service.Status.Equals(ServiceControllerStatus.Running)) service.Stop();   Primeiro, verificamos se o serviço e está rodando Coso ele esteja, paramos ele usando o metodo Stop.</description>
    </item>
    
  </channel>
</rss>